<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="4326px" preserveAspectRatio="none" style="width:9556px;height:4326px;background:#FFFFFF;" version="1.1" viewBox="0 0 9556 4326" width="9556px" zoomAndPan="magnify"><defs/><g><!--class BoardRenderer--><g id="elem_BoardRenderer"><rect codeLine="4" fill="#F1F1F1" height="243.5625" id="BoardRenderer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="913" x="2951.5" y="1292.5"/><ellipse cx="3350.75" cy="1308.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3353.7188,1314.1406 Q3353.1406,1314.4375 3352.5,1314.5781 Q3351.8594,1314.7344 3351.1563,1314.7344 Q3348.6563,1314.7344 3347.3281,1313.0938 Q3346.0156,1311.4375 3346.0156,1308.3125 Q3346.0156,1305.1875 3347.3281,1303.5313 Q3348.6563,1301.875 3351.1563,1301.875 Q3351.8594,1301.875 3352.5,1302.0313 Q3353.1563,1302.1875 3353.7188,1302.4844 L3353.7188,1305.2031 Q3353.0938,1304.625 3352.5,1304.3594 Q3351.9063,1304.0781 3351.2813,1304.0781 Q3349.9375,1304.0781 3349.25,1305.1563 Q3348.5625,1306.2188 3348.5625,1308.3125 Q3348.5625,1310.4063 3349.25,1311.4844 Q3349.9375,1312.5469 3351.2813,1312.5469 Q3351.9063,1312.5469 3352.5,1312.2813 Q3353.0938,1312 3353.7188,1311.4219 L3353.7188,1314.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="106" x="3371.25" y="1313.3467">BoardRenderer</text><line style="stroke:#181818;stroke-width:0.5;" x1="2952.5" x2="3863.5" y1="1324.5" y2="1324.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2959.5" y="1335.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="270" x="2971.5" y="1341.4951">std::shared_ptr&lt;ClientManager&gt; client</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2959.5" y="1351.4453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="254" x="2971.5" y="1357.792">std::shared_ptr&lt;TetrisBoard&gt; board</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2959.5" y="1367.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="448" x="2971.5" y="1374.0889">std::vector&lt;std::vector&lt;std::shared_ptr&lt;CellRenderer&gt;&gt;&gt; grid</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2959.5" y="1384.0391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="221" x="2971.5" y="1390.3857">mutable std::mutex boardMutex</text><line style="stroke:#181818;stroke-width:0.5;" x1="2952.5" x2="3863.5" y1="1397.6875" y2="1397.6875"/><ellipse cx="2962.5" cy="1411.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="887" x="2971.5" y="1414.6826">BoardRenderer(std::shared_ptr&lt;ClientManager&gt; client, std::shared_ptr&lt;TetrisBoard&gt; tetrisBoard, const sf::Vector2u initialSize)</text><ellipse cx="2962.5" cy="1427.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="128" x="2971.5" y="1430.9795">~BoardRenderer()</text><ellipse cx="2962.5" cy="1443.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="618" x="2971.5" y="1447.2764">void updateBoardFromJson(const nlohmann::json &amp;boardData, sf::RenderTarget &amp;target)</text><ellipse cx="2962.5" cy="1460.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="320" x="2971.5" y="1463.5732">void updateSize(const sf::Vector2u a) override</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="2971.5" y="1479.8701">&#160;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2959.5" y="1489.8203"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="288" x="2971.5" y="1496.167">void initializeShapes(const sf::Vector2u a)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2959.5" y="1506.1172"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="342" x="2971.5" y="1512.4639">float computeCellSize(const sf::Vector2u a) const</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2959.5" y="1522.4141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="525" x="2971.5" y="1528.7607">void draw(sf::RenderTarget &amp;target, sf::RenderStates states) const override</text></g><!--class Resizeable--><g id="elem_Resizeable"><rect codeLine="308" fill="#F1F1F1" height="129.4844" id="Resizeable" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="359" x="3656.5" y="2690.5"/><ellipse cx="3793.75" cy="2706.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3796.7188,2712.1406 Q3796.1406,2712.4375 3795.5,2712.5781 Q3794.8594,2712.7344 3794.1563,2712.7344 Q3791.6563,2712.7344 3790.3281,2711.0938 Q3789.0156,2709.4375 3789.0156,2706.3125 Q3789.0156,2703.1875 3790.3281,2701.5313 Q3791.6563,2699.875 3794.1563,2699.875 Q3794.8594,2699.875 3795.5,2700.0313 Q3796.1563,2700.1875 3796.7188,2700.4844 L3796.7188,2703.2031 Q3796.0938,2702.625 3795.5,2702.3594 Q3794.9063,2702.0781 3794.2813,2702.0781 Q3792.9375,2702.0781 3792.25,2703.1563 Q3791.5625,2704.2188 3791.5625,2706.3125 Q3791.5625,2708.4063 3792.25,2709.4844 Q3792.9375,2710.5469 3794.2813,2710.5469 Q3794.9063,2710.5469 3795.5,2710.2813 Q3796.0938,2710 3796.7188,2709.4219 L3796.7188,2712.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="76" x="3814.25" y="2711.3467">Resizeable</text><line style="stroke:#181818;stroke-width:0.5;" x1="3657.5" x2="4014.5" y1="2722.5" y2="2722.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="3657.5" x2="4014.5" y1="2730.5" y2="2730.5"/><ellipse cx="3667.5" cy="2744.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="86" x="3676.5" y="2747.4951">Resizeable()</text><ellipse cx="3667.5" cy="2760.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="3676.5" y="2763.792">~Resizeable()</text><ellipse cx="3667.5" cy="2776.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="259" x="3676.5" y="2780.0889">void onResize(sf::Event::SizeEvent e)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="3676.5" y="2796.3857">&#160;</text><polygon fill="#FFFF44" points="3667.5,2804.3359,3671.5,2808.3359,3667.5,2812.3359,3663.5,2808.3359" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="333" x="3676.5" y="2812.6826">virtual void updateSize(const sf::Vector2u a) = 0</text></g><!--class ClientManager--><g id="elem_ClientManager"><rect codeLine="258" fill="#F1F1F1" height="683.5781" id="ClientManager" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="665" x="4628.5" y="1645"/><ellipse cx="4907.25" cy="1661" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4910.2188,1666.6406 Q4909.6406,1666.9375 4909,1667.0781 Q4908.3594,1667.2344 4907.6563,1667.2344 Q4905.1563,1667.2344 4903.8281,1665.5938 Q4902.5156,1663.9375 4902.5156,1660.8125 Q4902.5156,1657.6875 4903.8281,1656.0313 Q4905.1563,1654.375 4907.6563,1654.375 Q4908.3594,1654.375 4909,1654.5313 Q4909.6563,1654.6875 4910.2188,1654.9844 L4910.2188,1657.7031 Q4909.5938,1657.125 4909,1656.8594 Q4908.4063,1656.5781 4907.7813,1656.5781 Q4906.4375,1656.5781 4905.75,1657.6563 Q4905.0625,1658.7188 4905.0625,1660.8125 Q4905.0625,1662.9063 4905.75,1663.9844 Q4906.4375,1665.0469 4907.7813,1665.0469 Q4908.4063,1665.0469 4909,1664.7813 Q4909.5938,1664.5 4910.2188,1663.9219 L4910.2188,1666.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="99" x="4927.75" y="1665.8467">ClientManager</text><line style="stroke:#181818;stroke-width:0.5;" x1="4629.5" x2="5292.5" y1="1677" y2="1677"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4636.5" y="1687.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="135" x="4648.5" y="1693.9951">bool debugEnabled</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4636.5" y="1703.9453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="151" x="4648.5" y="1710.292">ENetPeer *serverPeer</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4636.5" y="1720.2422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="224" x="4648.5" y="1726.5889">std::atomic&lt;bool&gt; isConnected</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4636.5" y="1736.5391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="99" x="4648.5" y="1742.8857">PlayerData me</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4636.5" y="1752.8359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="128" x="4648.5" y="1759.1826">GameStatus score</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4636.5" y="1769.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="117" x="4648.5" y="1775.4795">PlayerList players</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4636.5" y="1785.4297"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="222" x="4648.5" y="1791.7764">std::mutex nextTetrominoMutex</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4636.5" y="1801.7266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="158" x="4648.5" y="1808.0732">std::mutex getIDMutex</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4636.5" y="1818.0234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="343" x="4648.5" y="1824.3701">ThreadSafeQueue&lt;nlohmann::json&gt; boardBuffer</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4636.5" y="1834.3203"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="403" x="4648.5" y="1840.667">ThreadSafeQueue&lt;nlohmann::json&gt; endGameDataBuffer</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4636.5" y="1850.6172"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="198" x="4648.5" y="1856.9639">std::thread ThreadHeartbeat</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4636.5" y="1866.9141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="291" x="4648.5" y="1873.2607">std::atomic&lt;bool&gt; HeartBeatRunningFlag</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4636.5" y="1883.2109"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="201" x="4648.5" y="1889.5576">unsigned long last_heartbeat</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4636.5" y="1899.5078"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="467" x="4648.5" y="1905.8545">ThreadSafeQueue&lt;std::shared_ptr&lt;Tetromino&gt;&gt; next_tetrominos</text><line style="stroke:#181818;stroke-width:0.5;" x1="4629.5" x2="5292.5" y1="1913.1563" y2="1913.1563"/><ellipse cx="4639.5" cy="1926.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="109" x="4648.5" y="1930.1514">ClientManager()</text><ellipse cx="4639.5" cy="1943.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="121" x="4648.5" y="1946.4482">~ClientManager()</text><ellipse cx="4639.5" cy="1959.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="293" x="4648.5" y="1962.7451">const GameStatus &amp;getGameData() const</text><ellipse cx="4639.5" cy="1975.6953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="133" x="4648.5" y="1979.042">void toggleDebug()</text><ellipse cx="4639.5" cy="1991.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="191" x="4648.5" y="1995.3389">void on_receive_heartbeat()</text><ellipse cx="4639.5" cy="2008.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="316" x="4648.5" y="2011.6357">void on_receive_score(const Packet &amp;packet)</text><ellipse cx="4639.5" cy="2024.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="344" x="4648.5" y="2027.9326">void on_receive_player_list(const Packet &amp;packet)</text><ellipse cx="4639.5" cy="2040.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="371" x="4648.5" y="2044.2295">void on_receive_game_screen(const Packet &amp;packet)</text><ellipse cx="4639.5" cy="2057.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="359" x="4648.5" y="2060.5264">void on_receive_end_screen(const Packet &amp;packet)</text><ellipse cx="4639.5" cy="2073.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="381" x="4648.5" y="2076.8232">void on_receive_next_tetromino(const Packet &amp;packet)</text><ellipse cx="4639.5" cy="2089.7734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="337" x="4648.5" y="2093.1201">void on_receive_player_id(const Packet &amp;packet)</text><ellipse cx="4639.5" cy="2106.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="411" x="4648.5" y="2109.417">void on_receive_background_sound(const Packet &amp;packet)</text><ellipse cx="4639.5" cy="2122.3672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="175" x="4648.5" y="2125.7139">void TaskStartHeartbeat()</text><ellipse cx="4639.5" cy="2138.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="143" x="4648.5" y="2142.0107">void TaskHeartbeat()</text><ellipse cx="4639.5" cy="2154.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="175" x="4648.5" y="2158.3076">void TaskStopHeartbeat()</text><ellipse cx="4639.5" cy="2171.2578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="582" x="4648.5" y="2174.6045">void connect(const std::string &amp;serverAddress = "localhost", uint16_t port = 12345)</text><ellipse cx="4639.5" cy="2187.5547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="119" x="4648.5" y="2190.9014">void disconnect()</text><ellipse cx="4639.5" cy="2203.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="175" x="4648.5" y="2207.1982">bool IsConnected() const</text><ellipse cx="4639.5" cy="2220.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="177" x="4648.5" y="2223.4951">PlayerList &amp;getPlayerList()</text><ellipse cx="4639.5" cy="2236.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="274" x="4648.5" y="2239.792">bool hasBoard(nlohmann::json &amp;board)</text><ellipse cx="4639.5" cy="2252.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="333" x="4648.5" y="2256.0889">bool hasEndGameData(nlohmann::json &amp;board)</text><ellipse cx="4639.5" cy="2269.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="180" x="4648.5" y="2272.3857">void request_game_start()</text><ellipse cx="4639.5" cy="2285.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="272" x="4648.5" y="2288.6826">void onPressKey(sf::Event::KeyEvent e)</text><ellipse cx="4639.5" cy="2301.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="87" x="4648.5" y="2304.9795">int getMyID()</text><ellipse cx="4639.5" cy="2317.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="639" x="4648.5" y="2321.2764">static void printMatrix(const std::vector&lt;std::vector&lt;int&gt;&gt; &amp;matrix, const std::string &amp;label)</text></g><!--class TetrisBoard--><g id="elem_TetrisBoard"><rect codeLine="590" fill="#F1F1F1" height="308.75" id="TetrisBoard" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="456" x="2069" y="2600.5"/><ellipse cx="2252.75" cy="2616.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2255.7188,2622.1406 Q2255.1406,2622.4375 2254.5,2622.5781 Q2253.8594,2622.7344 2253.1563,2622.7344 Q2250.6563,2622.7344 2249.3281,2621.0938 Q2248.0156,2619.4375 2248.0156,2616.3125 Q2248.0156,2613.1875 2249.3281,2611.5313 Q2250.6563,2609.875 2253.1563,2609.875 Q2253.8594,2609.875 2254.5,2610.0313 Q2255.1563,2610.1875 2255.7188,2610.4844 L2255.7188,2613.2031 Q2255.0938,2612.625 2254.5,2612.3594 Q2253.9063,2612.0781 2253.2813,2612.0781 Q2251.9375,2612.0781 2251.25,2613.1563 Q2250.5625,2614.2188 2250.5625,2616.3125 Q2250.5625,2618.4063 2251.25,2619.4844 Q2251.9375,2620.5469 2253.2813,2620.5469 Q2253.9063,2620.5469 2254.5,2620.2813 Q2255.0938,2620 2255.7188,2619.4219 L2255.7188,2622.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="2273.25" y="2621.3467">TetrisBoard</text><line style="stroke:#181818;stroke-width:0.5;" x1="2070" x2="2524" y1="2632.5" y2="2632.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2077" y="2643.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="103" x="2089" y="2649.4951">Logger *logger</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2077" y="2659.4453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="58" x="2089" y="2665.792">int width</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2077" y="2675.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="65" x="2089" y="2682.0889">int height</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2077" y="2692.0391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="383" x="2089" y="2698.3857">std::vector&lt;std::vector&lt;std::shared_ptr&lt;Cell&gt;&gt;&gt; grid</text><line style="stroke:#181818;stroke-width:0.5;" x1="2070" x2="2524" y1="2705.6875" y2="2705.6875"/><ellipse cx="2080" cy="2719.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="160" x="2089" y="2722.6826">TetrisBoard(int h, int w)</text><ellipse cx="2080" cy="2735.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="2089" y="2738.9795">~TetrisBoard()</text><ellipse cx="2080" cy="2751.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="163" x="2089" y="2755.2764">void printDebug() const</text><ellipse cx="2080" cy="2768.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="136" x="2089" y="2771.5732">int getWidth() const</text><ellipse cx="2080" cy="2784.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="142" x="2089" y="2787.8701">int getHeight() const</text><ellipse cx="2080" cy="2800.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="430" x="2089" y="2804.167">std::vector&lt;std::vector&lt;std::shared_ptr&lt;Cell&gt;&gt;&gt; &amp;getGrid()</text><ellipse cx="2080" cy="2817.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="159" x="2089" y="2820.4639">void clearBoard() const</text><ellipse cx="2080" cy="2833.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="157" x="2089" y="2836.7607">void setSize(int x, int y)</text><ellipse cx="2080" cy="2849.7109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="211" x="2089" y="2853.0576">int getNormalizedY(int y) const</text><ellipse cx="2080" cy="2866.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="221" x="2089" y="2869.3545">nlohmann::json serialize() const</text><ellipse cx="2080" cy="2882.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="313" x="2089" y="2885.6514">void deserialize(const nlohmann::json &amp;data)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2077" y="2895.6016"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="110" x="2089" y="2901.9482">void setupGrid()</text></g><!--class CellRenderer--><g id="elem_CellRenderer"><rect codeLine="26" fill="#F1F1F1" height="390.2344" id="CellRenderer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="727" x="2894.5" y="2560"/><ellipse cx="3208.75" cy="2576" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3211.7188,2581.6406 Q3211.1406,2581.9375 3210.5,2582.0781 Q3209.8594,2582.2344 3209.1563,2582.2344 Q3206.6563,2582.2344 3205.3281,2580.5938 Q3204.0156,2578.9375 3204.0156,2575.8125 Q3204.0156,2572.6875 3205.3281,2571.0313 Q3206.6563,2569.375 3209.1563,2569.375 Q3209.8594,2569.375 3210.5,2569.5313 Q3211.1563,2569.6875 3211.7188,2569.9844 L3211.7188,2572.7031 Q3211.0938,2572.125 3210.5,2571.8594 Q3209.9063,2571.5781 3209.2813,2571.5781 Q3207.9375,2571.5781 3207.25,2572.6563 Q3206.5625,2573.7188 3206.5625,2575.8125 Q3206.5625,2577.9063 3207.25,2578.9844 Q3207.9375,2580.0469 3209.2813,2580.0469 Q3209.9063,2580.0469 3210.5,2579.7813 Q3211.0938,2579.5 3211.7188,2578.9219 L3211.7188,2581.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90" x="3229.25" y="2580.8467">CellRenderer</text><line style="stroke:#181818;stroke-width:0.5;" x1="2895.5" x2="3620.5" y1="2592" y2="2592"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2902.5" y="2602.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="140" x="2914.5" y="2608.9951">static int cells_count</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2902.5" y="2618.9453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="182" x="2914.5" y="2625.292">std::shared_ptr&lt;Cell&gt; cell</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2902.5" y="2635.2422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="173" x="2914.5" y="2641.5889">sf::VertexArray fillVertices</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2902.5" y="2651.5391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="231" x="2914.5" y="2657.8857">sf::RectangleShape outlineShape</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2902.5" y="2667.8359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="112" x="2914.5" y="2674.1826">sf::Vector2f size</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2902.5" y="2684.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="204" x="2914.5" y="2690.4795">CellRenderMode renderMode</text><line style="stroke:#181818;stroke-width:0.5;" x1="2895.5" x2="3620.5" y1="2697.7813" y2="2697.7813"/><ellipse cx="2905.5" cy="2711.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="701" x="2914.5" y="2714.7764">CellRenderer(sf::Vector2f size, sf::Vector2f position, CellRenderMode mode, std::shared_ptr&lt;Cell&gt; c)</text><ellipse cx="2905.5" cy="2727.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="112" x="2914.5" y="2731.0732">~CellRenderer()</text><ellipse cx="2905.5" cy="2744.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="464" x="2914.5" y="2747.3701">void refreshPosition(sf::Vector2f newSize, sf::Vector2f newPosition)</text><ellipse cx="2905.5" cy="2760.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="284" x="2914.5" y="2763.667">void setOutlineThickness(float thickness)</text><ellipse cx="2905.5" cy="2776.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="300" x="2914.5" y="2779.9639">void setOutlineColor(const sf::Color &amp;color)</text><ellipse cx="2905.5" cy="2792.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="380" x="2914.5" y="2796.2607">void setOnClick(const std::function&lt;void()&gt; &amp;callback)</text><ellipse cx="2905.5" cy="2809.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="533" x="2914.5" y="2812.5576">void handleEvent(const sf::Event &amp;event, const sf::RenderWindow &amp;window)</text><ellipse cx="2905.5" cy="2825.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="123" x="2914.5" y="2828.8545">void updateData()</text><ellipse cx="2905.5" cy="2841.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="217" x="2914.5" y="2845.1514">std::shared_ptr&lt;Cell&gt; getCell()</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="2914.5" y="2861.4482">&#160;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2902.5" y="2871.3984"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="159" x="2914.5" y="2877.7451">void updateGeometry()</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2902.5" y="2887.6953"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="106" x="2914.5" y="2894.042">void rebuildFill()</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2902.5" y="2903.9922"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="138" x="2914.5" y="2910.3389">void rebuildOutline()</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2902.5" y="2920.2891"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="525" x="2914.5" y="2926.6357">void draw(sf::RenderTarget &amp;target, sf::RenderStates states) const override</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2902.5" y="2936.5859"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="261" x="2914.5" y="2942.9326">std::function&lt;void()&gt; onClickCallback</text></g><!--class Cell--><g id="elem_Cell"><rect codeLine="395" fill="#F1F1F1" height="341.3438" id="Cell" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="338" x="2350" y="3246.5"/><ellipse cx="2502.25" cy="3262.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2505.2188,3268.1406 Q2504.6406,3268.4375 2504,3268.5781 Q2503.3594,3268.7344 2502.6563,3268.7344 Q2500.1563,3268.7344 2498.8281,3267.0938 Q2497.5156,3265.4375 2497.5156,3262.3125 Q2497.5156,3259.1875 2498.8281,3257.5313 Q2500.1563,3255.875 2502.6563,3255.875 Q2503.3594,3255.875 2504,3256.0313 Q2504.6563,3256.1875 2505.2188,3256.4844 L2505.2188,3259.2031 Q2504.5938,3258.625 2504,3258.3594 Q2503.4063,3258.0781 2502.7813,3258.0781 Q2501.4375,3258.0781 2500.75,3259.1563 Q2500.0625,3260.2188 2500.0625,3262.3125 Q2500.0625,3264.4063 2500.75,3265.4844 Q2501.4375,3266.5469 2502.7813,3266.5469 Q2503.4063,3266.5469 2504,3266.2813 Q2504.5938,3266 2505.2188,3265.4219 L2505.2188,3268.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="25" x="2522.75" y="3267.3467">Cell</text><line style="stroke:#181818;stroke-width:0.5;" x1="2351" x2="2687" y1="3278.5" y2="3278.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2358" y="3289.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="100" x="2370" y="3295.4951">CellState state</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2358" y="3305.4453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="99" x="2370" y="3311.792">CellColor color</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2358" y="3321.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="154" x="2370" y="3328.0889">Coordinate coordinate</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2358" y="3338.0391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="71" x="2370" y="3344.3857">int pieceId</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2358" y="3354.3359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="78" x="2370" y="3360.6826">int ownerID</text><line style="stroke:#181818;stroke-width:0.5;" x1="2351" x2="2687" y1="3367.9844" y2="3367.9844"/><ellipse cx="2361" cy="3381.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="155" x="2370" y="3384.9795">Cell(Coordinate coord)</text><ellipse cx="2361" cy="3397.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="47" x="2370" y="3401.2764">~Cell()</text><ellipse cx="2361" cy="3414.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="156" x="2370" y="3417.5732">int getOwnerID() const</text><ellipse cx="2361" cy="3430.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="147" x="2370" y="3433.8701">int getPieceId() const</text><ellipse cx="2361" cy="3446.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="147" x="2370" y="3450.167">void setPieceId(int id)</text><ellipse cx="2361" cy="3463.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="177" x="2370" y="3466.4639">CellColor getColor() const</text><ellipse cx="2361" cy="3479.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="177" x="2370" y="3482.7607">CellState getState() const</text><ellipse cx="2361" cy="3495.7109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="173" x="2370" y="3499.0576">void setColor(CellColor c)</text><ellipse cx="2361" cy="3512.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="173" x="2370" y="3515.3545">void setState(CellState s)</text><ellipse cx="2361" cy="3528.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="153" x="2370" y="3531.6514">void setOwnerID(int o)</text><ellipse cx="2361" cy="3544.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="2370" y="3547.9482">void setEmpty()</text><ellipse cx="2361" cy="3560.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="281" x="2370" y="3564.2451">nlohmann::json serialize() const override</text><ellipse cx="2361" cy="3577.1953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="312" x="2370" y="3580.542">void deserialize(const nlohmann::json &amp;json)</text></g><!--class GameStatusRenderer--><g id="elem_GameStatusRenderer"><rect codeLine="54" fill="#F1F1F1" height="194.6719" id="GameStatusRenderer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="551" x="3899.5" y="1317"/><ellipse cx="4095.75" cy="1333" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4098.7188,1338.6406 Q4098.1406,1338.9375 4097.5,1339.0781 Q4096.8594,1339.2344 4096.1563,1339.2344 Q4093.6563,1339.2344 4092.3281,1337.5938 Q4091.0156,1335.9375 4091.0156,1332.8125 Q4091.0156,1329.6875 4092.3281,1328.0313 Q4093.6563,1326.375 4096.1563,1326.375 Q4096.8594,1326.375 4097.5,1326.5313 Q4098.1563,1326.6875 4098.7188,1326.9844 L4098.7188,1329.7031 Q4098.0938,1329.125 4097.5,1328.8594 Q4096.9063,1328.5781 4096.2813,1328.5781 Q4094.9375,1328.5781 4094.25,1329.6563 Q4093.5625,1330.7188 4093.5625,1332.8125 Q4093.5625,1334.9063 4094.25,1335.9844 Q4094.9375,1337.0469 4096.2813,1337.0469 Q4096.9063,1337.0469 4097.5,1336.7813 Q4098.0938,1336.5 4098.7188,1335.9219 L4098.7188,1338.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="150" x="4116.25" y="1337.8467">GameStatusRenderer</text><line style="stroke:#181818;stroke-width:0.5;" x1="3900.5" x2="4449.5" y1="1349" y2="1349"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3907.5" y="1359.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90" x="3919.5" y="1365.9951">Button score</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3907.5" y="1375.9453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="83" x="3919.5" y="1382.292">Button lines</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3907.5" y="1392.2422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="82" x="3919.5" y="1398.5889">Button level</text><line style="stroke:#181818;stroke-width:0.5;" x1="3900.5" x2="4449.5" y1="1405.8906" y2="1405.8906"/><ellipse cx="3910.5" cy="1419.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="307" x="3919.5" y="1422.8857">GameStatusRenderer(sf::Font &amp;defaultFont)</text><ellipse cx="3910.5" cy="1435.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="172" x="3919.5" y="1439.1826">~GameStatusRenderer()</text><ellipse cx="3910.5" cy="1452.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="320" x="3919.5" y="1455.4795">void updateSize(const sf::Vector2u a) override</text><ellipse cx="3910.5" cy="1468.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="282" x="3919.5" y="1471.7764">void updateGameStatus(GameStatus gs)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="3919.5" y="1488.0732">&#160;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3907.5" y="1498.0234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="525" x="3919.5" y="1504.3701">void draw(sf::RenderTarget &amp;target, sf::RenderStates states) const override</text></g><!--class GameStatus--><g id="elem_GameStatus"><rect codeLine="464" fill="#F1F1F1" height="325.0469" id="GameStatus" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="400" x="4051" y="2592.5"/><ellipse cx="4204.25" cy="2608.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4207.2188,2614.1406 Q4206.6406,2614.4375 4206,2614.5781 Q4205.3594,2614.7344 4204.6563,2614.7344 Q4202.1563,2614.7344 4200.8281,2613.0938 Q4199.5156,2611.4375 4199.5156,2608.3125 Q4199.5156,2605.1875 4200.8281,2603.5313 Q4202.1563,2601.875 4204.6563,2601.875 Q4205.3594,2601.875 4206,2602.0313 Q4206.6563,2602.1875 4207.2188,2602.4844 L4207.2188,2605.2031 Q4206.5938,2604.625 4206,2604.3594 Q4205.4063,2604.0781 4204.7813,2604.0781 Q4203.4375,2604.0781 4202.75,2605.1563 Q4202.0625,2606.2188 4202.0625,2608.3125 Q4202.0625,2610.4063 4202.75,2611.4844 Q4203.4375,2612.5469 4204.7813,2612.5469 Q4205.4063,2612.5469 4206,2612.2813 Q4206.5938,2612 4207.2188,2611.4219 L4207.2188,2614.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="85" x="4224.75" y="2613.3467">GameStatus</text><line style="stroke:#181818;stroke-width:0.5;" x1="4052" x2="4450" y1="2624.5" y2="2624.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4059" y="2635.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="60" x="4071" y="2641.4951">int score</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4059" y="2651.4453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="52" x="4071" y="2657.792">int level</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4059" y="2667.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="140" x="4071" y="2674.0889">int totalLinesCleared</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4059" y="2684.0391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="190" x="4071" y="2690.3857">int linesClearedOnThisLevel</text><line style="stroke:#181818;stroke-width:0.5;" x1="4052" x2="4450" y1="2697.6875" y2="2697.6875"/><ellipse cx="4062" cy="2711.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="95" x="4071" y="2714.6826">GameStatus()</text><ellipse cx="4062" cy="2727.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="4071" y="2730.9795">~GameStatus()</text><ellipse cx="4062" cy="2743.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="374" x="4071" y="2747.2764">bool shouldLevelUp(int requiredLinesForLevelUp = 10)</text><ellipse cx="4062" cy="2760.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="137" x="4071" y="2763.5732">int getScore() const</text><ellipse cx="4062" cy="2776.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="132" x="4071" y="2779.8701">int getLevel() const</text><ellipse cx="4062" cy="2792.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="220" x="4071" y="2796.167">int getTotalLinesCleared() const</text><ellipse cx="4062" cy="2809.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="270" x="4071" y="2812.4639">int getLinesClearedOnThisLevel() const</text><ellipse cx="4062" cy="2825.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="137" x="4071" y="2828.7607">void addScore(int s)</text><ellipse cx="4062" cy="2841.7109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="123" x="4071" y="2845.0576">void setLevel(int l)</text><ellipse cx="4062" cy="2858.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="217" x="4071" y="2861.3545">void addTotalLinesCleared(int t)</text><ellipse cx="4062" cy="2874.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="270" x="4071" y="2877.6514">void addLinesClearedOnThisLevel(int c)</text><ellipse cx="4062" cy="2890.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="221" x="4071" y="2893.9482">nlohmann::json serialize() const</text><ellipse cx="4062" cy="2906.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="312" x="4071" y="2910.2451">void deserialize(const nlohmann::json &amp;json)</text></g><!--class Button--><g id="elem_Button"><rect codeLine="248" fill="#F1F1F1" height="145.7813" id="Button" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="714" x="5705" y="1914"/><ellipse cx="6034.25" cy="1930" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6037.2188,1935.6406 Q6036.6406,1935.9375 6036,1936.0781 Q6035.3594,1936.2344 6034.6563,1936.2344 Q6032.1563,1936.2344 6030.8281,1934.5938 Q6029.5156,1932.9375 6029.5156,1929.8125 Q6029.5156,1926.6875 6030.8281,1925.0313 Q6032.1563,1923.375 6034.6563,1923.375 Q6035.3594,1923.375 6036,1923.5313 Q6036.6563,1923.6875 6037.2188,1923.9844 L6037.2188,1926.7031 Q6036.5938,1926.125 6036,1925.8594 Q6035.4063,1925.5781 6034.7813,1925.5781 Q6033.4375,1925.5781 6032.75,1926.6563 Q6032.0625,1927.7188 6032.0625,1929.8125 Q6032.0625,1931.9063 6032.75,1932.9844 Q6033.4375,1934.0469 6034.7813,1934.0469 Q6035.4063,1934.0469 6036,1933.7813 Q6036.5938,1933.5 6037.2188,1932.9219 L6037.2188,1935.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="47" x="6054.75" y="1934.8467">Button</text><line style="stroke:#181818;stroke-width:0.5;" x1="5706" x2="6418" y1="1946" y2="1946"/><line style="stroke:#181818;stroke-width:0.5;" x1="5706" x2="6418" y1="1954" y2="1954"/><ellipse cx="5716" cy="1967.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="688" x="5725" y="1970.9951">Button(const sf::Font &amp;font, const std::string &amp;str, sf::Color color, sf::Vector2f position, int fontSize)</text><ellipse cx="5716" cy="1983.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="380" x="5725" y="1987.292">void setOnClick(const std::function&lt;void()&gt; &amp;callback)</text><ellipse cx="5716" cy="2000.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="490" x="5725" y="2003.5889">void handleEvent(const sf::Event &amp;event, sf::RenderWindow &amp;window)</text><ellipse cx="5716" cy="2016.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="221" x="5725" y="2019.8857">sf::FloatRect getBounds() const</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="5725" y="2036.1826">&#160;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5713" y="2046.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="261" x="5725" y="2052.4795">std::function&lt;void()&gt; onClickCallback</text></g><!--class MiniBoardRenderer--><g id="elem_MiniBoardRenderer"><rect codeLine="71" fill="#F1F1F1" height="243.5625" id="MiniBoardRenderer" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="583" x="2951.5" y="1865"/><ellipse cx="3172.25" cy="1881" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3175.2188,1886.6406 Q3174.6406,1886.9375 3174,1887.0781 Q3173.3594,1887.2344 3172.6563,1887.2344 Q3170.1563,1887.2344 3168.8281,1885.5938 Q3167.5156,1883.9375 3167.5156,1880.8125 Q3167.5156,1877.6875 3168.8281,1876.0313 Q3170.1563,1874.375 3172.6563,1874.375 Q3173.3594,1874.375 3174,1874.5313 Q3174.6563,1874.6875 3175.2188,1874.9844 L3175.2188,1877.7031 Q3174.5938,1877.125 3174,1876.8594 Q3173.4063,1876.5781 3172.7813,1876.5781 Q3171.4375,1876.5781 3170.75,1877.6563 Q3170.0625,1878.7188 3170.0625,1880.8125 Q3170.0625,1882.9063 3170.75,1883.9844 Q3171.4375,1885.0469 3172.7813,1885.0469 Q3173.4063,1885.0469 3174,1884.7813 Q3174.5938,1884.5 3175.2188,1883.9219 L3175.2188,1886.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="133" x="3192.75" y="1885.8467">MiniBoardRenderer</text><line style="stroke:#181818;stroke-width:0.5;" x1="2952.5" x2="3533.5" y1="1897" y2="1897"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2959.5" y="1907.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="227" x="2971.5" y="1913.9951">mutable std::mutex renderMutex</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2959.5" y="1923.9453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="85" x="2971.5" y="1930.292">float cellSize</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2959.5" y="1940.2422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="139" x="2971.5" y="1946.5889">sf::Vector2f position</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2959.5" y="1956.5391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="496" x="2971.5" y="1962.8857">std::vector&lt;std::vector&lt;std::shared_ptr&lt;CellRenderer&gt;&gt;&gt; renderGrid</text><line style="stroke:#181818;stroke-width:0.5;" x1="2952.5" x2="3533.5" y1="1970.1875" y2="1970.1875"/><ellipse cx="2962.5" cy="1983.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="375" x="2971.5" y="1987.1826">MiniBoardRenderer(sf::Vector2f position, float cellSize)</text><ellipse cx="2962.5" cy="2000.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="308" x="2971.5" y="2003.4795">void updateSize(const sf::Vector2u) override</text><ellipse cx="2962.5" cy="2016.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="557" x="2971.5" y="2019.7764">void setTetromino(std::shared_ptr&lt;Tetromino&gt; t, CellRenderMode renderMode)</text><ellipse cx="2962.5" cy="2032.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="148" x="2971.5" y="2036.0732">float getWidth() const</text><ellipse cx="2962.5" cy="2049.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="154" x="2971.5" y="2052.3701">float getHeight() const</text><ellipse cx="2962.5" cy="2065.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="215" x="2971.5" y="2068.667">sf::Vector2f getPosition() const</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="2971.5" y="2084.9639">&#160;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2959.5" y="2094.9141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="525" x="2971.5" y="2101.2607">void draw(sf::RenderTarget &amp;target, sf::RenderStates states) const override</text></g><!--class Tetromino--><g id="elem_Tetromino"><rect codeLine="614" fill="#F1F1F1" height="471.7188" id="Tetromino" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="624" x="894" y="3181"/><ellipse cx="1166.25" cy="3197" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1169.2188,3202.6406 Q1168.6406,3202.9375 1168,3203.0781 Q1167.3594,3203.2344 1166.6563,3203.2344 Q1164.1563,3203.2344 1162.8281,3201.5938 Q1161.5156,3199.9375 1161.5156,3196.8125 Q1161.5156,3193.6875 1162.8281,3192.0313 Q1164.1563,3190.375 1166.6563,3190.375 Q1167.3594,3190.375 1168,3190.5313 Q1168.6563,3190.6875 1169.2188,3190.9844 L1169.2188,3193.7031 Q1168.5938,3193.125 1168,3192.8594 Q1167.4063,3192.5781 1166.7813,3192.5781 Q1165.4375,3192.5781 1164.75,3193.6563 Q1164.0625,3194.7188 1164.0625,3196.8125 Q1164.0625,3198.9063 1164.75,3199.9844 Q1165.4375,3201.0469 1166.7813,3201.0469 Q1167.4063,3201.0469 1168,3200.7813 Q1168.5938,3200.5 1169.2188,3199.9219 L1169.2188,3202.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="71" x="1186.75" y="3201.8467">Tetromino</text><line style="stroke:#181818;stroke-width:0.5;" x1="895" x2="1517" y1="3213" y2="3213"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="902" y="3223.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="154" x="914" y="3229.9951">Coordinate coordinate</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="902" y="3239.9453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="71" x="914" y="3246.292">int pieceId</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="902" y="3256.2422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="95" x="914" y="3262.5889">bool changed</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="914" y="3278.8857">&#160;</text><polygon fill="none" points="905,3286.8359,909,3290.8359,905,3294.8359,901,3290.8359" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="292" x="914" y="3295.1826">std::shared_ptr&lt;TetrominoShape&gt; shape</text><polygon fill="none" points="905,3303.1328,909,3307.1328,905,3311.1328,901,3307.1328" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="99" x="914" y="3311.4795">CellColor color</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="914" y="3327.7764">&#160;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="902" y="3337.7266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="96" x="914" y="3344.0732">bool canMove</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="902" y="3354.0234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="914" y="3360.3701">bool lockedInPlace</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="914" y="3376.667">&#160;</text><ellipse cx="905" cy="3389.6172" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="364" x="914" y="3392.9639">static const std::vector&lt;CellColor&gt; tetromino_colors</text><line style="stroke:#181818;stroke-width:0.5;" x1="895" x2="1517" y1="3400.2656" y2="3400.2656"/><ellipse cx="905" cy="3413.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="81" x="914" y="3417.2607">Tetromino()</text><ellipse cx="905" cy="3430.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="598" x="914" y="3433.5576">Tetromino(Coordinate coord, CellColor color, const std::vector&lt;std::vector&lt;int&gt;&gt; &amp;s)</text><ellipse cx="905" cy="3446.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="137" x="914" y="3449.8545">virtual ~Tetromino()</text><ellipse cx="905" cy="3462.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="232" x="914" y="3466.1514">Coordinate getCoordinate() const</text><ellipse cx="905" cy="3479.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="201" x="914" y="3482.4482">Coordinate &amp;getCoordinate()</text><ellipse cx="905" cy="3495.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="177" x="914" y="3498.7451">CellColor getColor() const</text><ellipse cx="905" cy="3511.6953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="369" x="914" y="3515.042">std::shared_ptr&lt;TetrominoShape&gt; getShape() const</text><ellipse cx="905" cy="3527.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="109" x="914" y="3531.3389">int getId() const</text><ellipse cx="905" cy="3544.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="132" x="914" y="3547.6357">bool hasChanged()</text><ellipse cx="905" cy="3560.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="197" x="914" y="3563.9326">bool shouldBroadcastState()</text><ellipse cx="905" cy="3576.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="221" x="914" y="3580.2295">nlohmann::json serialize() const</text><ellipse cx="905" cy="3593.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="313" x="914" y="3596.5264">void deserialize(const nlohmann::json &amp;data)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="902" y="3606.4766"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="347" x="914" y="3612.8232">void setShape(std::vector&lt;std::vector&lt;int&gt;&gt; &amp;s)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="902" y="3622.7734"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="272" x="914" y="3629.1201">void setCoordinate(Coordinate &amp;coord)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="902" y="3639.0703"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="169" x="914" y="3645.417">void setChanged(bool c)</text></g><!--class BoardScreen--><g id="elem_BoardScreen"><rect codeLine="90" fill="#F1F1F1" height="243.5625" id="BoardScreen" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="659" x="3188.5" y="899.5"/><ellipse cx="3468.75" cy="915.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3471.7188,921.1406 Q3471.1406,921.4375 3470.5,921.5781 Q3469.8594,921.7344 3469.1563,921.7344 Q3466.6563,921.7344 3465.3281,920.0938 Q3464.0156,918.4375 3464.0156,915.3125 Q3464.0156,912.1875 3465.3281,910.5313 Q3466.6563,908.875 3469.1563,908.875 Q3469.8594,908.875 3470.5,909.0313 Q3471.1563,909.1875 3471.7188,909.4844 L3471.7188,912.2031 Q3471.0938,911.625 3470.5,911.3594 Q3469.9063,911.0781 3469.2813,911.0781 Q3467.9375,911.0781 3467.25,912.1563 Q3466.5625,913.2188 3466.5625,915.3125 Q3466.5625,917.4063 3467.25,918.4844 Q3467.9375,919.5469 3469.2813,919.5469 Q3469.9063,919.5469 3470.5,919.2813 Q3471.0938,919 3471.7188,918.4219 L3471.7188,921.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90" x="3489.25" y="920.3467">BoardScreen</text><line style="stroke:#181818;stroke-width:0.5;" x1="3189.5" x2="3846.5" y1="931.5" y2="931.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3196.5" y="942.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="330" x="3208.5" y="948.4951">std::shared_ptr&lt;ClientManager&gt; clientManager</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3196.5" y="958.4453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="254" x="3208.5" y="964.792">std::shared_ptr&lt;TetrisBoard&gt; board</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3196.5" y="974.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="336" x="3208.5" y="981.0889">std::shared_ptr&lt;MiniBoardRenderer&gt; miniBoard</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3196.5" y="991.0391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="314" x="3208.5" y="997.3857">std::shared_ptr&lt;BoardRenderer&gt; mainBoard</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3196.5" y="1007.3359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="376" x="3208.5" y="1013.6826">std::shared_ptr&lt;GameStatusRenderer&gt; statusDisplay</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3196.5" y="1023.6328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="167" x="3208.5" y="1029.9795">std::mutex renderMutex</text><line style="stroke:#181818;stroke-width:0.5;" x1="3189.5" x2="3846.5" y1="1037.2813" y2="1037.2813"/><ellipse cx="3199.5" cy="1050.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="633" x="3208.5" y="1054.2764">BoardScreen(sf::RenderWindow &amp;window, std::shared_ptr&lt;ClientManager&gt; clientManager)</text><ellipse cx="3199.5" cy="1067.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="320" x="3208.5" y="1070.5732">void updateSize(const sf::Vector2u a) override</text><ellipse cx="3199.5" cy="1083.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="486" x="3208.5" y="1086.8701">void handleEvent(sf::Event event, ScreenManager &amp;manager) override</text><ellipse cx="3199.5" cy="1099.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="343" x="3208.5" y="1103.167">void render(sf::RenderWindow &amp;window) override</text><ellipse cx="3199.5" cy="1116.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="252" x="3208.5" y="1119.4639">void update(float deltaTime) override</text><ellipse cx="3199.5" cy="1132.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="257" x="3208.5" y="1135.7607">void handleKeyPress(sf::Event event)</text></g><!--class Screen--><g id="elem_Screen"><rect codeLine="316" fill="#F1F1F1" height="325.0469" id="Screen" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="574" x="6794" y="1824.5"/><ellipse cx="7052.25" cy="1840.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M7055.2188,1846.1406 Q7054.6406,1846.4375 7054,1846.5781 Q7053.3594,1846.7344 7052.6563,1846.7344 Q7050.1563,1846.7344 7048.8281,1845.0938 Q7047.5156,1843.4375 7047.5156,1840.3125 Q7047.5156,1837.1875 7048.8281,1835.5313 Q7050.1563,1833.875 7052.6563,1833.875 Q7053.3594,1833.875 7054,1834.0313 Q7054.6563,1834.1875 7055.2188,1834.4844 L7055.2188,1837.2031 Q7054.5938,1836.625 7054,1836.3594 Q7053.4063,1836.0781 7052.7813,1836.0781 Q7051.4375,1836.0781 7050.75,1837.1563 Q7050.0625,1838.2188 7050.0625,1840.3125 Q7050.0625,1842.4063 7050.75,1843.4844 Q7051.4375,1844.5469 7052.7813,1844.5469 Q7053.4063,1844.5469 7054,1844.2813 Q7054.5938,1844 7055.2188,1843.4219 L7055.2188,1846.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="49" x="7072.75" y="1845.3467">Screen</text><line style="stroke:#181818;stroke-width:0.5;" x1="6795" x2="7367" y1="1856.5" y2="1856.5"/><polygon fill="none" points="6805,1865.1484,6809,1869.1484,6805,1873.1484,6801,1869.1484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="189" x="6814" y="1873.4951">std::atomic&lt;bool&gt; running</text><polygon fill="none" points="6805,1881.4453,6809,1885.4453,6805,1889.4453,6801,1885.4453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="135" x="6814" y="1889.792">sf::Font defaultFont</text><polygon fill="none" points="6805,1897.7422,6809,1901.7422,6805,1905.7422,6801,1901.7422" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="195" x="6814" y="1906.0889">sf::RenderWindow &amp;window</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="6814" y="1922.3857">&#160;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6802" y="1932.3359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="301" x="6814" y="1938.6826">std::unique_ptr&lt;Background&gt; background</text><line style="stroke:#181818;stroke-width:0.5;" x1="6795" x2="7367" y1="1945.9844" y2="1945.9844"/><ellipse cx="6805" cy="1959.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="254" x="6814" y="1962.9795">Screen(sf::RenderWindow &amp;window)</text><ellipse cx="6805" cy="1975.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="71" x="6814" y="1979.2764">~Screen()</text><ellipse cx="6805" cy="1992.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="182" x="6814" y="1995.5732">sf::Font &amp;getDefaultFont()</text><ellipse cx="6805" cy="2008.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="73" x="6814" y="2011.8701">void stop()</text><ellipse cx="6805" cy="2024.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="499" x="6814" y="2028.167">virtual void handleEvent(sf::Event event, ScreenManager &amp;manager) = 0</text><ellipse cx="6805" cy="2041.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="265" x="6814" y="2044.4639">virtual void update(float deltaTime) = 0</text><ellipse cx="6805" cy="2057.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="356" x="6814" y="2060.7607">virtual void render(sf::RenderWindow &amp;window) = 0</text><ellipse cx="6805" cy="2073.7109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="333" x="6814" y="2077.0576">virtual void updateSize(const sf::Vector2u a) = 0</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="6814" y="2093.3545">&#160;</text><polygon fill="#FFFF44" points="6805,2101.3047,6809,2105.3047,6805,2109.3047,6801,2105.3047" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="548" x="6814" y="2109.6514">void setBackground(const std::string &amp;atlasName, const std::string &amp;tileName)</text><polygon fill="#FFFF44" points="6805,2117.6016,6809,2121.6016,6805,2125.6016,6801,2121.6016" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="303" x="6814" y="2125.9482">void resizeBackgound(const sf::Vector2u a)</text><polygon fill="#FFFF44" points="6805,2133.8984,6809,2137.8984,6805,2141.8984,6801,2137.8984" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="172" x="6814" y="2142.2451">void renderBackground()</text></g><!--class ScreenManager--><g id="elem_ScreenManager"><rect codeLine="342" fill="#F1F1F1" height="341.3438" id="ScreenManager" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="551" x="6635.5" y="2584.5"/><ellipse cx="6852.25" cy="2600.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6855.2188,2606.1406 Q6854.6406,2606.4375 6854,2606.5781 Q6853.3594,2606.7344 6852.6563,2606.7344 Q6850.1563,2606.7344 6848.8281,2605.0938 Q6847.5156,2603.4375 6847.5156,2600.3125 Q6847.5156,2597.1875 6848.8281,2595.5313 Q6850.1563,2593.875 6852.6563,2593.875 Q6853.3594,2593.875 6854,2594.0313 Q6854.6563,2594.1875 6855.2188,2594.4844 L6855.2188,2597.2031 Q6854.5938,2596.625 6854,2596.3594 Q6853.4063,2596.0781 6852.7813,2596.0781 Q6851.4375,2596.0781 6850.75,2597.1563 Q6850.0625,2598.2188 6850.0625,2600.3125 Q6850.0625,2602.4063 6850.75,2603.4844 Q6851.4375,2604.5469 6852.7813,2604.5469 Q6853.4063,2604.5469 6854,2604.2813 Q6854.5938,2604 6855.2188,2603.4219 L6855.2188,2606.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="109" x="6872.75" y="2605.3467">ScreenManager</text><line style="stroke:#181818;stroke-width:0.5;" x1="6636.5" x2="7185.5" y1="2616.5" y2="2616.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6643.5" y="2627.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="195" x="6655.5" y="2633.4951">sf::RenderWindow &amp;window</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6643.5" y="2643.4453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="404" x="6655.5" y="2649.792">std::map&lt;std::string, std::unique_ptr&lt;Screen&gt;&gt; screens</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6643.5" y="2659.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="149" x="6655.5" y="2666.0889">Screen *activeScreen</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6643.5" y="2676.0391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="178" x="6655.5" y="2682.3857">std::thread screenThread</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6643.5" y="2692.3359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="104" x="6655.5" y="2698.6826">std::mutex mtx</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6643.5" y="2708.6328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="174" x="6655.5" y="2714.9795">std::condition_variable cv</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6643.5" y="2724.9297"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="239" x="6655.5" y="2731.2764">std::atomic&lt;bool&gt; threadRunning</text><line style="stroke:#181818;stroke-width:0.5;" x1="6636.5" x2="7185.5" y1="2738.5781" y2="2738.5781"/><ellipse cx="6646.5" cy="2752.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="314" x="6655.5" y="2755.5732">ScreenManager(sf::RenderWindow &amp;window)</text><ellipse cx="6646.5" cy="2768.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="131" x="6655.5" y="2771.8701">~ScreenManager()</text><ellipse cx="6646.5" cy="2784.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="230" x="6655.5" y="2788.167">sf::RenderWindow &amp;getWindow()</text><ellipse cx="6646.5" cy="2801.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="68" x="6655.5" y="2804.4639">void quit()</text><ellipse cx="6646.5" cy="2817.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="525" x="6655.5" y="2820.7607">void addScreen(const std::string &amp;name, std::unique_ptr&lt;Screen&gt; screen)</text><ellipse cx="6646.5" cy="2833.7109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="323" x="6655.5" y="2837.0576">void setActiveScreen(const std::string &amp;name)</text><ellipse cx="6646.5" cy="2850.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="232" x="6655.5" y="2853.3545">void handleEvent(sf::Event event)</text><ellipse cx="6646.5" cy="2866.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="192" x="6655.5" y="2869.6514">void update(float deltaTime)</text><ellipse cx="6646.5" cy="2882.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="283" x="6655.5" y="2885.9482">void render(sf::RenderWindow &amp;window)</text><ellipse cx="6646.5" cy="2898.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="122" x="6655.5" y="2902.2451">void startThread()</text><ellipse cx="6646.5" cy="2915.1953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="122" x="6655.5" y="2918.542">void stopThread()</text></g><!--class EndGameScreen--><g id="elem_EndGameScreen"><rect codeLine="114" fill="#F1F1F1" height="341.3438" id="EndGameScreen" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="927" x="4770.5" y="1244"/><ellipse cx="5171.25" cy="1260" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5174.2188,1265.6406 Q5173.6406,1265.9375 5173,1266.0781 Q5172.3594,1266.2344 5171.6563,1266.2344 Q5169.1563,1266.2344 5167.8281,1264.5938 Q5166.5156,1262.9375 5166.5156,1259.8125 Q5166.5156,1256.6875 5167.8281,1255.0313 Q5169.1563,1253.375 5171.6563,1253.375 Q5172.3594,1253.375 5173,1253.5313 Q5173.6563,1253.6875 5174.2188,1253.9844 L5174.2188,1256.7031 Q5173.5938,1256.125 5173,1255.8594 Q5172.4063,1255.5781 5171.7813,1255.5781 Q5170.4375,1255.5781 5169.75,1256.6563 Q5169.0625,1257.7188 5169.0625,1259.8125 Q5169.0625,1261.9063 5169.75,1262.9844 Q5170.4375,1264.0469 5171.7813,1264.0469 Q5172.4063,1264.0469 5173,1263.7813 Q5173.5938,1263.5 5174.2188,1262.9219 L5174.2188,1265.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="117" x="5191.75" y="1264.8467">EndGameScreen</text><line style="stroke:#181818;stroke-width:0.5;" x1="4771.5" x2="5696.5" y1="1276" y2="1276"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4778.5" y="1286.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="233" x="4790.5" y="1292.9951">ScreenManager &amp;screenManager</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4778.5" y="1302.9453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="270" x="4790.5" y="1309.292">std::shared_ptr&lt;ClientManager&gt; client</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4778.5" y="1319.2422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="134" x="4790.5" y="1325.5889">EndGameData data</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4778.5" y="1335.5391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="81" x="4790.5" y="1341.8857">sf::Text title</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4778.5" y="1351.8359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="4790.5" y="1358.1826">sf::Text totalPoints</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4778.5" y="1368.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="4790.5" y="1374.4795">sf::Text gameTime</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4778.5" y="1384.4297"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="154" x="4790.5" y="1390.7764">sf::Text linesRemoved</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4778.5" y="1400.7266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="118" x="4790.5" y="1407.0732">sf::Text finalLevel</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4778.5" y="1417.0234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="244" x="4790.5" y="1423.3701">std::vector&lt;sf::Text&gt; playerScores</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4778.5" y="1433.3203"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="124" x="4790.5" y="1439.667">Button quitButton</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4778.5" y="1449.6172"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="163" x="4790.5" y="1455.9639">Button playAgainButton</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4778.5" y="1465.9141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="148" x="4790.5" y="1472.2607">bool hasFetchedData</text><line style="stroke:#181818;stroke-width:0.5;" x1="4771.5" x2="5696.5" y1="1479.5625" y2="1479.5625"/><ellipse cx="4781.5" cy="1493.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="901" x="4790.5" y="1496.5576">EndGameScreen(sf::RenderWindow &amp;window, ScreenManager &amp;screenManager, std::shared_ptr&lt;ClientManager&gt; clientManager)</text><ellipse cx="4781.5" cy="1509.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="139" x="4790.5" y="1512.8545">~EndGameScreen()</text><ellipse cx="4781.5" cy="1525.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="486" x="4790.5" y="1529.1514">void handleEvent(sf::Event event, ScreenManager &amp;manager) override</text><ellipse cx="4781.5" cy="1542.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="252" x="4790.5" y="1545.4482">void update(float deltaTime) override</text><ellipse cx="4781.5" cy="1558.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="343" x="4790.5" y="1561.7451">void render(sf::RenderWindow &amp;window) override</text><ellipse cx="4781.5" cy="1574.6953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="320" x="4790.5" y="1578.042">void updateSize(const sf::Vector2u a) override</text></g><!--class EndGameData--><g id="elem_EndGameData"><rect codeLine="450" fill="#F1F1F1" height="162.0781" id="EndGameData" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="339" x="3835.5" y="3754"/><ellipse cx="3950.75" cy="3770" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3953.7188,3775.6406 Q3953.1406,3775.9375 3952.5,3776.0781 Q3951.8594,3776.2344 3951.1563,3776.2344 Q3948.6563,3776.2344 3947.3281,3774.5938 Q3946.0156,3772.9375 3946.0156,3769.8125 Q3946.0156,3766.6875 3947.3281,3765.0313 Q3948.6563,3763.375 3951.1563,3763.375 Q3951.8594,3763.375 3952.5,3763.5313 Q3953.1563,3763.6875 3953.7188,3763.9844 L3953.7188,3766.7031 Q3953.0938,3766.125 3952.5,3765.8594 Q3951.9063,3765.5781 3951.2813,3765.5781 Q3949.9375,3765.5781 3949.25,3766.6563 Q3948.5625,3767.7188 3948.5625,3769.8125 Q3948.5625,3771.9063 3949.25,3772.9844 Q3949.9375,3774.0469 3951.2813,3774.0469 Q3951.9063,3774.0469 3952.5,3773.7813 Q3953.0938,3773.5 3953.7188,3772.9219 L3953.7188,3775.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="100" x="3971.25" y="3774.8467">EndGameData</text><line style="stroke:#181818;stroke-width:0.5;" x1="3836.5" x2="4173.5" y1="3786" y2="3786"/><ellipse cx="3846.5" cy="3799.6484" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="94" x="3855.5" y="3802.9951">int totalPoints</text><ellipse cx="3846.5" cy="3815.9453" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="94" x="3855.5" y="3819.292">int gameTime</text><ellipse cx="3846.5" cy="3832.2422" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="119" x="3855.5" y="3835.5889">int linesRemoved</text><ellipse cx="3846.5" cy="3848.5391" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="83" x="3855.5" y="3851.8857">int finalLevel</text><ellipse cx="3846.5" cy="3864.8359" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="225" x="3855.5" y="3868.1826">std::vector&lt;PlayerData&gt; players</text><line style="stroke:#181818;stroke-width:0.5;" x1="3836.5" x2="4173.5" y1="3875.4844" y2="3875.4844"/><ellipse cx="3846.5" cy="3889.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="221" x="3855.5" y="3892.4795">nlohmann::json serialize() const</text><ellipse cx="3846.5" cy="3905.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="313" x="3855.5" y="3908.7764">void deserialize(const nlohmann::json &amp;data)</text></g><!--class GameScreen--><g id="elem_GameScreen"><rect codeLine="142" fill="#F1F1F1" height="145.7813" id="GameScreen" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="512" x="8455" y="1341.5"/><ellipse cx="8661.75" cy="1357.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M8664.7188,1363.1406 Q8664.1406,1363.4375 8663.5,1363.5781 Q8662.8594,1363.7344 8662.1563,1363.7344 Q8659.6563,1363.7344 8658.3281,1362.0938 Q8657.0156,1360.4375 8657.0156,1357.3125 Q8657.0156,1354.1875 8658.3281,1352.5313 Q8659.6563,1350.875 8662.1563,1350.875 Q8662.8594,1350.875 8663.5,1351.0313 Q8664.1563,1351.1875 8664.7188,1351.4844 L8664.7188,1354.2031 Q8664.0938,1353.625 8663.5,1353.3594 Q8662.9063,1353.0781 8662.2813,1353.0781 Q8660.9375,1353.0781 8660.25,1354.1563 Q8659.5625,1355.2188 8659.5625,1357.3125 Q8659.5625,1359.4063 8660.25,1360.4844 Q8660.9375,1361.5469 8662.2813,1361.5469 Q8662.9063,1361.5469 8663.5,1361.2813 Q8664.0938,1361 8664.7188,1360.4219 L8664.7188,1363.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90" x="8682.25" y="1362.3467">GameScreen</text><line style="stroke:#181818;stroke-width:0.5;" x1="8456" x2="8966" y1="1373.5" y2="1373.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="8463" y="1384.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="8475" y="1390.4951">sf::Text gameText</text><line style="stroke:#181818;stroke-width:0.5;" x1="8456" x2="8966" y1="1397.7969" y2="1397.7969"/><ellipse cx="8466" cy="1411.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="295" x="8475" y="1414.792">GameScreen(sf::RenderWindow &amp;window)</text><ellipse cx="8466" cy="1427.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="486" x="8475" y="1431.0889">void handleEvent(sf::Event event, ScreenManager &amp;manager) override</text><ellipse cx="8466" cy="1444.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="252" x="8475" y="1447.3857">void update(float deltaTime) override</text><ellipse cx="8466" cy="1460.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="343" x="8475" y="1463.6826">void render(sf::RenderWindow &amp;window) override</text><ellipse cx="8466" cy="1476.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="320" x="8475" y="1479.9795">void updateSize(const sf::Vector2u a) override</text></g><!--class LobbyScreen--><g id="elem_LobbyScreen"><rect codeLine="156" fill="#F1F1F1" height="243.5625" id="LobbyScreen" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="659" x="5732.5" y="1292.5"/><ellipse cx="6012.75" cy="1308.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6015.7188,1314.1406 Q6015.1406,1314.4375 6014.5,1314.5781 Q6013.8594,1314.7344 6013.1563,1314.7344 Q6010.6563,1314.7344 6009.3281,1313.0938 Q6008.0156,1311.4375 6008.0156,1308.3125 Q6008.0156,1305.1875 6009.3281,1303.5313 Q6010.6563,1301.875 6013.1563,1301.875 Q6013.8594,1301.875 6014.5,1302.0313 Q6015.1563,1302.1875 6015.7188,1302.4844 L6015.7188,1305.2031 Q6015.0938,1304.625 6014.5,1304.3594 Q6013.9063,1304.0781 6013.2813,1304.0781 Q6011.9375,1304.0781 6011.25,1305.1563 Q6010.5625,1306.2188 6010.5625,1308.3125 Q6010.5625,1310.4063 6011.25,1311.4844 Q6011.9375,1312.5469 6013.2813,1312.5469 Q6013.9063,1312.5469 6014.5,1312.2813 Q6015.0938,1312 6015.7188,1311.4219 L6015.7188,1314.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90" x="6033.25" y="1313.3467">LobbyScreen</text><line style="stroke:#181818;stroke-width:0.5;" x1="5733.5" x2="6390.5" y1="1324.5" y2="1324.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5740.5" y="1335.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="244" x="5752.5" y="1341.4951">std::shared_ptr&lt;Button&gt; mainText</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5740.5" y="1351.4453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="283" x="5752.5" y="1357.792">std::shared_ptr&lt;Button&gt; startGameText</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5740.5" y="1367.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="299" x="5752.5" y="1374.0889">std::shared_ptr&lt;ClientManager&gt; clientMan</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5740.5" y="1384.0391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="159" x="5752.5" y="1390.3857">const float circleRadius</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5740.5" y="1400.3359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="132" x="5752.5" y="1406.6826">const float padding</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5740.5" y="1416.6328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="247" x="5752.5" y="1422.9795">std::vector&lt;Button&gt; clickableTexts</text><line style="stroke:#181818;stroke-width:0.5;" x1="5733.5" x2="6390.5" y1="1430.2813" y2="1430.2813"/><ellipse cx="5743.5" cy="1443.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="633" x="5752.5" y="1447.2764">LobbyScreen(sf::RenderWindow &amp;window, std::shared_ptr&lt;ClientManager&gt; clientManager)</text><ellipse cx="5743.5" cy="1460.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="486" x="5752.5" y="1463.5732">void handleEvent(sf::Event event, ScreenManager &amp;manager) override</text><ellipse cx="5743.5" cy="1476.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="252" x="5752.5" y="1479.8701">void update(float deltaTime) override</text><ellipse cx="5743.5" cy="1492.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="343" x="5752.5" y="1496.167">void render(sf::RenderWindow &amp;window) override</text><ellipse cx="5743.5" cy="1509.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="151" x="5752.5" y="1512.4639">void initializeButtons()</text><ellipse cx="5743.5" cy="1525.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="320" x="5752.5" y="1528.7607">void updateSize(const sf::Vector2u a) override</text></g><!--class MenuScreen--><g id="elem_MenuScreen"><rect codeLine="178" fill="#F1F1F1" height="243.5625" id="MenuScreen" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="898" x="7451" y="1292.5"/><ellipse cx="7851.75" cy="1308.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M7854.7188,1314.1406 Q7854.1406,1314.4375 7853.5,1314.5781 Q7852.8594,1314.7344 7852.1563,1314.7344 Q7849.6563,1314.7344 7848.3281,1313.0938 Q7847.0156,1311.4375 7847.0156,1308.3125 Q7847.0156,1305.1875 7848.3281,1303.5313 Q7849.6563,1301.875 7852.1563,1301.875 Q7852.8594,1301.875 7853.5,1302.0313 Q7854.1563,1302.1875 7854.7188,1302.4844 L7854.7188,1305.2031 Q7854.0938,1304.625 7853.5,1304.3594 Q7852.9063,1304.0781 7852.2813,1304.0781 Q7850.9375,1304.0781 7850.25,1305.1563 Q7849.5625,1306.2188 7849.5625,1308.3125 Q7849.5625,1310.4063 7850.25,1311.4844 Q7850.9375,1312.5469 7852.2813,1312.5469 Q7852.9063,1312.5469 7853.5,1312.2813 Q7854.0938,1312 7854.7188,1311.4219 L7854.7188,1314.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="88" x="7872.25" y="1313.3467">MenuScreen</text><line style="stroke:#181818;stroke-width:0.5;" x1="7452" x2="8348" y1="1324.5" y2="1324.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7459" y="1335.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="186" x="7471" y="1341.4951">ScreenManager &amp;manager</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7459" y="1351.4453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="299" x="7471" y="1357.792">std::shared_ptr&lt;ClientManager&gt; clientMan</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7459" y="1367.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="236" x="7471" y="1374.0889">std::shared_ptr&lt;Button&gt; titleText</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7459" y="1384.0391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="268" x="7471" y="1390.3857">std::shared_ptr&lt;Button&gt; connectText</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7459" y="1400.3359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="237" x="7471" y="1406.6826">std::shared_ptr&lt;Button&gt; quitText</text><line style="stroke:#181818;stroke-width:0.5;" x1="7452" x2="8348" y1="1413.9844" y2="1413.9844"/><ellipse cx="7462" cy="1427.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="872" x="7471" y="1430.9795">MenuScreen(sf::RenderWindow &amp;window, ScreenManager &amp;screenManager, std::shared_ptr&lt;ClientManager&gt; clientManager)</text><ellipse cx="7462" cy="1443.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="486" x="7471" y="1447.2764">void handleEvent(sf::Event event, ScreenManager &amp;manager) override</text><ellipse cx="7462" cy="1460.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="252" x="7471" y="1463.5732">void update(float deltaTime) override</text><ellipse cx="7462" cy="1476.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="343" x="7471" y="1479.8701">void render(sf::RenderWindow &amp;window) override</text><ellipse cx="7462" cy="1492.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="320" x="7471" y="1496.167">void updateSize(const sf::Vector2u a) override</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="7471" y="1512.4639">&#160;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7459" y="1522.4141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="151" x="7471" y="1528.7607">void initializeButtons()</text></g><!--class WaitingConnectionScreen--><g id="elem_WaitingConnectionScreen"><rect codeLine="199" fill="#F1F1F1" height="227.2656" id="WaitingConnectionScreen" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="989" x="6426.5" y="1301"/><ellipse cx="6827.25" cy="1317" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M6830.2188,1322.6406 Q6829.6406,1322.9375 6829,1323.0781 Q6828.3594,1323.2344 6827.6563,1323.2344 Q6825.1563,1323.2344 6823.8281,1321.5938 Q6822.5156,1319.9375 6822.5156,1316.8125 Q6822.5156,1313.6875 6823.8281,1312.0313 Q6825.1563,1310.375 6827.6563,1310.375 Q6828.3594,1310.375 6829,1310.5313 Q6829.6563,1310.6875 6830.2188,1310.9844 L6830.2188,1313.7031 Q6829.5938,1313.125 6829,1312.8594 Q6828.4063,1312.5781 6827.7813,1312.5781 Q6826.4375,1312.5781 6825.75,1313.6563 Q6825.0625,1314.7188 6825.0625,1316.8125 Q6825.0625,1318.9063 6825.75,1319.9844 Q6826.4375,1321.0469 6827.7813,1321.0469 Q6828.4063,1321.0469 6829,1320.7813 Q6829.5938,1320.5 6830.2188,1319.9219 L6830.2188,1322.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="179" x="6847.75" y="1321.8467">WaitingConnectionScreen</text><line style="stroke:#181818;stroke-width:0.5;" x1="6427.5" x2="7414.5" y1="1333" y2="1333"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6434.5" y="1343.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="106" x="6446.5" y="1349.9951">Button titleText</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6434.5" y="1359.9453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="114" x="6446.5" y="1366.292">Button backText</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6434.5" y="1376.2422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="202" x="6446.5" y="1382.5889">ScreenManager &amp;screenMan</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6434.5" y="1392.5391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="299" x="6446.5" y="1398.8857">std::shared_ptr&lt;ClientManager&gt; clientMan</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6434.5" y="1408.8359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="255" x="6446.5" y="1415.1826">static constexpr float x_offset_screen</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="6434.5" y="1425.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="255" x="6446.5" y="1431.4795">static constexpr float y_offset_screen</text><line style="stroke:#181818;stroke-width:0.5;" x1="6427.5" x2="7414.5" y1="1438.7813" y2="1438.7813"/><ellipse cx="6437.5" cy="1452.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="963" x="6446.5" y="1455.7764">WaitingConnectionScreen(sf::RenderWindow &amp;window, ScreenManager &amp;screenManager, std::shared_ptr&lt;ClientManager&gt; clientManager)</text><ellipse cx="6437.5" cy="1468.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="486" x="6446.5" y="1472.0732">void handleEvent(sf::Event event, ScreenManager &amp;manager) override</text><ellipse cx="6437.5" cy="1485.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="252" x="6446.5" y="1488.3701">void update(float deltaTime) override</text><ellipse cx="6437.5" cy="1501.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="343" x="6446.5" y="1504.667">void render(sf::RenderWindow &amp;window) override</text><ellipse cx="6437.5" cy="1517.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="260" x="6446.5" y="1520.9639">void updateSize(const sf::Vector2u a)</text></g><!--class AudioManager--><g id="elem_AudioManager"><rect codeLine="219" fill="#F1F1F1" height="227.2656" id="AudioManager" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="466" x="5524" y="2641.5"/><ellipse cx="5703.25" cy="2657.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5706.2188,2663.1406 Q5705.6406,2663.4375 5705,2663.5781 Q5704.3594,2663.7344 5703.6563,2663.7344 Q5701.1563,2663.7344 5699.8281,2662.0938 Q5698.5156,2660.4375 5698.5156,2657.3125 Q5698.5156,2654.1875 5699.8281,2652.5313 Q5701.1563,2650.875 5703.6563,2650.875 Q5704.3594,2650.875 5705,2651.0313 Q5705.6563,2651.1875 5706.2188,2651.4844 L5706.2188,2654.2031 Q5705.5938,2653.625 5705,2653.3594 Q5704.4063,2653.0781 5703.7813,2653.0781 Q5702.4375,2653.0781 5701.75,2654.1563 Q5701.0625,2655.2188 5701.0625,2657.3125 Q5701.0625,2659.4063 5701.75,2660.4844 Q5702.4375,2661.5469 5703.7813,2661.5469 Q5704.4063,2661.5469 5705,2661.2813 Q5705.5938,2661 5706.2188,2660.4219 L5706.2188,2663.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="99" x="5723.75" y="2662.3467">AudioManager</text><line style="stroke:#181818;stroke-width:0.5;" x1="5525" x2="5989" y1="2673.5" y2="2673.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5532" y="2684.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="282" x="5544" y="2690.4951">SoundType m_currentBackgroundSound</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5532" y="2700.4453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="103" x="5544" y="2706.792">Logger *logger</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5532" y="2716.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="398" x="5544" y="2723.0889">std::map&lt;SoundType, sf::SoundBuffer&gt; m_soundBuffers</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5532" y="2733.0391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="316" x="5544" y="2739.3857">std::map&lt;SoundType, sf::Sound&gt; m_sounds</text><line style="stroke:#181818;stroke-width:0.5;" x1="5525" x2="5989" y1="2746.6875" y2="2746.6875"/><ellipse cx="5535" cy="2760.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="109" x="5544" y="2763.6826">AudioManager()</text><ellipse cx="5535" cy="2776.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="121" x="5544" y="2779.9795">~AudioManager()</text><ellipse cx="5535" cy="2792.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="299" x="5544" y="2796.2764">void playSound(SoundType type, bool loop)</text><ellipse cx="5535" cy="2809.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="139" x="5544" y="2812.5732">void loadAllSounds()</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="5544" y="2828.8701">&#160;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5532" y="2838.8203"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="197" x="5544" y="2845.167">void stopBackgroundMusic()</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5532" y="2855.1172"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="440" x="5544" y="2861.4639">bool tryLoadSound(SoundType type, const std::string &amp;filepath)</text></g><!--class Logger--><g id="elem_Logger"><rect codeLine="489" fill="#F1F1F1" height="113.1875" id="Logger" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="354" x="5580" y="3360.5"/><ellipse cx="5728.75" cy="3376.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M5731.7188,3382.1406 Q5731.1406,3382.4375 5730.5,3382.5781 Q5729.8594,3382.7344 5729.1563,3382.7344 Q5726.6563,3382.7344 5725.3281,3381.0938 Q5724.0156,3379.4375 5724.0156,3376.3125 Q5724.0156,3373.1875 5725.3281,3371.5313 Q5726.6563,3369.875 5729.1563,3369.875 Q5729.8594,3369.875 5730.5,3370.0313 Q5731.1563,3370.1875 5731.7188,3370.4844 L5731.7188,3373.2031 Q5731.0938,3372.625 5730.5,3372.3594 Q5729.9063,3372.0781 5729.2813,3372.0781 Q5727.9375,3372.0781 5727.25,3373.1563 Q5726.5625,3374.2188 5726.5625,3376.3125 Q5726.5625,3378.4063 5727.25,3379.4844 Q5727.9375,3380.5469 5729.2813,3380.5469 Q5729.9063,3380.5469 5730.5,3380.2813 Q5731.0938,3380 5731.7188,3379.4219 L5731.7188,3382.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="48" x="5749.25" y="3381.3467">Logger</text><line style="stroke:#181818;stroke-width:0.5;" x1="5581" x2="5933" y1="3392.5" y2="3392.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="5588" y="3403.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="150" x="5600" y="3409.4951">std::string className</text><line style="stroke:#181818;stroke-width:0.5;" x1="5581" x2="5933" y1="3416.7969" y2="3416.7969"/><ellipse cx="5591" cy="3430.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="172" x="5600" y="3433.792">Logger(std::string name)</text><ellipse cx="5591" cy="3446.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="70" x="5600" y="3450.0889">~Logger()</text><ellipse cx="5591" cy="3463.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="328" x="5600" y="3466.3857">void console_log(const std::string &amp;msg) const</text></g><!--class Background--><g id="elem_Background"><rect codeLine="236" fill="#F1F1F1" height="145.7813" id="Background" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="723" x="8433.5" y="2682"/><ellipse cx="8748.75" cy="2698" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M8751.7188,2703.6406 Q8751.1406,2703.9375 8750.5,2704.0781 Q8749.8594,2704.2344 8749.1563,2704.2344 Q8746.6563,2704.2344 8745.3281,2702.5938 Q8744.0156,2700.9375 8744.0156,2697.8125 Q8744.0156,2694.6875 8745.3281,2693.0313 Q8746.6563,2691.375 8749.1563,2691.375 Q8749.8594,2691.375 8750.5,2691.5313 Q8751.1563,2691.6875 8751.7188,2691.9844 L8751.7188,2694.7031 Q8751.0938,2694.125 8750.5,2693.8594 Q8749.9063,2693.5781 8749.2813,2693.5781 Q8747.9375,2693.5781 8747.25,2694.6563 Q8746.5625,2695.7188 8746.5625,2697.8125 Q8746.5625,2699.9063 8747.25,2700.9844 Q8747.9375,2702.0469 8749.2813,2702.0469 Q8749.9063,2702.0469 8750.5,2701.7813 Q8751.0938,2701.5 8751.7188,2700.9219 L8751.7188,2703.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="84" x="8769.25" y="2702.8467">Background</text><line style="stroke:#181818;stroke-width:0.5;" x1="8434.5" x2="9155.5" y1="2714" y2="2714"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="8441.5" y="2724.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="183" x="8453.5" y="2730.9951">sf::RectangleShape shape</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="8441.5" y="2740.9453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="159" x="8453.5" y="2747.292">sf::Texture *tileTexture</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="8441.5" y="2757.2422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="104" x="8453.5" y="2763.5889">std::mutex mtx</text><line style="stroke:#181818;stroke-width:0.5;" x1="8434.5" x2="9155.5" y1="2770.8906" y2="2770.8906"/><ellipse cx="8444.5" cy="2784.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="697" x="8453.5" y="2787.8857">Background(sf::RenderWindow &amp;window, const std::string &amp;atlasName, const std::string &amp;tileName)</text><ellipse cx="8444.5" cy="2800.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="286" x="8453.5" y="2804.1826">void resize(const sf::Vector2u &amp;newSize)</text><ellipse cx="8444.5" cy="2817.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="283" x="8453.5" y="2820.4795">void render(sf::RenderWindow &amp;window)</text></g><!--class TextureLoader--><g id="elem_TextureLoader"><rect codeLine="366" fill="#F1F1F1" height="259.8594" id="TextureLoader" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="764" x="8437" y="3287"/><ellipse cx="8764.75" cy="3303" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M8767.7188,3308.6406 Q8767.1406,3308.9375 8766.5,3309.0781 Q8765.8594,3309.2344 8765.1563,3309.2344 Q8762.6563,3309.2344 8761.3281,3307.5938 Q8760.0156,3305.9375 8760.0156,3302.8125 Q8760.0156,3299.6875 8761.3281,3298.0313 Q8762.6563,3296.375 8765.1563,3296.375 Q8765.8594,3296.375 8766.5,3296.5313 Q8767.1563,3296.6875 8767.7188,3296.9844 L8767.7188,3299.7031 Q8767.0938,3299.125 8766.5,3298.8594 Q8765.9063,3298.5781 8765.2813,3298.5781 Q8763.9375,3298.5781 8763.25,3299.6563 Q8762.5625,3300.7188 8762.5625,3302.8125 Q8762.5625,3304.9063 8763.25,3305.9844 Q8763.9375,3307.0469 8765.2813,3307.0469 Q8765.9063,3307.0469 8766.5,3306.7813 Q8767.0938,3306.5 8767.7188,3305.9219 L8767.7188,3308.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="100" x="8785.25" y="3307.8467">TextureLoader</text><line style="stroke:#181818;stroke-width:0.5;" x1="8438" x2="9200" y1="3319" y2="3319"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="8445" y="3329.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="334" x="8457" y="3335.9951">std::map&lt;std::string, std::string&gt; atlasFilePaths</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="8445" y="3345.9453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="301" x="8457" y="3352.292">std::map&lt;std::string, sf::Texture&gt; textures</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="8445" y="3362.2422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="104" x="8457" y="3368.5889">std::mutex mtx</text><line style="stroke:#181818;stroke-width:0.5;" x1="8438" x2="9200" y1="3375.8906" y2="3375.8906"/><ellipse cx="8448" cy="3389.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="249" x="8457" y="3392.8857">static TextureLoader &amp;getInstance()</text><ellipse cx="8448" cy="3405.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="534" x="8457" y="3409.1826">sf::Texture &amp;getTexture(const std::string &amp;name, const std::string &amp;filePath)</text><ellipse cx="8448" cy="3422.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="738" x="8457" y="3425.4795">sf::Texture &amp;getTile(const std::string &amp;atlasName, const std::string &amp;tileName, const sf::IntRect &amp;tileRect)</text><ellipse cx="8448" cy="3438.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="75" x="8457" y="3441.7764">void clear()</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="8457" y="3458.0732">&#160;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="8445" y="3468.0234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="110" x="8457" y="3474.3701">TextureLoader()</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="8445" y="3484.3203"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="122" x="8457" y="3490.667">~TextureLoader()</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="8445" y="3500.6172"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="333" x="8457" y="3506.9639">TextureLoader(const TextureLoader &amp;) = delete</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="8445" y="3516.9141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="420" x="8457" y="3523.2607">TextureLoader &amp;operator=(const TextureLoader &amp;) = delete</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="8445" y="3533.2109"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="523" x="8457" y="3539.5576">sf::Image getTileImage(const sf::Texture &amp;atlas, const sf::IntRect &amp;tileRect)</text></g><!--class NetworkManager--><g id="elem_NetworkManager"><rect codeLine="496" fill="#F1F1F1" height="732.4688" id="NetworkManager" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="566" x="7832" y="2389"/><ellipse cx="8052.25" cy="2405" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M8055.2188,2410.6406 Q8054.6406,2410.9375 8054,2411.0781 Q8053.3594,2411.2344 8052.6563,2411.2344 Q8050.1563,2411.2344 8048.8281,2409.5938 Q8047.5156,2407.9375 8047.5156,2404.8125 Q8047.5156,2401.6875 8048.8281,2400.0313 Q8050.1563,2398.375 8052.6563,2398.375 Q8053.3594,2398.375 8054,2398.5313 Q8054.6563,2398.6875 8055.2188,2398.9844 L8055.2188,2401.7031 Q8054.5938,2401.125 8054,2400.8594 Q8053.4063,2400.5781 8052.7813,2400.5781 Q8051.4375,2400.5781 8050.75,2401.6563 Q8050.0625,2402.7188 8050.0625,2404.8125 Q8050.0625,2406.9063 8050.75,2407.9844 Q8051.4375,2409.0469 8052.7813,2409.0469 Q8053.4063,2409.0469 8054,2408.7813 Q8054.5938,2408.5 8055.2188,2407.9219 L8055.2188,2410.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="117" x="8072.75" y="2409.8467">NetworkManager</text><line style="stroke:#181818;stroke-width:0.5;" x1="7833" x2="8397" y1="2421" y2="2421"/><ellipse cx="7843" cy="2434.6484" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="196" x="7852" y="2437.9951">const int network_frequency</text><ellipse cx="7843" cy="2450.9453" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="155" x="7852" y="2454.292">static const int version</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="7852" y="2470.5889">&#160;</text><polygon fill="none" points="7843,2478.5391,7847,2482.5391,7843,2486.5391,7839,2482.5391" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="103" x="7852" y="2486.8857">Logger *logger</text><polygon fill="none" points="7843,2494.8359,7847,2498.8359,7843,2502.8359,7839,2498.8359" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="7852" y="2503.1826">ENetHost *host</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="7852" y="2519.4795">&#160;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7840" y="2529.4297"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="269" x="7852" y="2535.7764">std::queue&lt;Packet&gt; outgoingPackets</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7840" y="2545.7266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="270" x="7852" y="2552.0732">std::queue&lt;Packet&gt; incomingPackets</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7840" y="2562.0234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="183" x="7852" y="2568.3701">std::mutex outgoingMutex</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7840" y="2578.3203"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="184" x="7852" y="2584.667">std::mutex incomingMutex</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7840" y="2594.6172"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="287" x="7852" y="2600.9639">std::condition_variable outgoingCondition</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7840" y="2610.9141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="288" x="7852" y="2617.2607">std::condition_variable incomingCondition</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7840" y="2627.2109"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="186" x="7852" y="2633.5576">std::thread networkThread</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7840" y="2643.5078"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="165" x="7852" y="2649.8545">std::thread sendThread</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7840" y="2659.8047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="180" x="7852" y="2666.1514">std::thread receiveThread</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7840" y="2676.1016"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="202" x="7852" y="2682.4482">std::atomic&lt;bool&gt; mainTask</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7840" y="2692.3984"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="192" x="7852" y="2698.7451">std::atomic&lt;bool&gt; sending</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7840" y="2708.6953"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="198" x="7852" y="2715.042">std::atomic&lt;bool&gt; receiving</text><line style="stroke:#181818;stroke-width:0.5;" x1="7833" x2="8397" y1="2722.3438" y2="2722.3438"/><ellipse cx="7843" cy="2735.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="7852" y="2739.3389">NetworkManager()</text><ellipse cx="7843" cy="2752.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="139" x="7852" y="2755.6357">~NetworkManager()</text><ellipse cx="7843" cy="2768.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="495" x="7852" y="2771.9326">void registerListener(PacketType, std::function&lt;void(const Packet &amp;)&gt;)</text><ellipse cx="7843" cy="2784.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="156" x="7852" y="2788.2295">bool isRunning() const</text><ellipse cx="7843" cy="2801.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="295" x="7852" y="2804.5264">std::string uint32_to_ipv4(uint32_t ip_addr)</text><ellipse cx="7843" cy="2817.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="141" x="7852" y="2820.8232">ENetHost *getHost()</text><ellipse cx="7843" cy="2833.7734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="252" x="7852" y="2837.1201">std::vector&lt;ENetPeer *&gt; getPeers()</text><ellipse cx="7843" cy="2850.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="230" x="7852" y="2853.417">void sendPacket(const Packet &amp;)</text><ellipse cx="7843" cy="2866.3672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="264" x="7852" y="2869.7139">void broadcastPacket(const Packet &amp;)</text><polygon fill="#FFFF44" points="7843,2877.6641,7847,2881.6641,7843,2885.6641,7839,2881.6641" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="524" x="7852" y="2886.0107">Packet parsePacket(const ENetPacket *enetPacket, ENetPeer *sourcePeer)</text><polygon fill="#FFFF44" points="7843,2893.9609,7847,2897.9609,7843,2901.9609,7839,2897.9609" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="362" x="7852" y="2902.3076">void handlePacket(Packet &amp;packet, ENetPeer *peer)</text><polygon fill="#FFFF44" points="7843,2910.2578,7847,2914.2578,7843,2918.2578,7839,2914.2578" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="332" x="7852" y="2918.6045">virtual void onPeerConnect(ENetPeer *peer) = 0</text><polygon fill="#FFFF44" points="7843,2926.5547,7847,2930.5547,7843,2934.5547,7839,2930.5547" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="352" x="7852" y="2934.9014">virtual void onPeerDisconnect(ENetPeer *peer) = 0</text><polygon fill="#FFFF44" points="7843,2942.8516,7847,2946.8516,7843,2950.8516,7839,2946.8516" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="164" x="7852" y="2951.1982">void TaskStartNetwork()</text><polygon fill="#FFFF44" points="7843,2959.1484,7847,2963.1484,7843,2967.1484,7839,2963.1484" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="164" x="7852" y="2967.4951">void TaskStopNetwork()</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="7852" y="2983.792">&#160;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7840" y="2993.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="540" x="7852" y="3000.0889">std::unordered_map&lt;uint8_t, std::function&lt;void(const Packet &amp;)&gt;&gt; listeners</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7840" y="3010.0391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="297" x="7852" y="3016.3857">void processENetEvent(ENetEvent &amp;event)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7840" y="3026.3359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="216" x="7852" y="3032.6826">void processIncomingPackets()</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7840" y="3042.6328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="196" x="7852" y="3048.9795">void sendOutgoingPackets()</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7840" y="3058.9297"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="378" x="7852" y="3065.2764">ENetPacket *createENetPacket(const Packet &amp;packet)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7840" y="3075.2266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="132" x="7852" y="3081.5732">void TaskNetwork()</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7840" y="3091.5234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="111" x="7852" y="3097.8701">void TaskSend()</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7840" y="3107.8203"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="130" x="7852" y="3114.167">void TaskReceive()</text></g><!--class PlayerData--><g id="elem_PlayerData"><rect codeLine="564" fill="#F1F1F1" height="145.7813" id="PlayerData" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="339" x="3835.5" y="4174"/><ellipse cx="3964.25" cy="4190" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3967.2188,4195.6406 Q3966.6406,4195.9375 3966,4196.0781 Q3965.3594,4196.2344 3964.6563,4196.2344 Q3962.1563,4196.2344 3960.8281,4194.5938 Q3959.5156,4192.9375 3959.5156,4189.8125 Q3959.5156,4186.6875 3960.8281,4185.0313 Q3962.1563,4183.375 3964.6563,4183.375 Q3965.3594,4183.375 3966,4183.5313 Q3966.6563,4183.6875 3967.2188,4183.9844 L3967.2188,4186.7031 Q3966.5938,4186.125 3966,4185.8594 Q3965.4063,4185.5781 3964.7813,4185.5781 Q3963.4375,4185.5781 3962.75,4186.6563 Q3962.0625,4187.7188 3962.0625,4189.8125 Q3962.0625,4191.9063 3962.75,4192.9844 Q3963.4375,4194.0469 3964.7813,4194.0469 Q3965.4063,4194.0469 3966,4193.7813 Q3966.5938,4193.5 3967.2188,4192.9219 L3967.2188,4195.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="73" x="3984.75" y="4194.8467">PlayerData</text><line style="stroke:#181818;stroke-width:0.5;" x1="3836.5" x2="4173.5" y1="4206" y2="4206"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3843.5" y="4216.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="156" x="3855.5" y="4222.9951">std::string playerName</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3843.5" y="4232.9453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="33" x="3855.5" y="4239.292">int id</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3843.5" y="4249.2422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="60" x="3855.5" y="4255.5889">int score</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3843.5" y="4265.5391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="122" x="3855.5" y="4271.8857">bool isConnected</text><line style="stroke:#181818;stroke-width:0.5;" x1="3836.5" x2="4173.5" y1="4279.1875" y2="4279.1875"/><ellipse cx="3846.5" cy="4292.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="221" x="3855.5" y="4296.1826">nlohmann::json serialize() const</text><ellipse cx="3846.5" cy="4309.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="313" x="3855.5" y="4312.4795">void deserialize(const nlohmann::json &amp;data)</text></g><!--class PlayerList--><g id="elem_PlayerList"><rect codeLine="574" fill="#F1F1F1" height="194.6719" id="PlayerList" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="382" x="4664" y="3737.5"/><ellipse cx="4818.75" cy="3753.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4821.7188,3759.1406 Q4821.1406,3759.4375 4820.5,3759.5781 Q4819.8594,3759.7344 4819.1563,3759.7344 Q4816.6563,3759.7344 4815.3281,3758.0938 Q4814.0156,3756.4375 4814.0156,3753.3125 Q4814.0156,3750.1875 4815.3281,3748.5313 Q4816.6563,3746.875 4819.1563,3746.875 Q4819.8594,3746.875 4820.5,3747.0313 Q4821.1563,3747.1875 4821.7188,3747.4844 L4821.7188,3750.2031 Q4821.0938,3749.625 4820.5,3749.3594 Q4819.9063,3749.0781 4819.2813,3749.0781 Q4817.9375,3749.0781 4817.25,3750.1563 Q4816.5625,3751.2188 4816.5625,3753.3125 Q4816.5625,3755.4063 4817.25,3756.4844 Q4817.9375,3757.5469 4819.2813,3757.5469 Q4819.9063,3757.5469 4820.5,3757.2813 Q4821.0938,3757 4821.7188,3756.4219 L4821.7188,3759.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="64" x="4839.25" y="3758.3467">PlayerList</text><line style="stroke:#181818;stroke-width:0.5;" x1="4665" x2="5045" y1="3769.5" y2="3769.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="4672" y="3780.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="225" x="4684" y="3786.4951">std::vector&lt;PlayerData&gt; players</text><line style="stroke:#181818;stroke-width:0.5;" x1="4665" x2="5045" y1="3793.7969" y2="3793.7969"/><ellipse cx="4675" cy="3807.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="74" x="4684" y="3810.792">PlayerList()</text><ellipse cx="4675" cy="3823.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="86" x="4684" y="3827.0889">~PlayerList()</text><ellipse cx="4675" cy="3840.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="221" x="4684" y="3843.3857">nlohmann::json serialize() const</text><ellipse cx="4675" cy="3856.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="313" x="4684" y="3859.6826">void deserialize(const nlohmann::json &amp;data)</text><ellipse cx="4675" cy="3872.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="356" x="4684" y="3875.9795">const std::vector&lt;PlayerData&gt; &amp;getPlayers() const</text><ellipse cx="4675" cy="3888.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="124" x="4684" y="3892.2764">void clearPlayers()</text><ellipse cx="4675" cy="3905.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="282" x="4684" y="3908.5732">void addPlayer(const PlayerData &amp;player)</text><ellipse cx="4675" cy="3921.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="308" x="4684" y="3924.8701">void removePlayer(const PlayerData &amp;player)</text></g><!--class ThreadSafeQueue--><g id="elem_ThreadSafeQueue"><rect codeLine="663" fill="#F1F1F1" height="178.375" id="ThreadSafeQueue" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="227" x="2560.5" y="2666"/><ellipse cx="2601.6" cy="2682" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2604.5688,2687.6406 Q2603.9906,2687.9375 2603.35,2688.0781 Q2602.7094,2688.2344 2602.0063,2688.2344 Q2599.5063,2688.2344 2598.1781,2686.5938 Q2596.8656,2684.9375 2596.8656,2681.8125 Q2596.8656,2678.6875 2598.1781,2677.0313 Q2599.5063,2675.375 2602.0063,2675.375 Q2602.7094,2675.375 2603.35,2675.5313 Q2604.0063,2675.6875 2604.5688,2675.9844 L2604.5688,2678.7031 Q2603.9438,2678.125 2603.35,2677.8594 Q2602.7563,2677.5781 2602.1313,2677.5781 Q2600.7875,2677.5781 2600.1,2678.6563 Q2599.4125,2679.7188 2599.4125,2681.8125 Q2599.4125,2683.9063 2600.1,2684.9844 Q2600.7875,2686.0469 2602.1313,2686.0469 Q2602.7563,2686.0469 2603.35,2685.7813 Q2603.9438,2685.5 2604.5688,2684.9219 L2604.5688,2687.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="126" x="2621.4" y="2686.8467">ThreadSafeQueue</text><rect fill="#FFFFFF" height="15.9688" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="9" x="2781.5" y="2663"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="7" x="2782.5" y="2675.1387">T</text><line style="stroke:#181818;stroke-width:0.5;" x1="2561.5" x2="2786.5" y1="2698" y2="2698"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2568.5" y="2708.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="166" x="2580.5" y="2714.9951">std::queue&lt;T&gt; queue_</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2568.5" y="2724.9453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="2580.5" y="2731.292">std::mutex mutex_</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2568.5" y="2741.2422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="201" x="2580.5" y="2747.5889">std::condition_variable cond_</text><line style="stroke:#181818;stroke-width:0.5;" x1="2561.5" x2="2786.5" y1="2754.8906" y2="2754.8906"/><ellipse cx="2571.5" cy="2768.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="126" x="2580.5" y="2771.8857">void push(T value)</text><ellipse cx="2571.5" cy="2784.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="132" x="2580.5" y="2788.1826">bool pop(T &amp;value)</text><ellipse cx="2571.5" cy="2801.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="197" x="2580.5" y="2804.4795">void wait_and_pop(T &amp;value)</text><ellipse cx="2571.5" cy="2817.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="130" x="2580.5" y="2820.7764">bool empty() const</text><ellipse cx="2571.5" cy="2833.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="75" x="2580.5" y="2837.0732">void clear()</text></g><!--class Packet--><g id="elem_Packet"><rect codeLine="545" fill="#F1F1F1" height="259.8594" id="Packet" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="574" x="7828" y="3287"/><ellipse cx="8087.25" cy="3303" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M8090.2188,3308.6406 Q8089.6406,3308.9375 8089,3309.0781 Q8088.3594,3309.2344 8087.6563,3309.2344 Q8085.1563,3309.2344 8083.8281,3307.5938 Q8082.5156,3305.9375 8082.5156,3302.8125 Q8082.5156,3299.6875 8083.8281,3298.0313 Q8085.1563,3296.375 8087.6563,3296.375 Q8088.3594,3296.375 8089,3296.5313 Q8089.6563,3296.6875 8090.2188,3296.9844 L8090.2188,3299.7031 Q8089.5938,3299.125 8089,3298.8594 Q8088.4063,3298.5781 8087.7813,3298.5781 Q8086.4375,3298.5781 8085.75,3299.6563 Q8085.0625,3300.7188 8085.0625,3302.8125 Q8085.0625,3304.9063 8085.75,3305.9844 Q8086.4375,3307.0469 8087.7813,3307.0469 Q8088.4063,3307.0469 8089,3306.7813 Q8089.5938,3306.5 8090.2188,3305.9219 L8090.2188,3308.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="47" x="8107.75" y="3307.8467">Packet</text><line style="stroke:#181818;stroke-width:0.5;" x1="7829" x2="8401" y1="3319" y2="3319"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7836" y="3329.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="115" x="7848" y="3335.9951">PacketType type</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7836" y="3345.9453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="180" x="7848" y="3352.292">std::vector&lt;uint8_t&gt; data</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="7836" y="3362.2422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="108" x="7848" y="3368.5889">ENetPeer *peer</text><line style="stroke:#181818;stroke-width:0.5;" x1="7829" x2="8401" y1="3375.8906" y2="3375.8906"/><ellipse cx="7839" cy="3389.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="325" x="7848" y="3392.8857">Packet(PacketType t, ENetPeer *dest = nullptr)</text><ellipse cx="7839" cy="3405.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="547" x="7848" y="3409.1826">Packet(PacketType t, const std::vector&lt;uint8_t&gt; &amp;d, ENetPeer *dest = nullptr)</text><ellipse cx="7839" cy="3422.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="357" x="7848" y="3425.4795">Packet(PacketType t, int i, ENetPeer *dest = nullptr)</text><ellipse cx="7839" cy="3438.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="548" x="7848" y="3441.7764">Packet(PacketType t, const ISerializable &amp;serializable, ENetPeer *dest = nullptr)</text><ellipse cx="7839" cy="3454.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="293" x="7848" y="3458.0732">std::vector&lt;uint8_t&gt; toRawPacket() const</text><ellipse cx="7839" cy="3471.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="214" x="7848" y="3474.3701">void setENetPeer(ENetPeer *p)</text><ellipse cx="7839" cy="3487.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="313" x="7848" y="3490.667">const std::vector&lt;uint8_t&gt; &amp;getData() const</text><ellipse cx="7839" cy="3503.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="287" x="7848" y="3506.9639">nlohmann::json getPayloadAsJson() const</text><ellipse cx="7839" cy="3519.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="195" x="7848" y="3523.2607">PacketType getType() const</text><ellipse cx="7839" cy="3536.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="184" x="7848" y="3539.5576">ENetPeer *getPeer() const</text></g><!--class ISerializable--><g id="elem_ISerializable"><rect codeLine="385" fill="#F1F1F1" height="96.8906" id="ISerializable" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="383" x="2327.5" y="4017"/><ellipse cx="2474.75" cy="4033" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2477.7188,4038.6406 Q2477.1406,4038.9375 2476.5,4039.0781 Q2475.8594,4039.2344 2475.1563,4039.2344 Q2472.6563,4039.2344 2471.3281,4037.5938 Q2470.0156,4035.9375 2470.0156,4032.8125 Q2470.0156,4029.6875 2471.3281,4028.0313 Q2472.6563,4026.375 2475.1563,4026.375 Q2475.8594,4026.375 2476.5,4026.5313 Q2477.1563,4026.6875 2477.7188,4026.9844 L2477.7188,4029.7031 Q2477.0938,4029.125 2476.5,4028.8594 Q2475.9063,4028.5781 2475.2813,4028.5781 Q2473.9375,4028.5781 2473.25,4029.6563 Q2472.5625,4030.7188 2472.5625,4032.8125 Q2472.5625,4034.9063 2473.25,4035.9844 Q2473.9375,4037.0469 2475.2813,4037.0469 Q2475.9063,4037.0469 2476.5,4036.7813 Q2477.0938,4036.5 2477.7188,4035.9219 L2477.7188,4038.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="2495.25" y="4037.8467">ISerializable</text><line style="stroke:#181818;stroke-width:0.5;" x1="2328.5" x2="2709.5" y1="4049" y2="4049"/><line style="stroke:#181818;stroke-width:0.5;" x1="2328.5" x2="2709.5" y1="4057" y2="4057"/><ellipse cx="2338.5" cy="4070.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="146" x="2347.5" y="4073.9951">virtual ~ISerializable()</text><ellipse cx="2338.5" cy="4086.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="265" x="2347.5" y="4090.292">virtual nlohmann::json serialize() const</text><ellipse cx="2338.5" cy="4103.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="357" x="2347.5" y="4106.5889">virtual void deserialize(const nlohmann::json &amp;data)</text></g><!--class Coordinate--><g id="elem_Coordinate"><rect codeLine="431" fill="#F1F1F1" height="243.5625" id="Coordinate" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="338" x="1037" y="3713"/><ellipse cx="1163.75" cy="3729" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1166.7188,3734.6406 Q1166.1406,3734.9375 1165.5,3735.0781 Q1164.8594,3735.2344 1164.1563,3735.2344 Q1161.6563,3735.2344 1160.3281,3733.5938 Q1159.0156,3731.9375 1159.0156,3728.8125 Q1159.0156,3725.6875 1160.3281,3724.0313 Q1161.6563,3722.375 1164.1563,3722.375 Q1164.8594,3722.375 1165.5,3722.5313 Q1166.1563,3722.6875 1166.7188,3722.9844 L1166.7188,3725.7031 Q1166.0938,3725.125 1165.5,3724.8594 Q1164.9063,3724.5781 1164.2813,3724.5781 Q1162.9375,3724.5781 1162.25,3725.6563 Q1161.5625,3726.7188 1161.5625,3728.8125 Q1161.5625,3730.9063 1162.25,3731.9844 Q1162.9375,3733.0469 1164.2813,3733.0469 Q1164.9063,3733.0469 1165.5,3732.7813 Q1166.0938,3732.5 1166.7188,3731.9219 L1166.7188,3734.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="76" x="1184.25" y="3733.8467">Coordinate</text><line style="stroke:#181818;stroke-width:0.5;" x1="1038" x2="1374" y1="3745" y2="3745"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1045" y="3755.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="28" x="1057" y="3761.9951">int x</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1045" y="3771.9453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="28" x="1057" y="3778.292">int y</text><line style="stroke:#181818;stroke-width:0.5;" x1="1038" x2="1374" y1="3785.5938" y2="3785.5938"/><ellipse cx="1048" cy="3799.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="86" x="1057" y="3802.5889">Coordinate()</text><ellipse cx="1048" cy="3815.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="190" x="1057" y="3818.8857">Coordinate(int xVal, int yVal)</text><ellipse cx="1048" cy="3831.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="63" x="1057" y="3835.1826">int getX()</text><ellipse cx="1048" cy="3848.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="63" x="1057" y="3851.4795">int getY()</text><ellipse cx="1048" cy="3864.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="105" x="1057" y="3867.7764">void addX(int x)</text><ellipse cx="1048" cy="3880.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="105" x="1057" y="3884.0732">void addY(int y)</text><ellipse cx="1048" cy="3897.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="1057" y="3900.3701">void setX(int x)</text><ellipse cx="1048" cy="3913.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="1057" y="3916.667">void setY(int y)</text><ellipse cx="1048" cy="3929.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="221" x="1057" y="3932.9639">nlohmann::json serialize() const</text><ellipse cx="1048" cy="3945.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="312" x="1057" y="3949.2607">void deserialize(const nlohmann::json &amp;json)</text></g><!--class Clock--><g id="elem_Clock"><rect codeLine="421" fill="#F1F1F1" height="145.7813" id="Clock" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="529" x="3882.5" y="948.5"/><ellipse cx="4123.75" cy="964.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M4126.7188,970.1406 Q4126.1406,970.4375 4125.5,970.5781 Q4124.8594,970.7344 4124.1563,970.7344 Q4121.6563,970.7344 4120.3281,969.0938 Q4119.0156,967.4375 4119.0156,964.3125 Q4119.0156,961.1875 4120.3281,959.5313 Q4121.6563,957.875 4124.1563,957.875 Q4124.8594,957.875 4125.5,958.0313 Q4126.1563,958.1875 4126.7188,958.4844 L4126.7188,961.2031 Q4126.0938,960.625 4125.5,960.3594 Q4124.9063,960.0781 4124.2813,960.0781 Q4122.9375,960.0781 4122.25,961.1563 Q4121.5625,962.2188 4121.5625,964.3125 Q4121.5625,966.4063 4122.25,967.4844 Q4122.9375,968.5469 4124.2813,968.5469 Q4124.9063,968.5469 4125.5,968.2813 Q4126.0938,968 4126.7188,967.4219 L4126.7188,970.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="38" x="4144.25" y="969.3467">Clock</text><line style="stroke:#181818;stroke-width:0.5;" x1="3883.5" x2="4410.5" y1="980.5" y2="980.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3890.5" y="991.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="503" x="3902.5" y="997.4951">std::chrono::time_point&lt;std::chrono::high_resolution_clock&gt; startTime_</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3890.5" y="1007.4453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="219" x="3902.5" y="1013.792">std::string measurementName_</text><line style="stroke:#181818;stroke-width:0.5;" x1="3883.5" x2="4410.5" y1="1021.0938" y2="1021.0938"/><ellipse cx="3893.5" cy="1034.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="260" x="3902.5" y="1038.0889">Clock(std::string measurementName)</text><ellipse cx="3893.5" cy="1051.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="73" x="3902.5" y="1054.3857">void start()</text><ellipse cx="3893.5" cy="1067.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="69" x="3902.5" y="1070.6826">void end()</text><ellipse cx="3893.5" cy="1083.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="273" x="3902.5" y="1086.9795">long long elapsedMicroseconds() const</text></g><!--class TetrominoShape--><g id="elem_TetrominoShape"><rect codeLine="648" fill="#F1F1F1" height="178.375" id="TetrominoShape" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="481" x="1481.5" y="3746"/><ellipse cx="1660.25" cy="3762" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1663.2188,3767.6406 Q1662.6406,3767.9375 1662,3768.0781 Q1661.3594,3768.2344 1660.6563,3768.2344 Q1658.1563,3768.2344 1656.8281,3766.5938 Q1655.5156,3764.9375 1655.5156,3761.8125 Q1655.5156,3758.6875 1656.8281,3757.0313 Q1658.1563,3755.375 1660.6563,3755.375 Q1661.3594,3755.375 1662,3755.5313 Q1662.6563,3755.6875 1663.2188,3755.9844 L1663.2188,3758.7031 Q1662.5938,3758.125 1662,3757.8594 Q1661.4063,3757.5781 1660.7813,3757.5781 Q1659.4375,3757.5781 1658.75,3758.6563 Q1658.0625,3759.7188 1658.0625,3761.8125 Q1658.0625,3763.9063 1658.75,3764.9844 Q1659.4375,3766.0469 1660.7813,3766.0469 Q1661.4063,3766.0469 1662,3765.7813 Q1662.5938,3765.5 1663.2188,3764.9219 L1663.2188,3767.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="115" x="1680.75" y="3766.8467">TetrominoShape</text><line style="stroke:#181818;stroke-width:0.5;" x1="1482.5" x2="1961.5" y1="3778" y2="3778"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1489.5" y="3788.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="262" x="1501.5" y="3794.9951">std::vector&lt;std::vector&lt;int&gt;&gt; shape</text><line style="stroke:#181818;stroke-width:0.5;" x1="1482.5" x2="1961.5" y1="3802.2969" y2="3802.2969"/><ellipse cx="1492.5" cy="3815.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="1501.5" y="3819.292">TetrominoShape()</text><ellipse cx="1492.5" cy="3832.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="442" x="1501.5" y="3835.5889">TetrominoShape(const std::vector&lt;std::vector&lt;int&gt;&gt; &amp;shape)</text><ellipse cx="1492.5" cy="3848.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="394" x="1501.5" y="3851.8857">const std::vector&lt;std::vector&lt;int&gt;&gt; &amp;getShape() const</text><ellipse cx="1492.5" cy="3864.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="455" x="1501.5" y="3868.1826">void setShape(const std::vector&lt;std::vector&lt;int&gt;&gt; &amp;newShape)</text><ellipse cx="1492.5" cy="3881.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="221" x="1501.5" y="3884.4795">nlohmann::json serialize() const</text><ellipse cx="1492.5" cy="3897.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="313" x="1501.5" y="3900.7764">void deserialize(const nlohmann::json &amp;data)</text><ellipse cx="1492.5" cy="3913.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="124" x="1501.5" y="3917.0732">void invertShape()</text></g><!--class BoardController--><g id="elem_BoardController"><rect codeLine="677" fill="#F1F1F1" height="194.6719" id="BoardController" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="1149" x="929.5" y="1889.5"/><ellipse cx="1445.75" cy="1905.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1448.7188,1911.1406 Q1448.1406,1911.4375 1447.5,1911.5781 Q1446.8594,1911.7344 1446.1563,1911.7344 Q1443.6563,1911.7344 1442.3281,1910.0938 Q1441.0156,1908.4375 1441.0156,1905.3125 Q1441.0156,1902.1875 1442.3281,1900.5313 Q1443.6563,1898.875 1446.1563,1898.875 Q1446.8594,1898.875 1447.5,1899.0313 Q1448.1563,1899.1875 1448.7188,1899.4844 L1448.7188,1902.2031 Q1448.0938,1901.625 1447.5,1901.3594 Q1446.9063,1901.0781 1446.2813,1901.0781 Q1444.9375,1901.0781 1444.25,1902.1563 Q1443.5625,1903.2188 1443.5625,1905.3125 Q1443.5625,1907.4063 1444.25,1908.4844 Q1444.9375,1909.5469 1446.2813,1909.5469 Q1446.9063,1909.5469 1447.5,1909.2813 Q1448.0938,1909 1448.7188,1908.4219 L1448.7188,1911.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="108" x="1466.25" y="1910.3467">BoardController</text><line style="stroke:#181818;stroke-width:0.5;" x1="930.5" x2="2077.5" y1="1921.5" y2="1921.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="937.5" y="1932.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="242" x="949.5" y="1938.4951">std::weak_ptr&lt;TetrisBoard&gt; board</text><line style="stroke:#181818;stroke-width:0.5;" x1="930.5" x2="2077.5" y1="1945.7969" y2="1945.7969"/><ellipse cx="940.5" cy="1959.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="372" x="949.5" y="1962.792">BoardController(std::shared_ptr&lt;TetrisBoard&gt; board)</text><ellipse cx="940.5" cy="1975.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="130" x="949.5" y="1979.0889">~BoardController()</text><ellipse cx="940.5" cy="1992.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="558" x="949.5" y="1995.3857">void clearFallingTetromino(const std::shared_ptr&lt;Tetromino&gt; currentTetromino)</text><ellipse cx="940.5" cy="2008.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="194" x="949.5" y="2011.6826">void clearFallenTetrominos()</text><ellipse cx="940.5" cy="2024.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1123" x="949.5" y="2027.9795">CollisionType checkCollision(std::shared_ptr&lt;Tetromino&gt; currentTetromino, TetrisAction action, std::shared_ptr&lt;TetrominoController&gt; tetrominoController) const</text><ellipse cx="940.5" cy="2040.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="688" x="949.5" y="2044.2764">void setCellState(int ownerID, const std::shared_ptr&lt;Tetromino&gt; currentTetromino, CellState state)</text><ellipse cx="940.5" cy="2057.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="177" x="949.5" y="2060.5732">int findAndClearFullLines()</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="937.5" y="2070.5234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="641" x="949.5" y="2076.8701">void printMatrix(const std::vector&lt;std::vector&lt;int&gt;&gt; &amp;matrix, const std::string &amp;label) const</text></g><!--class TetrominoController--><g id="elem_TetrominoController"><rect codeLine="793" fill="#F1F1F1" height="194.6719" id="TetrominoController" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="647" x="858.5" y="2657.5"/><ellipse cx="1108.75" cy="2673.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1111.7188,2679.1406 Q1111.1406,2679.4375 1110.5,2679.5781 Q1109.8594,2679.7344 1109.1563,2679.7344 Q1106.6563,2679.7344 1105.3281,2678.0938 Q1104.0156,2676.4375 1104.0156,2673.3125 Q1104.0156,2670.1875 1105.3281,2668.5313 Q1106.6563,2666.875 1109.1563,2666.875 Q1109.8594,2666.875 1110.5,2667.0313 Q1111.1563,2667.1875 1111.7188,2667.4844 L1111.7188,2670.2031 Q1111.0938,2669.625 1110.5,2669.3594 Q1109.9063,2669.0781 1109.2813,2669.0781 Q1107.9375,2669.0781 1107.25,2670.1563 Q1106.5625,2671.2188 1106.5625,2673.3125 Q1106.5625,2675.4063 1107.25,2676.4844 Q1107.9375,2677.5469 1109.2813,2677.5469 Q1109.9063,2677.5469 1110.5,2677.2813 Q1111.0938,2677 1111.7188,2676.4219 L1111.7188,2679.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="138" x="1129.25" y="2678.3467">TetrominoController</text><line style="stroke:#181818;stroke-width:0.5;" x1="859.5" x2="1504.5" y1="2689.5" y2="2689.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="859.5" x2="1504.5" y1="2697.5" y2="2697.5"/><ellipse cx="869.5" cy="2711.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="148" x="878.5" y="2714.4951">TetrominoController()</text><ellipse cx="869.5" cy="2727.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="160" x="878.5" y="2730.792">~TetrominoController()</text><ellipse cx="869.5" cy="2743.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="463" x="878.5" y="2747.0889">void setCanMove(std::shared_ptr&lt;Tetromino&gt; &amp;tetromino, bool b)</text><ellipse cx="869.5" cy="2760.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="498" x="878.5" y="2763.3857">void setLockedInPlace(std::shared_ptr&lt;Tetromino&gt; &amp;tetromino, bool b)</text><ellipse cx="869.5" cy="2776.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="433" x="878.5" y="2779.6826">bool canMove(const std::shared_ptr&lt;Tetromino&gt; &amp;tetromino)</text><ellipse cx="869.5" cy="2792.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="481" x="878.5" y="2795.9795">bool isLockedInPlace(const std::shared_ptr&lt;Tetromino&gt; &amp;tetromino)</text><ellipse cx="869.5" cy="2808.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="621" x="878.5" y="2812.2764">void transform(std::shared_ptr&lt;Tetromino&gt; &amp;tetromino, TetrisAction action, bool forward)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="878.5" y="2828.5732">&#160;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="866.5" y="2838.5234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="503" x="878.5" y="2844.8701">void rotate(std::shared_ptr&lt;Tetromino&gt; &amp;tetromino, TetrisAction action)</text></g><!--class Game--><g id="elem_Game"><rect codeLine="694" fill="#F1F1F1" height="536.9063" id="Game" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="676" x="2383" y="262"/><ellipse cx="2696.25" cy="278" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2699.2188,283.6406 Q2698.6406,283.9375 2698,284.0781 Q2697.3594,284.2344 2696.6563,284.2344 Q2694.1563,284.2344 2692.8281,282.5938 Q2691.5156,280.9375 2691.5156,277.8125 Q2691.5156,274.6875 2692.8281,273.0313 Q2694.1563,271.375 2696.6563,271.375 Q2697.3594,271.375 2698,271.5313 Q2698.6563,271.6875 2699.2188,271.9844 L2699.2188,274.7031 Q2698.5938,274.125 2698,273.8594 Q2697.4063,273.5781 2696.7813,273.5781 Q2695.4375,273.5781 2694.75,274.6563 Q2694.0625,275.7188 2694.0625,277.8125 Q2694.0625,279.9063 2694.75,280.9844 Q2695.4375,282.0469 2696.7813,282.0469 Q2697.4063,282.0469 2698,281.7813 Q2698.5938,281.5 2699.2188,280.9219 L2699.2188,283.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="41" x="2716.75" y="282.8467">Game</text><line style="stroke:#181818;stroke-width:0.5;" x1="2384" x2="3058" y1="294" y2="294"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2391" y="304.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="163" x="2403" y="310.9951">static int instanceCount</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2391" y="320.9453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="155" x="2403" y="327.292">const int this_instance</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2391" y="337.2422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="201" x="2403" y="343.5889">std::atomic&lt;bool&gt; stopLoop</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2391" y="353.5391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="115" x="2403" y="359.8857">Clock gameTime</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2391" y="369.8359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="103" x="2403" y="376.1826">Logger *logger</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2391" y="386.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="163" x="2403" y="392.4795">ServerManager &amp;server</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2391" y="402.4297"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="258" x="2403" y="408.7764">std::atomic&lt;GameState&gt; gameState</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2391" y="418.7266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="149" x="2403" y="425.0732">GamePhysics physics</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2391" y="435.0234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="160" x="2403" y="441.3701">GameStatus gameData</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2391" y="451.3203"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="392" x="2403" y="457.667">std::shared_ptr&lt;TetrominoManager&gt; tetrominoManager</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2391" y="467.6172"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="406" x="2403" y="473.9639">std::shared_ptr&lt;TetrominoController&gt; tetrominoController</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2391" y="483.9141"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="349" x="2403" y="490.2607">std::shared_ptr&lt;BoardController&gt; boardController</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2391" y="500.2109"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="254" x="2403" y="506.5576">std::shared_ptr&lt;TetrisBoard&gt; board</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2391" y="516.5078"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="204" x="2403" y="522.8545">std::vector&lt;Player *&gt; players</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2391" y="532.8047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="169" x="2403" y="539.1514">std::thread gameThread</text><line style="stroke:#181818;stroke-width:0.5;" x1="2384" x2="3058" y1="546.4531" y2="546.4531"/><ellipse cx="2394" cy="560.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="220" x="2403" y="563.4482">Game(ServerManager &amp;sender)</text><ellipse cx="2394" cy="576.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="63" x="2403" y="579.7451">~Game()</text><ellipse cx="2394" cy="592.6953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="150" x="2403" y="596.042">GameState getState()</text><ellipse cx="2394" cy="608.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="202" x="2403" y="612.3389">void addPlayer(Player *player)</text><ellipse cx="2394" cy="625.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="114" x="2403" y="628.6357">void startGame()</text><ellipse cx="2394" cy="641.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="213" x="2403" y="644.9326">void endGameLoop(bool force)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2391" y="654.8828"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="198" x="2403" y="661.2295">void processPlayersActions()</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2391" y="671.1797"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="72" x="2403" y="677.5264">void loop()</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2391" y="687.4766"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="650" x="2403" y="693.8232">void processAction(Player *player, std::shared_ptr&lt;Tetromino&gt; tetromino, TetrisAction action)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2391" y="703.7734"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="269" x="2403" y="710.1201">void trySpawnTetromino(Player *player)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2391" y="720.0703"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="163" x="2403" y="726.417">void checkMusicLimits()</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2391" y="736.3672"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="264" x="2403" y="742.7139">void broadcastBoardIfChanges() const</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2391" y="752.6641"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="266" x="2403" y="759.0107">void broadcastEndGameStatus() const</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2391" y="768.9609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="261" x="2403" y="775.3076">int calculatePoints(int nLines, int level)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2391" y="785.2578"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="231" x="2403" y="791.6045">void checkForPlacedTetrominos()</text></g><!--class ServerManager--><g id="elem_ServerManager"><rect codeLine="856" fill="#F1F1F1" height="325.0469" id="ServerManager" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="564" x="8760" y="859"/><ellipse cx="8985.75" cy="875" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M8988.7188,880.6406 Q8988.1406,880.9375 8987.5,881.0781 Q8986.8594,881.2344 8986.1563,881.2344 Q8983.6563,881.2344 8982.3281,879.5938 Q8981.0156,877.9375 8981.0156,874.8125 Q8981.0156,871.6875 8982.3281,870.0313 Q8983.6563,868.375 8986.1563,868.375 Q8986.8594,868.375 8987.5,868.5313 Q8988.1563,868.6875 8988.7188,868.9844 L8988.7188,871.7031 Q8988.0938,871.125 8987.5,870.8594 Q8986.9063,870.5781 8986.2813,870.5781 Q8984.9375,870.5781 8984.25,871.6563 Q8983.5625,872.7188 8983.5625,874.8125 Q8983.5625,876.9063 8984.25,877.9844 Q8984.9375,879.0469 8986.2813,879.0469 Q8986.9063,879.0469 8987.5,878.7813 Q8988.0938,878.5 8988.7188,877.9219 L8988.7188,880.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="104" x="9006.25" y="879.8467">ServerManager</text><line style="stroke:#181818;stroke-width:0.5;" x1="8761" x2="9323" y1="891" y2="891"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="8768" y="901.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="117" x="8780" y="907.9951">PlayerList players</text><line style="stroke:#181818;stroke-width:0.5;" x1="8761" x2="9323" y1="915.2969" y2="915.2969"/><ellipse cx="8771" cy="928.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="267" x="8780" y="932.292">ServerManager(uint16_t port = 12345)</text><ellipse cx="8771" cy="945.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="126" x="8780" y="948.5889">~ServerManager()</text><ellipse cx="8771" cy="961.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="73" x="8780" y="964.8857">void stop()</text><ellipse cx="8771" cy="977.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="377" x="8780" y="981.1826">void broadcastSound(SoundType soundType) override</text><ellipse cx="8771" cy="994.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="538" x="8780" y="997.4795">void playSoundToPlayer(const Player *player, SoundType soundType) override</text><ellipse cx="8771" cy="1010.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="427" x="8780" y="1013.7764">void broadcastBackgroundSound(SoundType sound) override</text><ellipse cx="8771" cy="1026.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="216" x="8780" y="1030.0732">void broadcast_starting_game()</text><ellipse cx="8771" cy="1043.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="367" x="8780" y="1046.3701">ENetPeer *getEnetPeerByPlayer(const Player *player)</text><ellipse cx="8771" cy="1059.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="402" x="8780" y="1062.667">static Player *getPlayerFromPacket(const Packet &amp;packet)</text><ellipse cx="8771" cy="1075.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="237" x="8780" y="1078.9639">std::vector&lt;Player *&gt; getPlayers()</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="8780" y="1095.2607">&#160;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="8768" y="1105.2109"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="156" x="8780" y="1111.5576">int getNextAvailableid()</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="8768" y="1121.5078"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="175" x="8780" y="1127.8545">void broadcastPlayerList()</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="8768" y="1137.8047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="289" x="8780" y="1144.1514">void createPlayerAndLink(ENetPeer *peer)</text><polygon fill="#FFFF44" points="8771,1152.1016,8775,1156.1016,8771,1160.1016,8767,1156.1016" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="319" x="8780" y="1160.4482">void onPeerConnect(ENetPeer *peer) override</text><polygon fill="#FFFF44" points="8771,1168.3984,8775,1172.3984,8771,1176.3984,8767,1172.3984" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="339" x="8780" y="1176.7451">void onPeerDisconnect(ENetPeer *peer) override</text></g><!--class GamePhysics--><g id="elem_GamePhysics"><rect codeLine="772" fill="#F1F1F1" height="194.6719" id="GamePhysics" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="1902" x="12" y="924"/><ellipse cx="912.25" cy="940" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M915.2188,945.6406 Q914.6406,945.9375 914,946.0781 Q913.3594,946.2344 912.6563,946.2344 Q910.1563,946.2344 908.8281,944.5938 Q907.5156,942.9375 907.5156,939.8125 Q907.5156,936.6875 908.8281,935.0313 Q910.1563,933.375 912.6563,933.375 Q913.3594,933.375 914,933.5313 Q914.6563,933.6875 915.2188,933.9844 L915.2188,936.7031 Q914.5938,936.125 914,935.8594 Q913.4063,935.5781 912.7813,935.5781 Q911.4375,935.5781 910.75,936.6563 Q910.0625,937.7188 910.0625,939.8125 Q910.0625,941.9063 910.75,942.9844 Q911.4375,944.0469 912.7813,944.0469 Q913.4063,944.0469 914,943.7813 Q914.5938,943.5 915.2188,942.9219 L915.2188,945.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="93" x="932.75" y="944.8467">GamePhysics</text><line style="stroke:#181818;stroke-width:0.5;" x1="13" x2="1913" y1="956" y2="956"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="20" y="966.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="94" x="32" y="972.9951">Gravity gravity</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="20" y="982.9453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="155" x="32" y="989.292">SoundSender &amp;sound</text><line style="stroke:#181818;stroke-width:0.5;" x1="13" x2="1913" y1="996.5938" y2="996.5938"/><ellipse cx="23" cy="1010.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="258" x="32" y="1013.5889">GamePhysics(SoundSender &amp;sound)</text><ellipse cx="23" cy="1026.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1280" x="32" y="1029.8857">void applyGravity(std::shared_ptr&lt;BoardController&gt; boardManager, std::shared_ptr&lt;TetrominoController&gt; tetrominoController, std::shared_ptr&lt;TetrominoManager&gt; tetrominoManager)</text><ellipse cx="23" cy="1042.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1643" x="32" y="1046.1826">CollisionType applyHardDrop(std::shared_ptr&lt;Tetromino&gt; tetromino, std::shared_ptr&lt;BoardController&gt; boardManager, std::shared_ptr&lt;TetrominoController&gt; tetrominoController, std::shared_ptr&lt;TetrominoManager&gt; tetrominoManager)</text><ellipse cx="23" cy="1059.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1763" x="32" y="1062.4795">CollisionType applyAction(std::shared_ptr&lt;Tetromino&gt; tetromino, TetrisAction action, std::shared_ptr&lt;BoardController&gt; boardController, std::shared_ptr&lt;TetrominoController&gt; tetrominoController, std::shared_ptr&lt;TetrominoManager&gt; tetrominoManager)</text><ellipse cx="23" cy="1075.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1876" x="32" y="1078.7764">void onTetrominoColide(std::shared_ptr&lt;Tetromino&gt; tetromino, CollisionType col, TetrisAction action, std::shared_ptr&lt;BoardController&gt; boardController, std::shared_ptr&lt;TetrominoController&gt; tetrominoController, std::shared_ptr&lt;TetrominoManager&gt; tetrominoManager)</text><ellipse cx="23" cy="1091.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="204" x="32" y="1095.0732">void increaseGravityDifficulty()</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="20" y="1105.0234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1380" x="32" y="1111.3701">int countNewLockedTetrominos(std::vector&lt;std::shared_ptr&lt;Tetromino&gt;&gt; tetrominos, std::shared_ptr&lt;BoardController&gt; boardController, std::shared_ptr&lt;TetrominoController&gt; tetrominoController)</text></g><!--class TetrominoManager--><g id="elem_TetrominoManager"><rect codeLine="818" fill="#F1F1F1" height="194.6719" id="TetrominoManager" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="1165" x="749.5" y="1317"/><ellipse cx="1262.25" cy="1333" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1265.2188,1338.6406 Q1264.6406,1338.9375 1264,1339.0781 Q1263.3594,1339.2344 1262.6563,1339.2344 Q1260.1563,1339.2344 1258.8281,1337.5938 Q1257.5156,1335.9375 1257.5156,1332.8125 Q1257.5156,1329.6875 1258.8281,1328.0313 Q1260.1563,1326.375 1262.6563,1326.375 Q1263.3594,1326.375 1264,1326.5313 Q1264.6563,1326.6875 1265.2188,1326.9844 L1265.2188,1329.7031 Q1264.5938,1329.125 1264,1328.8594 Q1263.4063,1328.5781 1262.7813,1328.5781 Q1261.4375,1328.5781 1260.75,1329.6563 Q1260.0625,1330.7188 1260.0625,1332.8125 Q1260.0625,1334.9063 1260.75,1335.9844 Q1261.4375,1337.0469 1262.7813,1337.0469 Q1263.4063,1337.0469 1264,1336.7813 Q1264.5938,1336.5 1265.2188,1335.9219 L1265.2188,1338.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="131" x="1282.75" y="1337.8467">TetrominoManager</text><line style="stroke:#181818;stroke-width:0.5;" x1="750.5" x2="1913.5" y1="1349" y2="1349"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="757.5" y="1359.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="552" x="769.5" y="1365.9951">std::unordered_map&lt;Player *, std::shared_ptr&lt;Tetromino&gt;&gt; currentTetromino</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="757.5" y="1375.9453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="532" x="769.5" y="1382.292">std::unordered_map&lt;Player *, std::shared_ptr&lt;Tetromino&gt;&gt; nextTetromino</text><line style="stroke:#181818;stroke-width:0.5;" x1="750.5" x2="1913.5" y1="1389.5938" y2="1389.5938"/><ellipse cx="760.5" cy="1403.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="141" x="769.5" y="1406.5889">TetrominoManager()</text><ellipse cx="760.5" cy="1419.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="153" x="769.5" y="1422.8857">~TetrominoManager()</text><ellipse cx="760.5" cy="1435.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1139" x="769.5" y="1439.1826">bool spawnNextTetromino(Player *player, std::shared_ptr&lt;BoardController&gt; boardManager, std::shared_ptr&lt;TetrominoController&gt; tetrominoController, int maxTries)</text><ellipse cx="760.5" cy="1452.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="497" x="769.5" y="1455.4795">std::shared_ptr&lt;Tetromino&gt; getCurrentTetromino(Player *player) const</text><ellipse cx="760.5" cy="1468.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="476" x="769.5" y="1471.7764">std::shared_ptr&lt;Tetromino&gt; getNextTetromino(Player *player) const</text><ellipse cx="760.5" cy="1484.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="511" x="769.5" y="1488.0732">std::vector&lt;std::shared_ptr&lt;Tetromino&gt;&gt; getCurrentTetrominos() const</text><ellipse cx="760.5" cy="1501.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="529" x="769.5" y="1504.3701">Player *getPlayerByTetromino(std::shared_ptr&lt;Tetromino&gt; tetromino) const</text></g><!--class Player--><g id="elem_Player"><rect codeLine="836" fill="#F1F1F1" height="243.5625" id="Player" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="357" x="2282.5" y="1865"/><ellipse cx="2436.25" cy="1881" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2439.2188,1886.6406 Q2438.6406,1886.9375 2438,1887.0781 Q2437.3594,1887.2344 2436.6563,1887.2344 Q2434.1563,1887.2344 2432.8281,1885.5938 Q2431.5156,1883.9375 2431.5156,1880.8125 Q2431.5156,1877.6875 2432.8281,1876.0313 Q2434.1563,1874.375 2436.6563,1874.375 Q2437.3594,1874.375 2438,1874.5313 Q2438.6563,1874.6875 2439.2188,1874.9844 L2439.2188,1877.7031 Q2438.5938,1877.125 2438,1876.8594 Q2437.4063,1876.5781 2436.7813,1876.5781 Q2435.4375,1876.5781 2434.75,1877.6563 Q2434.0625,1878.7188 2434.0625,1880.8125 Q2434.0625,1882.9063 2434.75,1883.9844 Q2435.4375,1885.0469 2436.7813,1885.0469 Q2437.4063,1885.0469 2438,1884.7813 Q2438.5938,1884.5 2439.2188,1883.9219 L2439.2188,1886.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="41" x="2456.75" y="1885.8467">Player</text><line style="stroke:#181818;stroke-width:0.5;" x1="2283.5" x2="2638.5" y1="1897" y2="1897"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2290.5" y="1907.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="286" x="2302.5" y="1913.9951">ThreadSafeQueue&lt;TetrisAction&gt; actions</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2290.5" y="1923.9453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="2302.5" y="1930.292">PlayerData data</text><line style="stroke:#181818;stroke-width:0.5;" x1="2283.5" x2="2638.5" y1="1937.5938" y2="1937.5938"/><ellipse cx="2293.5" cy="1951.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="261" x="2302.5" y="1954.5889">Player(int id, const std::string &amp;name)</text><ellipse cx="2293.5" cy="1967.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="63" x="2302.5" y="1970.8857">~Player()</text><ellipse cx="2293.5" cy="1983.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="228" x="2302.5" y="1987.1826">const PlayerData getData() const</text><ellipse cx="2293.5" cy="2000.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="182" x="2302.5" y="2003.4795">void addScore(int amount)</text><ellipse cx="2293.5" cy="2016.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="303" x="2302.5" y="2019.7764">void setName(const std::string &amp;newName)</text><ellipse cx="2293.5" cy="2032.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="119" x="2302.5" y="2036.0732">void disconnect()</text><ellipse cx="2293.5" cy="2049.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="175" x="2302.5" y="2052.3701">bool isConnected() const</text><ellipse cx="2293.5" cy="2065.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="66" x="2302.5" y="2068.667">int getid()</text><ellipse cx="2293.5" cy="2081.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="331" x="2302.5" y="2084.9639">void enqueueAction(const TetrisAction &amp;action)</text><ellipse cx="2293.5" cy="2097.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="254" x="2302.5" y="2101.2607">bool popAction(TetrisAction &amp;action)</text></g><!--class GameManager--><g id="elem_GameManager"><rect codeLine="739" fill="#F1F1F1" height="194.6719" id="GameManager" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="302" x="8723" y="7"/><ellipse cx="8819.25" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M8822.2188,28.6406 Q8821.6406,28.9375 8821,29.0781 Q8820.3594,29.2344 8819.6563,29.2344 Q8817.1563,29.2344 8815.8281,27.5938 Q8814.5156,25.9375 8814.5156,22.8125 Q8814.5156,19.6875 8815.8281,18.0313 Q8817.1563,16.375 8819.6563,16.375 Q8820.3594,16.375 8821,16.5313 Q8821.6563,16.6875 8822.2188,16.9844 L8822.2188,19.7031 Q8821.5938,19.125 8821,18.8594 Q8820.4063,18.5781 8819.7813,18.5781 Q8818.4375,18.5781 8817.75,19.6563 Q8817.0625,20.7188 8817.0625,22.8125 Q8817.0625,24.9063 8817.75,25.9844 Q8818.4375,27.0469 8819.7813,27.0469 Q8820.4063,27.0469 8821,26.7813 Q8821.5938,26.5 8822.2188,25.9219 L8822.2188,28.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="8839.75" y="27.8467">GameManager</text><line style="stroke:#181818;stroke-width:0.5;" x1="8724" x2="9024" y1="39" y2="39"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="8731" y="49.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="103" x="8743" y="55.9951">Logger *logger</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="8731" y="65.9453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="163" x="8743" y="72.292">ServerManager &amp;server</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="8731" y="82.2422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="91" x="8743" y="88.5889">Game *game</text><line style="stroke:#181818;stroke-width:0.5;" x1="8724" x2="9024" y1="95.8906" y2="95.8906"/><ellipse cx="8734" cy="109.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="274" x="8743" y="112.8857">GameManager(ServerManager &amp;server)</text><ellipse cx="8734" cy="125.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="123" x="8743" y="129.1826">~GameManager()</text><ellipse cx="8734" cy="142.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="276" x="8743" y="145.4795">void StartGameListener(const Packet &amp;)</text><ellipse cx="8734" cy="158.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="87" x="8743" y="161.7764">void restart()</text><ellipse cx="8734" cy="174.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="110" x="8743" y="178.0732">void endGame()</text><ellipse cx="8734" cy="191.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="73" x="8743" y="194.3701">void start()</text></g><!--class Gravity--><g id="elem_Gravity"><rect codeLine="757" fill="#F1F1F1" height="227.2656" id="Gravity" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="412" x="161" y="1301"/><ellipse cx="339.75" cy="1317" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M342.7188,1322.6406 Q342.1406,1322.9375 341.5,1323.0781 Q340.8594,1323.2344 340.1563,1323.2344 Q337.6563,1323.2344 336.3281,1321.5938 Q335.0156,1319.9375 335.0156,1316.8125 Q335.0156,1313.6875 336.3281,1312.0313 Q337.6563,1310.375 340.1563,1310.375 Q340.8594,1310.375 341.5,1310.5313 Q342.1563,1310.6875 342.7188,1310.9844 L342.7188,1313.7031 Q342.0938,1313.125 341.5,1312.8594 Q340.9063,1312.5781 340.2813,1312.5781 Q338.9375,1312.5781 338.25,1313.6563 Q337.5625,1314.7188 337.5625,1316.8125 Q337.5625,1318.9063 338.25,1319.9844 Q338.9375,1321.0469 340.2813,1321.0469 Q340.9063,1321.0469 341.5,1320.7813 Q342.0938,1320.5 342.7188,1319.9219 L342.7188,1322.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="46" x="360.25" y="1321.8467">Gravity</text><line style="stroke:#181818;stroke-width:0.5;" x1="162" x2="572" y1="1333" y2="1333"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="169" y="1343.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="267" x="181" y="1349.9951">static constexpr int kMinGravityTimeMs</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="169" y="1359.9453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="277" x="181" y="1366.292">static constexpr int kInitialGravityTimeMs</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="169" y="1376.2422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="263" x="181" y="1382.5889">static constexpr double kDifficultyRate</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="169" y="1392.5391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="119" x="181" y="1398.8857">int gravityTimeMs</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="169" y="1408.8359"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="52" x="181" y="1415.1826">int level</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="169" y="1425.1328"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="386" x="181" y="1431.4795">std::chrono::steady_clock::time_point lastGravityUpdate</text><line style="stroke:#181818;stroke-width:0.5;" x1="162" x2="572" y1="1438.7813" y2="1438.7813"/><ellipse cx="172" cy="1452.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="56" x="181" y="1455.7764">Gravity()</text><ellipse cx="172" cy="1468.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="197" x="181" y="1472.0732">int getGravityTimeMs() const</text><ellipse cx="172" cy="1485.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="204" x="181" y="1488.3701">void increaseGravityDifficulty()</text><ellipse cx="172" cy="1501.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="171" x="181" y="1504.667">void updateGravityTime()</text><ellipse cx="172" cy="1517.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="219" x="181" y="1520.9639">bool hasGravityIntervalElapsed()</text></g><!--class SoundSender--><g id="elem_SoundSender"><rect codeLine="883" fill="#F1F1F1" height="96.8906" id="SoundSender" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="470" x="2162" y="1366"/><ellipse cx="2345.25" cy="1382" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2341.1719,1377.7656 L2341.1719,1375.6094 L2348.5625,1375.6094 L2348.5625,1377.7656 L2346.0938,1377.7656 L2346.0938,1385.8438 L2348.5625,1385.8438 L2348.5625,1388 L2341.1719,1388 L2341.1719,1385.8438 L2343.6406,1385.8438 L2343.6406,1377.7656 L2341.1719,1377.7656 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="95" x="2365.75" y="1386.8467">SoundSender</text><line style="stroke:#181818;stroke-width:0.5;" x1="2163" x2="2631" y1="1398" y2="1398"/><line style="stroke:#181818;stroke-width:0.5;" x1="2163" x2="2631" y1="1406" y2="1406"/><ellipse cx="2173" cy="1419.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="444" x="2182" y="1422.9951">void playSoundToPlayer(const Player *player, SoundType sound)</text><ellipse cx="2173" cy="1435.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="283" x="2182" y="1439.292">void broadcastSound(SoundType sound)</text><ellipse cx="2173" cy="1452.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="367" x="2182" y="1455.5889">void broadcastBackgroundSound(SoundType sound)</text></g><!--class TetrominoFactory--><g id="elem_TetrominoFactory"><rect codeLine="808" fill="#F1F1F1" height="96.8906" id="TetrominoFactory" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="566" x="7" y="2706.5"/><ellipse cx="225.25" cy="2722.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M228.2188,2728.1406 Q227.6406,2728.4375 227,2728.5781 Q226.3594,2728.7344 225.6563,2728.7344 Q223.1563,2728.7344 221.8281,2727.0938 Q220.5156,2725.4375 220.5156,2722.3125 Q220.5156,2719.1875 221.8281,2717.5313 Q223.1563,2715.875 225.6563,2715.875 Q226.3594,2715.875 227,2716.0313 Q227.6563,2716.1875 228.2188,2716.4844 L228.2188,2719.2031 Q227.5938,2718.625 227,2718.3594 Q226.4063,2718.0781 225.7813,2718.0781 Q224.4375,2718.0781 223.75,2719.1563 Q223.0625,2720.2188 223.0625,2722.3125 Q223.0625,2724.4063 223.75,2725.4844 Q224.4375,2726.5469 225.7813,2726.5469 Q226.4063,2726.5469 227,2726.2813 Q227.5938,2726 228.2188,2725.4219 L228.2188,2728.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="121" x="245.75" y="2727.3467">TetrominoFactory</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="572" y1="2738.5" y2="2738.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="2749.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="540" x="27" y="2755.4951">static const std::unordered_map&lt;char, TetrominoCreator&gt; tetrominoCreators</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="2765.4453"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="326" x="27" y="2771.792">static const std::vector&lt;char&gt; tetrominoTypes</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="572" y1="2779.0938" y2="2779.0938"/><ellipse cx="18" cy="2792.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="330" x="27" y="2796.0889">std::unique_ptr&lt;Tetromino&gt; createTetromino()</text></g><!--link BoardRenderer to Resizeable--><g id="link_BoardRenderer_Resizeable"><path codeLine="20" d="M3535.96,1536.55 C3564.41,1569.3 3591.79,1606.43 3611,1645 C3793.21,2010.76 3827.1863,2496.2826 3833.7763,2672.2426 " fill="none" id="BoardRenderer-to-Resizeable" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="3834.45,2690.23,3839.7721,2672.0181,3827.7805,2672.4672,3834.45,2690.23" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link BoardRenderer to ClientManager--><g id="link_BoardRenderer_ClientManager"><path codeLine="21" d="M3749.0939,1540.7981 C4011.3339,1637.1381 4365.32,1767.18 4628.31,1863.79 " fill="none" id="BoardRenderer-backto-ClientManager" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="3737.83,1536.66,3742.0826,1542.4837,3749.0939,1540.7981,3744.8413,1534.9744,3737.83,1536.66" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link BoardRenderer to TetrisBoard--><g id="link_BoardRenderer_TetrisBoard"><path codeLine="22" d="M3042.5086,1542.9808 C2996.6786,1572.0708 2965.1,1601.34 2934,1645 C2756.41,1894.35 3061.38,2104.75 2853,2329 C2757.47,2431.8 2660.04,2311.57 2543,2389 C2465.41,2440.33 2405.98,2525.4 2364.98,2600.5 " fill="none" id="BoardRenderer-backto-TetrisBoard" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="3052.64,1536.55,3045.4307,1536.3883,3042.5086,1542.9808,3049.7179,1543.1425,3052.64,1536.55" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link BoardRenderer to CellRenderer--><g id="link_BoardRenderer_CellRenderer"><path codeLine="23" d="M3507.7622,1546.7633 C3528.4922,1580.1333 3541.17,1607.37 3552,1645 C3636.06,1937.15 3642.59,2038.81 3552,2329 C3526.33,2411.22 3478.57,2491.54 3428.9,2559.82 " fill="none" id="BoardRenderer-backto-CellRenderer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="3501.43,1536.57,3501.1984,1543.7774,3507.7622,1546.7633,3507.9939,1539.5559,3501.43,1536.57" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link CellRenderer to Cell--><g id="link_CellRenderer_Cell"><path codeLine="52" d="M3044.963,2958.3338 C2985.313,3014.0838 2928.4,3066.37 2867,3121 C2809.45,3172.2 2745.41,3227.07 2688.11,3275.44 " fill="none" id="CellRenderer-backto-Cell" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="3053.73,2950.14,3046.6152,2951.3146,3044.963,2958.3338,3052.0778,2957.1593,3053.73,2950.14" style="stroke:#181818;stroke-width:1.0;"/></g><!--link GameStatusRenderer to Resizeable--><g id="link_GameStatusRenderer_Resizeable"><path codeLine="66" d="M4150.55,1512.03 C4085.02,1770.77 3911.1393,2457.3009 3856.5293,2672.9209 " fill="none" id="GameStatusRenderer-to-Resizeable" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="3852.11,2690.37,3862.3457,2674.394,3850.713,2671.4478,3852.11,2690.37" style="stroke:#181818;stroke-width:1.0;"/></g><!--link GameStatusRenderer to GameStatus--><g id="link_GameStatusRenderer_GameStatus"><path codeLine="67" d="M4180.48,1512.03 C4193.4,1739.49 4225.5098,2305.0897 4241.4898,2586.4397 " fill="none" id="GameStatusRenderer-to-GameStatus" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="4241.83,2592.43,4245.3132,2583.2177,4241.5465,2587.438,4237.3261,2583.6713,4241.83,2592.43" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link GameStatusRenderer to Button--><g id="link_GameStatusRenderer_Button"><path codeLine="68" d="M4462.1876,1510.6893 C4557.0876,1539.3493 4653.13,1565.15 4753,1585 C4997.64,1633.62 5070.39,1579.27 5311,1645 C5541.68,1708.02 5790.98,1833.93 5936.45,1913.86 " fill="none" id="GameStatusRenderer-backto-Button" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="4450.7,1507.22,4455.2874,1512.7838,4462.1876,1510.6893,4457.6002,1505.1254,4450.7,1507.22" style="stroke:#181818;stroke-width:1.0;"/></g><!--link MiniBoardRenderer to Resizeable--><g id="link_MiniBoardRenderer_Resizeable"><path codeLine="86" d="M3380.91,2109.06 C3462.02,2184.55 3563.2,2286.55 3639,2389 C3711.49,2486.97 3766.8112,2598.5445 3801.0112,2674.0245 " fill="none" id="MiniBoardRenderer-to-Resizeable" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="3808.44,2690.42,3806.4764,2671.5482,3795.546,2676.5008,3808.44,2690.42" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link MiniBoardRenderer to CellRenderer--><g id="link_MiniBoardRenderer_CellRenderer"><path codeLine="87" d="M3245.6151,2121.3677 C3247.9851,2242.3377 3251.42,2418.01 3254.2,2559.72 " fill="none" id="MiniBoardRenderer-backto-CellRenderer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="3245.38,2109.37,3241.4983,2115.4472,3245.6151,2121.3677,3249.4968,2115.2905,3245.38,2109.37" style="stroke:#181818;stroke-width:1.0;"/></g><!--link MiniBoardRenderer to Tetromino--><g id="link_MiniBoardRenderer_Tetromino"><path codeLine="88" d="M3125.2,2109.15 C3023.95,2214.54 2891.92,2355.5 2877,2389 C2810.51,2538.32 2918.94,3003.81 2805,3121 C2731.14,3196.97 2436.5,3163.5 2332,3181 C2055.4,3227.33 1749.2756,3292.2415 1523.9656,3342.5915 " fill="none" id="MiniBoardRenderer-to-Tetromino" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="1518.11,3343.9,1527.7657,3345.8409,1522.9896,3342.8095,1526.021,3338.0335,1518.11,3343.9" style="stroke:#181818;stroke-width:1.0;"/></g><!--link BoardScreen to Screen--><g id="link_BoardScreen_Screen"><path codeLine="106" d="M3742.71,1143.58 C3782.45,1160.17 3824.19,1174.68 3865,1184 C3986.93,1211.84 8279.16,1154.98 8367,1244 C8420.22,1297.94 8418.43,1529.35 8367,1585 C8252.02,1709.42 7767.44,1590.59 7607,1645 C7489.51,1684.85 7386.9547,1746.3085 7293.1347,1813.8985 " fill="none" id="BoardScreen-to-Screen" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="7278.53,1824.42,7296.6419,1818.7667,7289.6275,1809.0302,7278.53,1824.42" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link BoardScreen to ClientManager--><g id="link_BoardScreen_ClientManager"><path codeLine="107" d="M3761.6148,1148.2643 C3799.1148,1164.0043 3827.03,1173.6 3865,1184 C3994.88,1219.58 4352.88,1174.14 4468,1244 C4622.81,1337.94 4590.87,1434.11 4691,1585 C4703.99,1604.58 4717.38,1624.68 4730.9,1644.94 " fill="none" id="BoardScreen-backto-ClientManager" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="3750.55,1143.62,3754.5343,1149.6304,3761.6148,1148.2643,3757.6305,1142.2539,3750.55,1143.62" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link BoardScreen to TetrisBoard--><g id="link_BoardScreen_TetrisBoard"><path codeLine="108" d="M3176.7709,1065.5933 C3061.5609,1096.5433 2953.99,1148 2879,1244 C2729.98,1434.77 2939.24,2144.95 2782,2329 C2710.86,2412.27 2632.65,2326.09 2543,2389 C2467.47,2442 2408.46,2526.21 2367.19,2600.39 " fill="none" id="BoardScreen-backto-TetrisBoard" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="3188.36,1062.48,3181.5277,1060.1736,3176.7709,1065.5933,3183.6032,1067.8997,3188.36,1062.48" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link BoardScreen to MiniBoardRenderer--><g id="link_BoardScreen_MiniBoardRenderer"><path codeLine="109" d="M3177.0587,1077.1331 C3078.8887,1109.3631 2993.21,1158.22 2934,1244 C2796.97,1442.53 2985.92,1711.3 3123.07,1864.91 " fill="none" id="BoardScreen-backto-MiniBoardRenderer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="3188.46,1073.39,3181.5117,1071.4611,3177.0587,1077.1331,3184.0071,1079.062,3188.46,1073.39" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link BoardScreen to BoardRenderer--><g id="link_BoardScreen_BoardRenderer"><path codeLine="110" d="M3480.7008,1155.0917 C3467.3908,1202.4117 3455.4,1245.03 3442.08,1292.36 " fill="none" id="BoardScreen-backto-BoardRenderer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="3483.95,1143.54,3478.4748,1148.2328,3480.7008,1155.0917,3486.176,1150.3989,3483.95,1143.54" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link BoardScreen to GameStatusRenderer--><g id="link_BoardScreen_GameStatusRenderer"><path codeLine="111" d="M3731.6922,1149.6767 C3825.3422,1205.4067 3924.63,1264.5 4012.64,1316.87 " fill="none" id="BoardScreen-backto-GameStatusRenderer" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="3721.38,1143.54,3724.4905,1150.0457,3731.6922,1149.6767,3728.5817,1143.1709,3721.38,1143.54" style="stroke:#181818;stroke-width:1.0;"/></g><!--link BoardScreen to ScreenManager--><g id="link_BoardScreen_ScreenManager"><path codeLine="112" d="M3748.96,1143.64 C3786.91,1159.54 3826.45,1173.82 3865,1184 C4024.73,1226.18 4471.76,1147.7 4606,1244 C4740.1,1340.2 4620.18,1487.04 4753,1585 C4853.37,1659.02 5223.81,1555.83 5311,1645 C5417.64,1754.07 5259.91,2222.37 5369,2329 C5446.22,2404.48 6236.33,2355.56 6339,2389 C6469.21,2431.41 6594.2422,2507.0762 6697.2622,2580.8662 " fill="none" id="BoardScreen-to-ScreenManager" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="6702.14,2584.36,6697.1525,2575.8674,6698.0751,2581.4485,6692.494,2582.3711,6702.14,2584.36" style="stroke:#181818;stroke-width:1.0;"/></g><!--link EndGameScreen to Screen--><g id="link_EndGameScreen_Screen"><path codeLine="136" d="M5697.72,1581.17 C5703.5,1582.49 5709.26,1583.77 5715,1585 C6029.86,1652.39 6127.99,1554.49 6437,1645 C6574.95,1685.41 6701.7497,1748.0714 6817.4297,1815.3414 " fill="none" id="EndGameScreen-to-Screen" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6832.99,1824.39,6820.4459,1810.1546,6814.4135,1820.5282,6832.99,1824.39" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link EndGameScreen to ScreenManager--><g id="link_EndGameScreen_ScreenManager"><path codeLine="137" d="M5345.6039,1595.4043 C5357.2039,1615.4343 5362.57,1625.35 5373,1645 C5529.94,1940.61 5413.69,2137.25 5688,2329 C5823.22,2423.52 6273.83,2330.26 6428,2389 C6541.69,2432.31 6651.31,2511.08 6737.3,2584.38 " fill="none" id="EndGameScreen-backto-ScreenManager" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="5339.59,1585.02,5339.1355,1592.2168,5345.6039,1595.4043,5346.0584,1588.2075,5339.59,1585.02" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link EndGameScreen to ClientManager--><g id="link_EndGameScreen_ClientManager"><path codeLine="138" d="M5147.6535,1595.9461 C5138.4635,1615.1661 5134.04,1624.4 5124.25,1644.85 " fill="none" id="EndGameScreen-backto-ClientManager" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="5152.83,1585.12,5146.6331,1588.8076,5147.6535,1595.9461,5153.8505,1592.2585,5152.83,1585.12" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link EndGameScreen to EndGameData--><g id="link_EndGameScreen_EndGameData"><path codeLine="139" d="M4759.7133,1523.0975 C4698.3033,1554.7475 4652.9,1590.7 4611,1645 C4208.36,2166.79 4685.46,2498.84 4468,3121 C4379.25,3374.93 4182.2,3628.67 4076.04,3753.79 " fill="none" id="EndGameScreen-backto-EndGameData" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="4770.38,1517.6,4763.2142,1516.7932,4759.7133,1523.0975,4766.8792,1523.9043,4770.38,1517.6" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link EndGameScreen to Button--><g id="link_EndGameScreen_Button"><path codeLine="140" d="M5490.0713,1591.9288 C5649.1713,1701.5588 5838.19,1831.79 5957.4,1913.93 " fill="none" id="EndGameScreen-backto-Button" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="5480.19,1585.12,5482.861,1591.8182,5490.0713,1591.9288,5487.4003,1585.2307,5480.19,1585.12" style="stroke:#181818;stroke-width:1.0;"/></g><!--link GameScreen to Screen--><g id="link_GameScreen_Screen"><path codeLine="152" d="M8604.88,1487.7 C8553.17,1520.61 8489.07,1558.13 8428,1585 C8075.69,1740.01 7663.6072,1852.0669 7385.7472,1918.4569 " fill="none" id="GameScreen-to-Screen" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="7368.24,1922.64,7387.1416,1924.2927,7384.3528,1912.6212,7368.24,1922.64" style="stroke:#181818;stroke-width:1.0;"/></g><!--link GameScreen to ScreenManager--><g id="link_GameScreen_ScreenManager"><path codeLine="153" d="M8632.89,1487.75 C8457.71,1648.16 8017.24,2042.46 7615,2329 C7478.52,2426.23 7324.378,2520.6259 7191.858,2597.6159 " fill="none" id="GameScreen-to-ScreenManager" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="7186.67,2600.63,7196.4614,2599.5676,7190.9933,2598.1183,7192.4426,2592.6502,7186.67,2600.63" style="stroke:#181818;stroke-width:1.0;"/></g><!--link LobbyScreen to Screen--><g id="link_LobbyScreen_Screen"><path codeLine="172" d="M6290.69,1536.5 C6329.52,1554.34 6369.93,1571.3 6409,1585 C6524.18,1625.4 6567.66,1590.74 6677,1645 C6767.85,1690.08 6842.2891,1747.5974 6912.6191,1812.2574 " fill="none" id="LobbyScreen-to-Screen" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6925.87,1824.44,6916.68,1807.8405,6908.5583,1816.6744,6925.87,1824.44" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link LobbyScreen to Button--><g id="link_LobbyScreen_Button"><path codeLine="173" d="M6062,1548.84 C6062,1663.34 6062,1819.19 6062,1913.95 " fill="none" id="LobbyScreen-backto-Button" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6062,1536.84,6058,1542.84,6062,1548.84,6066,1542.84,6062,1536.84" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link LobbyScreen to ClientManager--><g id="link_LobbyScreen_ClientManager"><path codeLine="174" d="M5817.5156,1542.1812 C5662.0556,1622.7412 5466.2,1724.23 5293.7,1813.61 " fill="none" id="LobbyScreen-backto-ClientManager" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="5828.17,1536.66,5821.0024,1535.8691,5817.5156,1542.1812,5824.6832,1542.9721,5828.17,1536.66" style="stroke:#181818;stroke-width:1.0;"/></g><!--link LobbyScreen to ScreenManager--><g id="link_LobbyScreen_ScreenManager"><path codeLine="175" d="M6310.39,1536.6 C6356.69,1567.25 6401.58,1603.48 6437,1645 C6650.42,1895.15 6588.63,2027.13 6719,2329 C6755.52,2413.55 6795.0018,2501.4103 6830.3718,2579.0203 " fill="none" id="LobbyScreen-to-ScreenManager" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="6832.86,2584.48,6832.7675,2574.6316,6830.7865,2579.9302,6825.4878,2577.9492,6832.86,2584.48" style="stroke:#181818;stroke-width:1.0;"/></g><!--link MenuScreen to Screen--><g id="link_MenuScreen_Screen"><path codeLine="193" d="M7715.19,1536.64 C7663.12,1571.26 7606.61,1609.28 7555,1645 C7471.74,1702.61 7395.8906,1756.6289 7316.5506,1813.9489 " fill="none" id="MenuScreen-to-Screen" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="7301.96,1824.49,7320.0643,1818.8124,7313.0369,1809.0854,7301.96,1824.49" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link MenuScreen to Button--><g id="link_MenuScreen_Button"><path codeLine="194" d="M7590.5667,1540.3668 C7535.1467,1559.1768 7488.56,1572.59 7433,1585 C7147.26,1648.8 7059.31,1567.44 6777,1645 C6554.71,1706.07 6316.97,1833.37 6179.32,1913.98 " fill="none" id="MenuScreen-backto-Button" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="7601.93,1536.51,7594.9627,1534.6506,7590.5667,1540.3668,7597.5339,1542.2262,7601.93,1536.51" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link MenuScreen to ClientManager--><g id="link_MenuScreen_ClientManager"><path codeLine="195" d="M7598.6552,1540.4426 C7540.9252,1560.0126 7491.43,1573.69 7433,1585 C7052.07,1658.76 6065.21,1554.1 5688,1645 C5553.49,1677.42 5414,1735.95 5293.61,1795.48 " fill="none" id="MenuScreen-backto-ClientManager" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="7610.02,1536.59,7603.0534,1534.728,7598.6552,1540.4426,7605.6218,1542.3045,7610.02,1536.59" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link MenuScreen to ScreenManager--><g id="link_MenuScreen_ScreenManager"><path codeLine="196" d="M7842.5324,1547.6971 C7760.0524,1730.3971 7592.98,2071.32 7386,2329 C7311.59,2421.63 7216.04,2511.33 7130.17,2584.25 " fill="none" id="MenuScreen-backto-ScreenManager" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="7847.47,1536.76,7841.3555,1540.5827,7842.5324,1547.6971,7848.6469,1543.8744,7847.47,1536.76" style="stroke:#181818;stroke-width:1.0;"/></g><!--link WaitingConnectionScreen to Screen--><g id="link_WaitingConnectionScreen_Screen"><path codeLine="214" d="M6952.61,1528.21 C6976.34,1612.8 7004.2888,1712.4888 7030.8088,1807.0388 " fill="none" id="WaitingConnectionScreen-to-Screen" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="7035.67,1824.37,7036.5859,1805.4185,7025.0318,1808.6592,7035.67,1824.37" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link WaitingConnectionScreen to Button--><g id="link_WaitingConnectionScreen_Button"><path codeLine="215" d="M6741.5537,1534.6789 C6569.1037,1649.2089 6316.96,1816.67 6170.58,1913.89 " fill="none" id="WaitingConnectionScreen-backto-Button" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6751.55,1528.04,6744.3389,1528.0273,6741.5537,1534.6789,6748.7648,1534.6915,6751.55,1528.04" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link WaitingConnectionScreen to ScreenManager--><g id="link_WaitingConnectionScreen_ScreenManager"><path codeLine="216" d="M6826.3557,1538.3372 C6803.6157,1573.7472 6788.74,1604.2 6777,1645 C6692.94,1937.15 6730.76,2028.54 6777,2329 C6790.25,2415.12 6817.78,2507.72 6844.46,2584.43 " fill="none" id="WaitingConnectionScreen-backto-ScreenManager" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6832.84,1528.24,6826.2321,1531.1272,6826.3557,1538.3372,6832.9636,1535.45,6832.84,1528.24" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link WaitingConnectionScreen to ClientManager--><g id="link_WaitingConnectionScreen_ClientManager"><path codeLine="217" d="M6609.2243,1531.7178 C6540.5043,1553.7778 6478.61,1570.79 6409,1585 C6093.94,1649.31 5998.68,1562.09 5688,1645 C5553.98,1680.77 5414.31,1740.25 5293.64,1799.6 " fill="none" id="WaitingConnectionScreen-backto-ClientManager" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6620.65,1528.05,6613.7145,1526.0753,6609.2243,1531.7178,6616.1597,1533.6925,6620.65,1528.05" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link AudioManager to Logger--><g id="link_AudioManager_Logger"><path codeLine="234" d="M5757,2880.71 C5757,3023.56 5757,3252.2 5757,3360.38 " fill="none" id="AudioManager-backto-Logger" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="5757,2868.71,5753,2874.71,5757,2880.71,5761,2874.71,5757,2868.71" style="stroke:#181818;stroke-width:1.0;"/></g><!--link Background to TextureLoader--><g id="link_Background_TextureLoader"><path codeLine="246" d="M8797.63,2828.2 C8801.63,2938.33 8809.1016,3143.894 8814.0916,3280.894 " fill="none" id="Background-to-TextureLoader" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="8814.31,3286.89,8817.9798,3277.7504,8814.128,3281.8933,8809.9851,3278.0416,8814.31,3286.89" style="stroke:#181818;stroke-width:1.0;"/></g><!--link ClientManager to NetworkManager--><g id="link_ClientManager_NetworkManager"><path codeLine="301" d="M5293.71,2178.13 C5414.1,2237.62 5553.57,2296.24 5688,2329 C6343.13,2488.68 6544.55,2248.23 7204,2389 C7422.39,2435.62 7639.5961,2522.6283 7815.5461,2603.8183 " fill="none" id="ClientManager-to-NetworkManager" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="7831.89,2611.36,7818.06,2598.3703,7813.0322,2609.2663,7831.89,2611.36" style="stroke:#181818;stroke-width:1.0;"/></g><!--link ClientManager to GameStatus--><g id="link_ClientManager_GameStatus"><path codeLine="302" d="M4628.47,2305.12 C4601.19,2333.1 4574.37,2361.31 4549,2389 C4490,2453.38 4432.1437,2522.8592 4380.3537,2587.4392 " fill="none" id="ClientManager-to-GameStatus" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="4376.6,2592.12,4385.3511,2587.6014,4379.7281,2588.2194,4379.1101,2582.5964,4376.6,2592.12" style="stroke:#181818;stroke-width:1.0;"/></g><!--link ClientManager to PlayerData--><g id="link_ClientManager_PlayerData"><path codeLine="303" d="M4814.38,2329.11 C4705.21,2614.14 4575,3034.15 4575,3416 C4575,3416 4575,3416 4575,3836 C4575,4035.15 4348.5529,4145.2353 4180.5629,4200.1653 " fill="none" id="ClientManager-to-PlayerData" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="4174.86,4202.03,4184.6575,4203.0348,4179.6124,4200.476,4182.1711,4195.431,4174.86,4202.03" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link ClientManager to PlayerList--><g id="link_ClientManager_PlayerList"><path codeLine="304" d="M4940.732,2340.9903 C4915.962,2772.3303 4875.43,3478.13 4860.56,3737.1 " fill="none" id="ClientManager-backto-PlayerList" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="4941.42,2329.01,4937.0826,2334.7708,4940.732,2340.9903,4945.0694,2335.2295,4941.42,2329.01" style="stroke:#181818;stroke-width:1.0;"/></g><!--link ClientManager to ThreadSafeQueue--><g id="link_ClientManager_ThreadSafeQueue"><path codeLine="305" d="M4628.29,2083.36 C4344.58,2161.09 3924.67,2267.69 3552,2329 C3403.41,2353.45 3003.3,2306.98 2877,2389 C2779.4,2452.38 2726.2116,2574.0432 2698.7416,2660.2532 " fill="none" id="ClientManager-to-ThreadSafeQueue" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="2696.92,2665.97,2703.4636,2658.6092,2698.438,2661.206,2695.8412,2656.1804,2696.92,2665.97" style="stroke:#181818;stroke-width:1.0;"/></g><!--link ClientManager to Packet--><g id="link_ClientManager_Packet"><path codeLine="306" d="M5293.6,2315.58 C5302.64,2320.36 5311.78,2324.85 5321,2329 C5600.52,2454.73 5736.36,2247.04 6008,2389 C6383.32,2585.15 6253.75,2904.97 6618,3121 C6818.71,3240.04 7446.2777,3334.1951 7821.7777,3381.8151 " fill="none" id="ClientManager-to-Packet" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="7827.73,3382.57,7819.3048,3377.4695,7822.7697,3381.941,7818.2983,3385.4059,7827.73,3382.57" style="stroke:#181818;stroke-width:1.0;"/></g><!--link Screen to Resizeable--><g id="link_Screen_Resizeable"><path codeLine="337" d="M6840.48,2149.52 C6723.88,2218.66 6578.67,2291.93 6437,2329 C6307.76,2362.82 4146.87,2319.12 4033,2389 C3924.37,2455.66 3876.2821,2587.2021 3854.1721,2672.7921 " fill="none" id="Screen-to-Resizeable" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="3849.67,2690.22,3859.9814,2674.2928,3848.3628,2671.2914,3849.67,2690.22" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Screen to Background--><g id="link_Screen_Background"><path codeLine="338" d="M7379.8076,2035.728 C7661.4376,2089.438 8083.98,2194.82 8416,2389 C8548.48,2466.48 8670.3,2599.46 8738.4,2681.73 " fill="none" id="Screen-backto-Background" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="7368.02,2033.48,7373.1644,2038.5332,7379.8076,2035.728,7374.6631,2030.6748,7368.02,2033.48" style="stroke:#181818;stroke-width:1.0;"/></g><!--link Screen to ScreenManager--><g id="link_Screen_ScreenManager"><path codeLine="339" d="M7034.53,2149.51 C7003.43,2277.13 6965.1448,2448.8581 6939.0248,2578.5281 " fill="none" id="Screen-to-ScreenManager" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="6937.84,2584.41,6943.5384,2576.3771,6938.8273,2579.5085,6935.696,2574.7973,6937.84,2584.41" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link ScreenManager to Screen--><g id="link_ScreenManager_Screen"><path codeLine="364" d="M6962.9103,2572.751 C6994.5003,2443.081 7031.02,2277.13 7056.41,2149.51 " fill="none" id="ScreenManager-backto-Screen" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="6960.07,2584.41,6965.3765,2579.5273,6962.9103,2572.751,6957.6038,2577.6337,6960.07,2584.41" style="stroke:#181818;stroke-width:1.0;"/></g><!--link Cell to ISerializable--><g id="link_Cell_ISerializable"><path codeLine="418" d="M2519,3587.86 C2519,3731.52 2519,3909.8 2519,3998.96 " fill="none" id="Cell-to-ISerializable" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="2519,4016.96,2525,3998.96,2513,3998.96,2519,4016.96" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Cell to Coordinate--><g id="link_Cell_Coordinate"><path codeLine="419" d="M2338.3088,3458.8376 C2127.6488,3508.3876 1769.76,3599.44 1464,3713 C1434.9,3723.81 1404.56,3736.59 1375.34,3749.72 " fill="none" id="Cell-backto-Coordinate" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="2349.99,3456.09,2343.2335,3453.57,2338.3088,3458.8376,2345.0653,3461.3575,2349.99,3456.09" style="stroke:#181818;stroke-width:1.0;"/></g><!--link Coordinate to ISerializable--><g id="link_Coordinate_ISerializable"><path codeLine="447" d="M1375.02,3946.59 C1383.98,3950.46 1393,3953.97 1402,3957 C1568.47,4013 2036.6007,4042.5869 2309.4907,4055.6869 " fill="none" id="Coordinate-to-ISerializable" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="2327.47,4056.55,2309.7784,4049.6938,2309.203,4061.68,2327.47,4056.55" style="stroke:#181818;stroke-width:1.0;"/></g><!--link EndGameData to ISerializable--><g id="link_EndGameData_ISerializable"><path codeLine="460" d="M3835.31,3878.57 C3728.45,3904.18 3587.31,3935.81 3461,3957 C3202.69,4000.34 2919.467,4029.7203 2728.547,4046.9703 " fill="none" id="EndGameData-to-ISerializable" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="2710.62,4048.59,2729.0869,4052.9459,2728.0071,4040.9946,2710.62,4048.59" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link EndGameData to PlayerData--><g id="link_EndGameData_PlayerData"><path codeLine="461" d="M4005,3928.03 C4005,4002.83 4005,4101.54 4005,4173.73 " fill="none" id="EndGameData-backto-PlayerData" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="4005,3916.03,4001,3922.03,4005,3928.03,4009,3922.03,4005,3916.03" style="stroke:#181818;stroke-width:1.0;"/></g><!--link GameStatus to ISerializable--><g id="link_GameStatus_ISerializable"><path codeLine="485" d="M4175.89,2917.9 C4139.21,2985.79 4090.51,3062.39 4033,3121 C3593.47,3568.91 2917.7167,3891.6359 2648.1667,4009.7459 " fill="none" id="GameStatus-to-ISerializable" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="2631.68,4016.97,2650.5748,4015.2415,2645.7587,4004.2503,2631.68,4016.97" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link NetworkManager to Logger--><g id="link_NetworkManager_Logger"><path codeLine="541" d="M7821.7825,3111.3911 C7812.9925,3117.1311 7814.1,3115.97 7805,3121 C7483.72,3298.56 6370.13,3380.63 5934.07,3406.51 " fill="none" id="NetworkManager-backto-Logger" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="7831.83,3104.83,7824.6192,3104.7614,7821.7825,3111.3911,7828.9933,3111.4597,7831.83,3104.83" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link NetworkManager to Packet--><g id="link_NetworkManager_Packet"><path codeLine="542" d="M8115,3133.23 C8115,3192.48 8115,3238.21 8115,3286.64 " fill="none" id="NetworkManager-backto-Packet" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="8115,3121.23,8111,3127.23,8115,3133.23,8119,3127.23,8115,3121.23" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link ISerializable to PlayerData--><g id="link_ISerializable_PlayerData"><path d="M2728.4801,4091.7989 C3021.0001,4127.1389 3556.42,4191.81 3835.27,4225.5 " fill="none" id="ISerializable-backto-PlayerData" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="2710.61,4089.64,2727.7604,4097.7556,2729.1997,4085.8422,2710.61,4089.64" style="stroke:#181818;stroke-width:1.0;"/></g><!--link PlayerList to ISerializable--><g id="link_PlayerList_ISerializable"><path codeLine="587" d="M4663.7,3877.01 C4531.75,3903.79 4351.97,3937.33 4192,3957 C3657.76,4022.69 3040.291,4049.0008 2728.661,4058.8608 " fill="none" id="PlayerList-to-ISerializable" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="2710.67,4059.43,2728.8507,4064.8578,2728.4713,4052.8638,2710.67,4059.43" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link PlayerList to PlayerData--><g id="link_PlayerList_PlayerData"><path codeLine="588" d="M4783.4398,3942.2573 C4737.6598,4003.4273 4677.97,4069.5 4601,4114 C4470.03,4189.72 4299.8,4222.04 4174.82,4235.82 " fill="none" id="PlayerList-backto-PlayerData" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="4790.63,3932.65,4783.8325,3935.0569,4783.4398,3942.2573,4790.2374,3939.8504,4790.63,3932.65" style="stroke:#181818;stroke-width:1.0;"/></g><!--link TetrisBoard to ISerializable--><g id="link_TetrisBoard_ISerializable"><path codeLine="610" d="M2285.22,2909.59 C2275.42,3090.18 2271.47,3397.67 2332,3653 C2365.08,3792.54 2437.1108,3927.041 2480.8408,4001.461 " fill="none" id="TetrisBoard-to-ISerializable" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="2489.96,4016.98,2486.0139,3998.4212,2475.6678,4004.5007,2489.96,4016.98" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link TetrisBoard to Cell--><g id="link_TetrisBoard_Cell"><path codeLine="611" d="M2352.5958,2921.2838 C2386.5158,3022.1238 2427.05,3142.63 2461.98,3246.47 " fill="none" id="TetrisBoard-backto-Cell" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="2348.77,2909.91,2346.8917,2916.8722,2352.5958,2921.2838,2354.4742,2914.3216,2348.77,2909.91" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link TetrisBoard to Logger--><g id="link_TetrisBoard_Logger"><path codeLine="612" d="M2367.0694,2920.5535 C2407.5294,2997.2435 2461.96,3073.01 2543,3121 C2805.35,3276.36 4944.91,3380.79 5579.95,3408.58 " fill="none" id="TetrisBoard-backto-Logger" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="2361.47,2909.94,2360.7319,2917.1132,2367.0694,2920.5535,2367.8076,2913.3803,2361.47,2909.94" style="stroke:#181818;stroke-width:1.0;"/></g><!--link Tetromino to ISerializable--><g id="link_Tetromino_ISerializable"><path codeLine="644" d="M1362.1,3653.14 C1372.88,3673.03 1383.02,3693.14 1392,3713 C1438.59,3816.02 1376.99,3884.79 1464,3957 C1528.88,4010.85 2023.1407,4041.816 2309.2807,4055.566 " fill="none" id="Tetromino-to-ISerializable" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="2327.26,4056.43,2309.5687,4049.573,2308.9928,4061.5591,2327.26,4056.43" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Tetromino to Coordinate--><g id="link_Tetromino_Coordinate"><path codeLine="645" d="M1206,3665.05 C1206,3685.66 1206,3693.92 1206,3712.99 " fill="none" id="Tetromino-backto-Coordinate" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1206,3653.05,1202,3659.05,1206,3665.05,1210,3659.05,1206,3653.05" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Tetromino to TetrominoShape--><g id="link_Tetromino_TetrominoShape"><path codeLine="646" d="M1506.8919,3660.5819 C1547.8719,3693.6219 1578.37,3718.2 1612.82,3745.98 " fill="none" id="Tetromino-backto-TetrominoShape" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="1497.55,3653.05,1499.7103,3659.9299,1506.8919,3660.5819,1504.7316,3653.702,1497.55,3653.05" style="stroke:#181818;stroke-width:1.0;"/></g><!--link TetrominoShape to ISerializable--><g id="link_TetrominoShape_ISerializable"><path codeLine="660" d="M1962.75,3905.02 C2088.88,3941.19 2222.8568,3979.6002 2335.7868,4011.9702 " fill="none" id="TetrominoShape-to-ISerializable" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="2353.09,4016.93,2337.44,4006.2025,2334.1335,4017.738,2353.09,4016.93" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link BoardController to TetrisBoard--><g id="link_BoardController_TetrisBoard"><path codeLine="690" d="M1612.6611,2092.9669 C1747.0511,2222.7769 1978.74,2446.58 2138.04,2600.45 " fill="none" id="BoardController-backto-TetrisBoard" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="1604.03,2084.63,1605.5666,2091.6755,1612.6611,2092.9669,1611.1245,2085.9214,1604.03,2084.63" style="stroke:#181818;stroke-width:1.0;"/></g><!--link BoardController to Tetromino--><g id="link_BoardController_Tetromino"><path codeLine="691" d="M1531.32,2084.57 C1583.18,2286.88 1677.62,2765.89 1523,3121 C1514,3141.68 1506.1107,3156.5895 1493.2707,3175.5795 " fill="none" id="BoardController-to-Tetromino" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="1489.91,3180.55,1498.2648,3175.3348,1492.7106,3176.408,1491.6375,3170.8538,1489.91,3180.55" style="stroke:#181818;stroke-width:1.0;"/></g><!--link BoardController to TetrominoController--><g id="link_BoardController_TetrominoController"><path codeLine="692" d="M1463.38,2084.63 C1401.54,2231.73 1286.7851,2504.7188 1224.9451,2651.8288 " fill="none" id="BoardController-to-TetrominoController" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="1222.62,2657.36,1229.7951,2650.6133,1224.5576,2652.7507,1222.4202,2647.5132,1222.62,2657.36" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Game to ServerManager--><g id="link_Game_ServerManager"><path codeLine="728" d="M3071.1342,558.5856 C4187.3742,644.9456 7730.03,919 8759.88,998.67 " fill="none" id="Game-backto-ServerManager" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="3059.17,557.66,3064.8436,562.1109,3071.1342,558.5856,3065.4607,554.1347,3059.17,557.66" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Game to Logger--><g id="link_Game_Logger"><path codeLine="729" d="M3071.1987,551.1458 C3514.9487,583.2458 4246.8,664.31 4429,859 C4878.83,1339.67 4314.32,1741.32 4611,2329 C4862.48,2827.16 5438.31,3220.2 5663.91,3360.46 " fill="none" id="Game-backto-Logger" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="3059.23,550.28,3064.9258,554.7025,3071.1987,551.1458,3065.503,546.7233,3059.23,550.28" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Game to Clock--><g id="link_Game_Clock"><path codeLine="730" d="M3070.672,608.3281 C3302.382,664.5181 3602.47,748.17 3865,859 C3923.47,883.69 3985.01,917.86 4035.63,948.42 " fill="none" id="Game-backto-Clock" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="3059.01,605.5,3063.8983,610.8014,3070.672,608.3281,3065.7837,603.0267,3059.01,605.5" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Game to GamePhysics--><g id="link_Game_GamePhysics"><path codeLine="731" d="M2371.2589,628.7857 C2063.0389,714.5157 1621.27,837.4 1310.24,923.91 " fill="none" id="Game-backto-GamePhysics" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="2382.82,625.57,2375.9676,623.3241,2371.2589,628.7857,2378.1113,631.0315,2382.82,625.57" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Game to TetrisBoard--><g id="link_Game_TetrisBoard"><path codeLine="732" d="M2745.1136,811.0467 C2777.8436,1249.3567 2816.26,2084.18 2657,2329 C2625.78,2376.99 2585.62,2350.77 2543,2389 C2476.58,2448.57 2419.58,2529.72 2377.22,2600.38 " fill="none" id="Game-backto-TetrisBoard" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="2744.22,799.08,2740.6779,805.3612,2745.1136,811.0467,2748.6557,804.7655,2744.22,799.08" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Game to BoardController--><g id="link_Game_BoardController"><path codeLine="733" d="M2372.0458,637.7296 C2259.5658,688.0396 2155.56,755.92 2083,859 C1895.69,1125.11 2145.3,1300.13 1988,1585 C1916.46,1714.56 1784.88,1819.39 1676.95,1889.33 " fill="none" id="Game-backto-BoardController" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="2383,632.83,2375.8897,631.6284,2372.0458,637.7296,2379.1561,638.9312,2383,632.83" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Game to TetrominoManager--><g id="link_Game_TetrominoManager"><path codeLine="734" d="M2371.4687,622.516 C2238.4787,672.556 2106.53,744.74 2012,859 C1917.11,973.7 2029.67,1072.53 1931,1184 C1880.16,1241.43 1813.32,1284.57 1742.76,1316.96 " fill="none" id="Game-backto-TetrominoManager" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="2382.7,618.29,2375.6757,616.6592,2371.4687,622.516,2378.493,624.1467,2382.7,618.29" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Game to TetrominoController--><g id="link_Game_TetrominoController"><path codeLine="735" d="M2427.5932,808.1941 C2315.3732,931.7841 2206.65,1078.8 2144,1244 C1972.85,1695.33 2364.5,1927.88 2096,2329 C2085.37,2344.88 1663.66,2536.98 1396.84,2657.41 " fill="none" id="Game-backto-TetrominoController" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="2435.66,799.31,2428.6652,801.0631,2427.5932,808.1941,2434.588,806.441,2435.66,799.31" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Game to Player--><g id="link_Game_Player"><path codeLine="736" d="M2729.7234,811.11 C2730.3234,1026.68 2716.63,1323.78 2649,1585 C2623.47,1683.63 2574,1787.58 2532.22,1864.93 " fill="none" id="Game-backto-Player" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="2729.69,799.11,2725.7067,805.1211,2729.7234,811.11,2733.7067,805.0988,2729.69,799.11" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link GameManager to ServerManager--><g id="link_GameManager_ServerManager"><path codeLine="752" d="M8893.9071,213.9227 C8922.6071,370.2327 8977.35,668.41 9012.31,858.78 " fill="none" id="GameManager-backto-ServerManager" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="8891.74,202.12,8888.8893,208.7437,8893.9071,213.9227,8896.7578,207.299,8891.74,202.12" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link GameManager to Logger--><g id="link_GameManager_Logger"><path codeLine="753" d="M8815.39,213.051 C8710.87,418.081 8513.32,890.42 8743,1184 C8811.28,1271.28 8916.72,1156.72 8985,1244 C9031.69,1303.68 9031.83,1525.43 8985,1585 C8915.18,1673.81 8836.39,1589.49 8738,1645 C8364.93,1855.49 8431.77,2117.99 8059,2329 C7961.82,2384.01 7909.72,2329.85 7815,2389 C7455.55,2613.45 7567.87,2903.78 7204,3121 C6990.74,3248.31 6271.44,3351.89 5934.24,3394.74 " fill="none" id="GameManager-backto-Logger" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="8820.84,202.36,8814.5513,205.8888,8815.39,213.051,8821.6786,209.5222,8820.84,202.36" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link GameManager to Game--><g id="link_GameManager_Game"><path codeLine="754" d="M8710.6984,116.755 C7913.5784,171.685 4207.14,427.09 3059.34,506.19 " fill="none" id="GameManager-backto-Game" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="8722.67,115.93,8716.4092,112.3519,8710.6984,116.755,8716.9592,120.333,8722.67,115.93" style="stroke:#181818;stroke-width:1.0;"/></g><!--link GameManager to Packet--><g id="link_GameManager_Packet"><path codeLine="755" d="M8970.39,202.13 C9116.44,359.3 9377,686.5 9377,1020.5 C9377,1020.5 9377,1020.5 9377,1988 C9377,2241.21 9438.13,2945.09 9256,3121 C9122.03,3250.39 8594.05,3114.68 8420,3181 C8357.69,3204.74 8302.2683,3241.854 8252.1683,3282.964 " fill="none" id="GameManager-to-Packet" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="8247.53,3286.77,8257.0249,3284.1532,8251.3953,3283.5983,8251.9502,3277.9687,8247.53,3286.77" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link GamePhysics to Gravity--><g id="link_GamePhysics_Gravity"><path codeLine="785" d="M787.8721,1125.4339 C725.1321,1163.2439 663.71,1201.49 600,1244 C573.16,1261.91 545.06,1281.55 518.03,1300.92 " fill="none" id="GamePhysics-backto-Gravity" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="798.15,1119.24,790.9464,1118.911,787.8721,1125.4339,795.0757,1125.7629,798.15,1119.24" style="stroke:#181818;stroke-width:1.0;"/></g><!--link GamePhysics to BoardController--><g id="link_GamePhysics_BoardController"><path codeLine="786" d="M1658.24,1119.05 C1784.89,1150.72 1890.28,1191.67 1932,1244 C2026.47,1362.51 1992.27,1445.94 1932,1585 C1876.58,1712.88 1762.9396,1815.1348 1664.6496,1885.8848 " fill="none" id="GamePhysics-to-BoardController" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="1659.78,1889.39,1669.4213,1887.3786,1663.838,1886.469,1664.7477,1880.8857,1659.78,1889.39" style="stroke:#181818;stroke-width:1.0;"/></g><!--link GamePhysics to TetrominoController--><g id="link_GamePhysics_TetrominoController"><path codeLine="787" d="M826.57,1119.18 C788.69,1153.79 752.38,1196.22 732,1244 C672.54,1383.4 719.2,1433.99 732,1585 C760.32,1919.25 725.45,2021.28 859,2329 C913.42,2454.4 1008.3071,2571.9557 1082.3971,2652.8357 " fill="none" id="GamePhysics-to-TetrominoController" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="1086.45,2657.26,1083.3202,2647.9217,1083.0726,2653.5731,1077.4212,2653.3255,1086.45,2657.26" style="stroke:#181818;stroke-width:1.0;"/></g><!--link GamePhysics to TetrominoManager--><g id="link_GamePhysics_TetrominoManager"><path codeLine="788" d="M1054.21,1119.15 C1111.09,1179.42 1179.9019,1252.3264 1236.7619,1312.5764 " fill="none" id="GamePhysics-to-TetrominoManager" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="1240.88,1316.94,1237.6119,1307.6492,1237.4482,1313.3036,1231.7938,1313.14,1240.88,1316.94" style="stroke:#181818;stroke-width:1.0;"/></g><!--link GamePhysics to Tetromino--><g id="link_GamePhysics_Tetromino"><path codeLine="789" d="M800.27,1119.12 C758.14,1152.88 718.14,1194.85 695,1244 C652.05,1335.23 539.51,2800.79 723,3121 C762.75,3190.37 820.9675,3242.2453 888.8075,3285.1053 " fill="none" id="GamePhysics-to-Tetromino" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="893.88,3288.31,888.4078,3280.1213,889.6529,3285.6394,884.1348,3286.8846,893.88,3288.31" style="stroke:#181818;stroke-width:1.0;"/></g><!--link GamePhysics to SoundSender--><g id="link_GamePhysics_SoundSender"><path codeLine="790" d="M1503.5,1119.07 C1662.76,1152.78 1836.29,1194.74 1993,1244 C2099.85,1277.58 2211.9945,1326.0909 2292.6245,1363.3909 " fill="none" id="GamePhysics-to-SoundSender" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="2298.07,1365.91,2291.5811,1358.5009,2293.532,1363.8107,2288.2223,1365.7616,2298.07,1365.91" style="stroke:#181818;stroke-width:1.0;"/></g><!--link TetrominoController to Tetromino--><g id="link_TetrominoController_Tetromino"><path codeLine="805" d="M1185.52,2852.68 C1188.64,2938.61 1193.1224,3061.7639 1197.2224,3174.7239 " fill="none" id="TetrominoController-to-Tetromino" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="1197.44,3180.72,1201.1109,3171.5808,1197.2586,3175.7233,1193.1162,3171.871,1197.44,3180.72" style="stroke:#181818;stroke-width:1.0;"/></g><!--link TetrominoFactory to Tetromino--><g id="link_TetrominoFactory_Tetromino"><path codeLine="815" d="M320.68,2803.51 C371.29,2878.89 478.81,3026.97 600,3121 C688.17,3189.41 789.3252,3245.2577 888.3652,3291.5877 " fill="none" id="TetrominoFactory-to-Tetromino" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="893.8,3294.13,887.3428,3286.6933,889.271,3292.0114,883.953,3293.9397,893.8,3294.13" style="stroke:#181818;stroke-width:1.0;"/></g><!--link TetrominoFactory to Coordinate--><g id="link_TetrominoFactory_Coordinate"><path codeLine="816" d="M310.79,2803.66 C375.65,2947.82 587.31,3385.72 876,3653 C922.75,3696.28 976.4374,3730.0806 1031.5774,3758.7706 " fill="none" id="TetrominoFactory-to-Coordinate" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="1036.9,3761.54,1030.7624,3753.8375,1032.4645,3759.2321,1027.0698,3760.9343,1036.9,3761.54" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link TetrominoManager to Player--><g id="link_TetrominoManager_Player"><path codeLine="831" d="M1789.5558,1515.6305 C1897.6558,1549.0105 1998.59,1589.02 2096,1645 C2195.81,1702.36 2290.26,1791.93 2358.06,1864.87 " fill="none" id="TetrominoManager-backto-Player" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="1778.09,1512.09,1782.6427,1517.6822,1789.5558,1515.6305,1785.0031,1510.0383,1778.09,1512.09" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link TetrominoManager to Tetromino--><g id="link_TetrominoManager_Tetromino"><path codeLine="832" d="M1000.1959,1517.8373 C940.3159,1550.5073 895.66,1588 859,1645 C681.54,1920.88 699.64,2825 841,3121 C854.78,3149.86 872.92,3176.8 893.75,3201.74 " fill="none" id="TetrominoManager-backto-Tetromino" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="1010.73,1512.09,1003.5472,1511.4523,1000.1959,1517.8373,1007.3787,1518.475,1010.73,1512.09" style="stroke:#181818;stroke-width:1.0;"/></g><!--link TetrominoManager to BoardController--><g id="link_TetrominoManager_BoardController"><path codeLine="833" d="M1361.18,1512.28 C1392.85,1617.34 1441.4183,1778.4153 1473.0883,1883.4753 " fill="none" id="TetrominoManager-to-BoardController" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="1474.82,1889.22,1476.0522,1879.4485,1473.3769,1884.4328,1468.3927,1881.7575,1474.82,1889.22" style="stroke:#181818;stroke-width:1.0;"/></g><!--link TetrominoManager to TetrominoController--><g id="link_TetrominoManager_TetrominoController"><path codeLine="834" d="M1055.06,1512.11 C998.14,1545.21 945.43,1588.63 912,1645 C834.46,1775.73 869.56,2183.05 912,2329 C948.12,2453.23 1028.9767,2571.1809 1093.9267,2652.5409 " fill="none" id="TetrominoManager-to-TetrominoController" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="1097.67,2657.23,1095.1811,2647.7008,1094.5506,2653.3224,1088.929,2652.6919,1097.67,2657.23" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link Player to PlayerData--><g id="link_Player_PlayerData"><path codeLine="852" d="M2369.9578,2118.7933 C2316.8278,2189.2933 2250.51,2266.67 2171,2329 C2124.07,2365.79 2083.21,2338.82 2051,2389 C1804.31,2773.35 2016,2959.29 2016,3416 C2016,3416 2016,3416 2016,3836 C2016,4015.83 2145.62,4041.07 2310,4114 C2579.63,4233.63 3461.48,4246.92 3835.19,4247 " fill="none" id="Player-backto-PlayerData" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="2377.18,2109.21,2370.3745,2111.5943,2369.9578,2118.7933,2376.7634,2116.4091,2377.18,2109.21" style="stroke:#181818;stroke-width:1.0;"/></g><!--link Player to ThreadSafeQueue--><g id="link_Player_ThreadSafeQueue"><path codeLine="853" d="M2494.75,2109.37 C2537.86,2264.41 2609.8224,2523.2094 2647.9224,2660.2094 " fill="none" id="Player-to-ThreadSafeQueue" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="2649.53,2665.99,2650.9723,2656.2473,2648.1903,2661.1728,2643.2648,2658.3908,2649.53,2665.99" style="stroke:#181818;stroke-width:1.0;"/></g><!--link ServerManager to NetworkManager--><g id="link_ServerManager_NetworkManager"><path codeLine="877" d="M9061,1184.03 C9084.19,1467.45 9084.58,2050.58 8742,2329 C8627.67,2421.92 8542.99,2314.32 8416,2389 C8409.98,2392.54 8419.0891,2386.3899 8413.2091,2390.2399 " fill="none" id="ServerManager-to-NetworkManager" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="8398.15,2400.1,8416.4958,2395.2596,8409.9224,2385.2201,8398.15,2400.1" style="stroke:#181818;stroke-width:1.0;"/></g><!--link ServerManager to SoundSender--><g id="link_ServerManager_SoundSender"><path codeLine="878" d="M8759.83,1032.22 C7568.33,1073.35 3006.71,1231.44 2934,1244 C2786.24,1269.52 2639.6143,1318.9277 2532.3043,1359.5477 " fill="none" id="ServerManager-to-SoundSender" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="2515.47,1365.92,2534.4284,1365.1592,2530.1802,1353.9363,2515.47,1365.92" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link ServerManager to PlayerList--><g id="link_ServerManager_PlayerList"><path codeLine="879" d="M9163.7987,1194.3621 C9283.8287,1379.0721 9448,1684.68 9448,1986 C9448,1986 9448,1986 9448,2756 C9448,3167.45 9549.12,3407.4 9219,3653 C9049.46,3779.13 5865.64,3822.85 5046.09,3832.03 " fill="none" id="ServerManager-backto-PlayerList" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="9157.26,1184.3,9157.1753,1191.5106,9163.7987,1194.3621,9163.8834,1187.1515,9157.26,1184.3" style="stroke:#181818;stroke-width:1.0;"/></g><!--link ServerManager to Packet--><g id="link_ServerManager_Packet"><path codeLine="880" d="M9080.8,1184.35 C9182.56,1626.71 9432.05,2841.6 9174,3121 C9059.96,3244.48 8576.83,3120.54 8420,3181 C8357.94,3204.92 8302.692,3241.9485 8252.652,3282.9285 " fill="none" id="ServerManager-to-Packet" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="8248.01,3286.73,8257.5074,3284.1223,8251.8783,3283.562,8252.4386,3277.933,8248.01,3286.73" style="stroke:#181818;stroke-width:1.0;"/></g><!--link ServerManager to Player--><g id="link_ServerManager_Player"><path codeLine="881" d="M8759.61,1024.06 C7861.58,1030.82 5109.52,1065.98 4753,1244 C4576.29,1332.24 4645.26,1497.87 4468,1585 C4161.84,1735.49 3256.54,1533.85 2934,1645 C2801.68,1690.6 2678.8338,1782.4357 2589.6738,1860.9157 " fill="none" id="ServerManager-to-Player" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="2585.17,1864.88,2594.5686,1861.9361,2588.9232,1861.5764,2589.2828,1855.931,2585.17,1864.88" style="stroke:#181818;stroke-width:1.0;"/></g><!--link SoundSender to Player--><g id="link_SoundSender_Player"><path codeLine="889" d="M2402.35,1463.16 C2412.17,1550.73 2432.701,1733.7474 2446.741,1858.8874 " fill="none" id="SoundSender-to-Player" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="2447.41,1864.85,2450.3816,1855.4601,2446.8525,1859.8812,2442.4315,1856.3521,2447.41,1864.85" style="stroke:#181818;stroke-width:1.0;"/></g><!--SRC=[xJrTSziuak_-5QnDbKTAdAtTsRshgrH6LSw7CzwDCxdOkxFxfA99IEAP8ZK4QKUN6__sGpS0eXi0ALaPpzNSNHui4jq0WKPtez7TGBv9dk_-bxmk2r6r-w0U7MLbAcNogawR_9EeSj689lbobAX_ptZfHBRvYnTobJOYds_QvgN-oaLQfKlHp98CNqyI7-rAj4qXiQbPqhgNaoIhAzacSl7YnTz5rjRDjrrIL4LRfELbyPzYQZfnptjXYs_h8a-wJPws0X7Ecdhz5rbN4zrgLTQhTLfLBrxyXofCZgy1vqtQfYVuGTtSLTeiHPiSj_WRQHdwCObqCvqczQrecY8NHrZhkQvbkgzgNQxIZP3nkgR6egpJLX5XlUbQyLgKvSZNi9H-AM_IkydGIEWOBrir3gbc1NvCGq7dzvhQ0LmslqXcYdYBWtWPFDEFgQ7RwPtDPibIzSmqiUxQzBeKkYdr8ZxhBrp0uz7FHqUSRvy__wzPyab8HKUeva7hNZBCm29mCfXORTBJ8oiwjB2N75eu8PEvIA1p9mahsjHIiKrTdP1g5tKkahNw4meK8AavwUM3VOinSICMZP2hZwPztf5At5s6VL6b5fqr9KNxGzUMHIMkLaLsKmaf9vg1M_i-WF-wBkk6i3M-9ySP_0HLAZL1sOt5Xe4lkYg3thm4dCbqfcgcPNcTPZUiyYgjybAylLMpIxw5xycnk4NDvCerkNuigho-Iuxly3SY_g0lUeh6fq596pmeB2gTklexKQyLFsqdKmfhn7LNbFbPWRL2W24RX_tIufwsHQQqbL8_glDodjNTe7mRTbD_AK8mBRMUkjTcSYmkybQZfFMqQT9jib2ZXlSY4vAWV5BibrRBKglDfDOam1VM494XK-v9JDC_WdOuOh9f9TWAxhjqBO1SdGp4DmGXySzguAPSBDAkRE6bby58XGENaw2IQthY7fEbv1pt2p68Rl5LrxPgqPHPtNX5C2tIArBILGAr8_Jq5N84vVU_dn5onp1WtlItUfrxeHRQkCaIG2O3gjQilcRPtN-oubEbT1Si7VMwgEf9R8L4YB9_JeOvrlP1zqnDsuz5tgucTF4dmEz5iLor7fIDLI7rcj-YFHhBH5PgCp9Sgfd5OsWUasmxFrzfGkXFlmD3GZ5co2q-NuOOmN8VeW3dzbFB3EdBh16YucQqBfiChJud-zbWvlNhTGjTBzrAQHPAtLVphUHuRJuQRKYJUd1SOvhD612vADlqgbYBiPx-LMm_Dc1qU9sTFiY4jORV8POiGGnuOPQiRT505HyzBQenz50Dpb3-Elcca9iotT9weRXPozWm8hAxVcRb0nOnWGRsC845L0Wmng7X61aAY1TZH2jYRwiSgt8XOwKZOkRnjgIlXmdXFV_qz574x24IynKY-O0DxnWX3zXM6YA2oPsedgHaTRWIdzKsesXB4HJMRLf-h9KXAttGKZK69FBBqOBv9DPgEBaFMnHLMhv7UoQo_XYiMGBofrP5i8uyM-YdhcYDgSBAeSRf4cIU0g_hkbGS8iz4cwq4UYT0SZb_Kzdb490XBY0Xd4jt22TKZq2jrKNiPIvqUqZS_nLnu8od7dgJE9n7KXpHSeRSx-lhwwr7RrBs69R4RsTwdADDywYSV9ttBbYkiLMzJkDaZgEffRbftzc9VvX1Oj1rFus5N3HPAJwbUT7927YJvdbHBICwolOdWwquMBRG7mcSIBc9iY8j9oBl5tCzGg7337mXgixZNrVqgwxG_zjrpwX8F1yOt65iEYG1k3pl8IbgG9KQoHwOi9PQFKfOYJ8lAIQywvLorlM0SSxzCLMah9QlTL_LTjHZum7u__FquJnzn0qcdvrCCNWMIUaGLGzbRVIAOlV4vqrZjEtdURrOID7ETVFZo5iFMV7k43DHHXx28LmzXiAvU0oJ2uDXzzCkBsfBHSlZjB1VNE-ZfJZ1OE9UrbsLJ_3lrNOZabRzET5cRbdN6uQlo9MVbYKYIyzzBjjwyqfDzR81w4KdYwnNPjXQsspVg_hnxv7WWLIxrsgP72-AKcpITjL_njLPpxEkKIpTkWyYq22-hvT0bQSb_h9TTxfvsJUZtMNu-gfRB72BFvVkLUvJiw-3ApQR5PWxtPNUqTHtr_cP-g8HJHIXJjgg5ZyewoKARHNj0EX5bkI0A1-RkDBq8IhZQ3WM8BqW08X_ruZaAVJBl8JEa7MhdI2EIDfRX-Z0EeIGMhNqHCHNCZBjz5_K9894oQD-JqXS2yDQW_4zYBX0Im617ZtsjMjxXYC55GRa1zVnAoEOt76yN-pdPnSSfVh6HKTfgLCkyM8z8XBwE5QzivjMp_-Dv6YLd9JYZRZkbbn5rTMy4PaeRiLy9PJ1VYtITX03Wn-6d1_LeC0rli7VeHhQBJ0l2za-g1vi6CrwyQ1wQZOFgLOf8PYtVR3YW16gINz8hUjU2BLssrtvAfKtbx2b-Zu-JG0V0LsgvMC0RCpFIKoGHQFibjCy1pTpybtokx9MqhQgPVkxawHJall7VvshlLVTj0huns__zET_OItdXRIDst9SgiwbMOX5xZ7hHwJcUyKkoDBkbJUmIhN_TH9DQV5HYKDdl8BHopzrGhQ61O7YlZoWq_slOklConSlrAinD2qow3KrX8lj-HiIBqSBIHi7YiHAi1MbFrFIHo8x2cys0sCLSACAjqolHTcl63Zk76JzRGKRNhjkl_sWA2fWvTRp2izKXwMjOl_i9LIV9OMR8uEZ9mETaRqBaQWW6XabqwZbGuRB4SXS7ogY4J62e-Xt_eR2hbQDK3PEkX3_tebElEJJQI8KshpOiuPmpC7gOIzQh6pQwCLda6Q8yKfXVEggIatCMPbQZqHNoM9P2R3nr8IfTQ1r-dQWfyCXqrd25HRQHdnPGKjQpVTTtTnOqvPZU47c4EZcsmE2uULcE5BJ6qciRLHmTaLqKST-ENH5RYsCb1c9r10gZs1DC874Fq-Isw9fkxJSqwdmNV878AtkfRVXtTF7U- -5G9pvf9ZxZKkRu4C2Qz-Lq3uVjBs5SKJQ6jhX3g3ltEIEVcO7cUty6CkFsErVQPq_eTOvDajRZMGXFg6Z9VsOsZw6WjzeURTmEyKaAuQ0OhHZjcHN5Me9qewV_lEpnDaCm9DqnqoYzdIJxF1t-YKvut0MjyRddfpkswfXDKpZW4VEy-3SuYLfRbC48hDSuVJx1DFuiqGRWVv-ubJPwBTYlCrzdKdJFNn53zhlCV5NIuFMeg5UwClP1Z72Kzxscenqa6wMS99vavAdAI5SP87KbNJ7uXjFKgZedkFURtwRDWLg_UnsS4tLNp0BgcDykXQPRXbMPXlQdfMDvSM1m8ddYWdIAXECN-s66X3Cyp0B3lXMFg9lPQ1D1JzShz6ipVDAxquH24_Sj2-LZU4uXOs-znxTnujvgVwYHpxGt8hPHIjYTPBZUYCQDPdDTtjMnm6jrRmcXaRuGbHrJqCar0uwxEP__J9BiBKpCsTol9xh1MJkuuCSzBLyiz_HX7gzhgk774qulnGDnZMepMJNt7i6jNnjeTu6I1fKmJTYRFtEXSEAdoI0v8If7h3ke8UWUwYWFzCCSLMiAOU9_f19f_FfN27n7vd2kcxoeWBKh7_K8DXlRGgrlpxFNK5zLudc_8t-pZFCIlQRCFIvDodB-6BsRZ_esfmq1lPHVyeZcrbdB11m2_i5Do18aCOCS5RPKK71yI7UkAvAo3FbS5sLqDI3sr4XVJpOs_McjRdPptQnYXVKs9DNu2_o2h80sY-SdJK0FVDkYdlVMPtT49-PUfjG7RaMgLGIkLRhS-2VZUpbHUNMLxqnWp-YJ3TIv1T5rjHIm78Lz_bbgwQkQhK8ggL-le6CcvUiV5KiLtEb7kgom-KkW-wQm3YO1tCMauaEOEws7uHl-_7tHVqeI17Cx-U_fwLsiMxLa-UQ-CV4A_XdO7xzGxVY5_yJYxU-UHN3bj0imzvF0oKFOYT3IVmyUTuYdpd2XTocT1A1Wu7CF-0bsA7tumkXcfzjPMX94wrqKP1ZfOkzzAfdp0daTk0pvaVvfMdOgsywofXaKhZp0g2Bu1j6ec524ezHUB9W4Zaym3r_SbLtPOu4-zi6-GhyTKKZylT0uBEwCJ1mIFx1uszCJ_D8P41OAmwwWYd6rb-3EHNuB6qB1EC7PGiNCjQcszT0Lw1gS4P8LqEUyUKkx0hoe8ysr1KytF8hYI5r1-9OI0fXBpYqenGttdz-e28kp0GUuy4-Zsn9zxdwbIqaT2TuR-2-rrmfTZ4lwsNCab_B9J-XIA7O2L3lJhjpLrtVCzqoqAJI2FC5-gUhRCitDWvHhSdIdXPuvhNhv6kWtEnKbuLijNTFA5jXehrr9Z8RHhjux68wOm9RIBDtyuzb47f09E5FtyxRUbviRlyyiQz9iPahRkxJEy1__NsjFlLqgH_uEJIZD9sN6q-YmQEN2IVLigzxwtUTObqtQfkIfR8TG3KUdKWm_0dfASHAJA6fkaaRALYRs6CDVAheRPvFgB- -xffCm3DpKMdlX6cBnuvexGsjHmtxkW84u-UVU1LwRrwqqXiNsXcfnm9NXkKcqn1QRnoGUyBKqYp00GuRCU2BVvktU_7WB2aDzxBTsK_eMTTeCpXJjrHBzrA_Zo0MLGQEzXYYtk_PbWRY6BP-08xuGcnJhore1xvjEufl_3D6UOGE6kk_KH8n23Gnon3E_3IO5QecSn01lk5bQ78VAdu6C6ZQowQfCo4by9ZsmlLF9em_ZM2Vy-dYnqQX7p_mYUyHg2HcQhYjS2KZ8ThdZfSvanF0fTjhaD9FchOJjBwyDO3ajqGW9eBoZRzo35jUfkTsQM5gGwSAKQMXbdm8wbPTMMxQNWL7AuNHIoEfCsLQ7jWcxfo_gZ_ST3sMv6rtkz71jFMdzCvyCM8amVRPD4jr8i_PY5C9Ga5XvePdOy5YbcunHqpYhGvUwDpHOAb_FGJN9xCi-fjQIiNjHaHogViUazCeNFrh9v1XjH5UTB5ayLcfwNp0f_Ke6vs8HQPtLsYIEJEqo0ViMMFOk03vptnS6FZ-4gGqEEihKlOO0nrYFBglT6aMClOfz23tS6-VeSkjOdHJUgp9wHcLiFNTMIF2TB5Ti28u8NLa9q2WtaQr3nFqf_ZwgI9bk5TQQJta8bmKWMTwGZA7IQ-ARGvZnvODA7ve-G67VE5mB-P_DONNAvmyqzkeliAOB3fDZ9F8sp1_g9iribdlyHbJKB-aS4PpJ74oW9BaVONaE-1ij7UjYYL9jp5qL2n6UIJ2OnJyr5waG0l33DK-XuFndCuwcmOblgjQ7vHdIPLxPGv9FvFWFlmg-HQwfvrdaSqbGJlsyCWrBsDkxcGmhmMJMt7JXaznSV5TxdsMrskr6rgAFEOkUcMtSiQh_lZiEnAdI890XUvgfllliQEcn7xpwsgHQQ4JHk8T1DVGJNU29pcCp9BBGNxYSoNBGylIwa8fVbe4Rd2HdrTAAMVcl8xdnw1Zx1lNDsLX7-Ru7MbbL4lKW8Hgu5CUJd00UwBRZIsGLPrq7GYiOT9uyNvo2QZ3otIane1iS6xPgoL8IQUVVppxmvp4kXMDxVlH3dMjkwWvZ4wndeZ8FFTJnXFFafTNiozicUxaQdALtAPb9vYUsDGRLNxC05ZZBYtQULef6OXWO5MXGsO3ffCtMErMk8AJNEfX7WaSmz_vhdG9LJJVFxvyYTcUoLwuxCuEPU0gofUbV_sTAv_ilY-2trb7geQcobbQbieQl_8IiKVkZZ7dLFgIU9kYwX4aMV3Kny1JYXkUR2Mocxveye1FdXYpyHIzKKcQwMCDWoqu2X25vWhZWjr7SoSagisJHFRih1Thd_9OL7vQvUXuFrFxOVJEUmny9zARyOj17YcvsP35tk91M3Dw9mU1ypjfHg6kd8QhMA1gegN97R33p2iMj-fPp0OZQ4G_leNIFseB7MwS-dFKGUWQ2j_NIY-X7bhKJIQcaUlC2fFXz9fSQER21Usga7EBCkoyQ-iDVCgQDnY6zwwJY9hi0RNWDVAPdbGpRFRIvO4W5J-kjhB8PBBHls7s-TBUs31yZOrEDBSd7LklP5V57M8xTiKDhNhD2xxc_aZBCpClnvvwGitENUicpn4AnmydCVUfnlPuycHCpRIZof1zesssbvlqpcdaAEyRPDJAUDRnVR4kV4zk7w51Gfqlj2NBtHW-ghtGmuIM6IQ6HzCowqh5V3gcZ-gsGaLuuiAOOH_FwWQjsJnOQBWl7KL6Ez9DC5DdC58fSSLcxzY_ezYvLo8Ohf1gmhxGOqEEpQGWXCIgwIaxeahIZroIiabK2J2L6Or3NbhDrmSYHy9rZOZdzuIQq-8TghQG2a-N9dnBnnwVoeW_to-6TrOOdf5urwItHRjrzDNlVWgFAGQrV15rw1KL13QaC8XlYiMYK1nFMgBtBBhMWWDO1dPUjMh4QVbM9qrD_1N8dGQ77jvS51NhuYZokRw-OQyAUTs1QNpZ1lI9RxcNaLRyn0IMlgKQJlEjpjgYILvuUiVqwMz89kV_fMiLbGHJfizbNwB9eBWANhX1iDcKMpkp-wqbWnScxBjodHomMCPjQEpzzt2dTADMblsMYz_c8CqAUV2AUF9WG-5_PkWcu4y-LHQvs7FStWQhBd_xf1XJddPrC7hQg1jwjmAJUsfpW67-GTozHxyOiI36NDZqDA0x2FXhKdDgbp-hyC37PeRFoc4nYraW53vaRaHnwEeQHGWWXFv7WNylukQ8m2Oi2ZG4x3Viskqv9Yh7H5PmKRqECW6fe_ImfgWFThSxnRNZvN3ndXpGZh7zqqggVUfwtx54zONTxTwXSudT5bxZ7llmngVCtJZeGmWuw2m56TsIqqRyT1Nro61Q2Os_H2oQMFPJfWPqGXWJsc5ESLCY1zipcWGQ8jL0EtDFkXqD7tGK76Re-q8QYbIGYpW8qI4Ss2r-e8V5T-vC7ys806szJZzVDOMGqrtXB7qHlkU0ytUx-qN6iAan6ko87W-i6v7-oUY533fb11zVRVUxrBjN09634vonxIV6F0oX9_DhssFN3p3s3u-vns4HqQ3RDt_5YoADU1xDC7WQYJbH5FMJifHbWyw3IoJX8fvn56QdfsimJlo52H9beWSYnLrmx6Re4f1Yy18GivNrinb4XK4JOtlR4uL4XnzJTvCBx9WASTI1knSeyimi3ZAy1oCtrzEQkV8oJKnfx4Q4_jmrypFqvwvfwMJqdfLxZZjoYG1pW_ctX4dx5B-fhh_8xAgEPF0uHRntWyvrnsyOyxkqexQ-dqMn7jxMCfd6CjtULlhbrNQawzu5BO7MW_z9QMSQwBC1zopDiA9798nEFxrDYnBYUaK-uDyCqiMiwn5j2GqzhU3OnyqablOTlP25Pc6F9uApANYoPnPuNmcER3CkZrrD4i6W9Zi7U_UFS23nd4K0nczPWDDgeKnPjZ7xyWkm_0F4RNgGG20zIQVfiFuR]--></g></svg>